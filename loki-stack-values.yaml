# Loki Stack Helm Values - CrashLoopBackOff Fix
# Use this file with: helm upgrade loki-stack grafana/loki-stack -f loki-stack-values.yaml

loki:
  enabled: true
  image:
    tag: "2.9.2"  # Stable version to prevent crashes
    
  # Resource limits to prevent OOM kills
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 256Mi
      
  # Persistence configuration
  persistence:
    enabled: true
    storageClassName: local-path
    size: 10Gi
    accessModes:
      - ReadWriteOnce
      
  # Security context for proper permissions
  securityContext:
    fsGroup: 10001
    runAsGroup: 10001
    runAsNonRoot: true
    runAsUser: 10001
    
  # Optimized Loki configuration for stability
  config:
    auth_enabled: false
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095
      
    # Distributor configuration
    distributor:
      ring:
        kvstore:
          store: inmemory
          
    # Ingester configuration optimized for single node
    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 1h
      max_chunk_age: 1h
      chunk_target_size: 1048576
      chunk_retain_period: 30s
      max_transfer_retries: 0
      
    # Schema configuration
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
            
    # Storage configuration with safe paths
    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/boltdb-shipper-active
        cache_location: /loki/boltdb-shipper-cache
        shared_store: filesystem
      filesystem:
        directory: /loki/chunks
        
    # Limits to prevent ingestion issues
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      ingestion_rate_mb: 16
      ingestion_burst_size_mb: 32
      max_streams_per_user: 10000
      max_line_size: 256000
      
    # Table manager configuration
    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s
      
    # Query configuration
    querier:
      max_concurrent: 16
      
    limits_config:
      split_queries_by_interval: 30s
      max_retries: 5
      
    # Compactor configuration
    compactor:
      working_directory: /loki/boltdb-shipper-compactor
      shared_store: filesystem
      
  service:
    type: NodePort
    nodePort: 31100

promtail:
  enabled: true
  image:
    tag: "2.9.2"  # Match Loki version
    
  # Resource limits to prevent container issues
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
      
  # Security context for log access
  securityContext:
    readOnlyRootFilesystem: true
    runAsGroup: 0
    runAsUser: 0
    
  config:
    server:
      http_listen_port: 3101
      grpc_listen_port: 0
      
    positions:
      filename: /tmp/positions.yaml
      
    clients:
      - url: http://loki-stack:3100/loki/api/v1/push
        timeout: 60s
        backoff_config:
          min_period: 500ms
          max_period: 5m
          max_retries: 10
          
    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_controller_name
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            action: replace
            target_label: __tmp_controller_name
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              - __meta_kubernetes_pod_label_app
              - __tmp_controller_name
              - __meta_kubernetes_pod_name
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: app
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_instance
              - __meta_kubernetes_pod_label_release
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: instance
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__
            
  # Volume mounts for log access
  volumeMounts:
    - name: varlog
      mountPath: /var/log
      readOnly: true
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true
      
  volumes:
    - name: varlog
      hostPath:
        path: /var/log
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers

# Disable other components since we use kube-prometheus-stack
grafana:
  enabled: false
  
fluent-bit:
  enabled: false
  
logstash:
  enabled: false