---
# VMStation Jellyfin Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: jellyfin
  labels:
    name: jellyfin
    vmstation.io/component: media
    pod-security.kubernetes.io/enforce: privileged
---
# Jellyfin Pod (using hostPath volumes instead of PVCs)
# Enhanced with networking diagnostics and improved probe settings
apiVersion: v1
kind: Pod
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app: jellyfin
    component: media-server
  annotations:
    vmstation.io/network-mode: "host-bridge"
    vmstation.io/cni-debug: "enabled"
spec:
  # Schedule on storage node explicitly
  nodeSelector:
    kubernetes.io/hostname: storagenodet3500
  # Security context: Run as non-root user for better security
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    # Removed seccompProfile: RuntimeDefault to allow network access for probes
  # Removed init container to prevent chicken-and-egg networking issue
  # The init container was preventing pod startup when CNI networking had issues
  containers:
  - name: jellyfin
    image: jellyfin/jellyfin:latest
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 8096
      name: http
    - containerPort: 8920
      name: https
    - containerPort: 1900
      name: dlna
      protocol: UDP
    - containerPort: 7359
      name: discovery
      protocol: UDP
    env:
    - name: JELLYFIN_PublishedServerUrl
      value: "http://192.168.4.61:30096"
    - name: JELLYFIN_HTTP_BIND_ADDRESS
      value: "0.0.0.0"
    - name: JELLYFIN_HTTP_PORT
      value: "8096"
    # Add network debugging environment variables
    - name: JELLYFIN_LOG_LEVEL
      value: "Debug"
    # Health check configuration
    - name: HEALTHCHECK_URL
      value: "http://localhost:8096/health"
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    volumeMounts:
    - name: jellyfin-config
      mountPath: /config
    - name: jellyfin-cache
      mountPath: /cache
    - name: jellyfin-media
      mountPath: /media
      readOnly: true
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: "2"
        memory: 2Gi
    # Health checks using /health endpoint to properly validate Jellyfin service status
    # Enhanced timeouts and failure thresholds for networking issues
    livenessProbe:
      httpGet:
        path: /health
        port: 8096
        scheme: HTTP
      initialDelaySeconds: 300  # Increased from 240 for network stabilization
      periodSeconds: 60
      timeoutSeconds: 30
      failureThreshold: 5
      successThreshold: 1
    readinessProbe:
      httpGet:
        path: /health
        port: 8096
        scheme: HTTP
      initialDelaySeconds: 240  # Increased from 180 for network stabilization
      periodSeconds: 30
      timeoutSeconds: 15
      failureThreshold: 10
      successThreshold: 1
    startupProbe:
      httpGet:
        path: /health
        port: 8096
        scheme: HTTP
      initialDelaySeconds: 180  # Increased from 120 for network stabilization
      periodSeconds: 15
      timeoutSeconds: 10
      # Increased failure threshold to handle CNI networking delays in mixed OS
      failureThreshold: 40  # Increased from 30 for better network tolerance
      successThreshold: 1
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: false
      capabilities:
        drop:
        - ALL
  # DNS configuration for better name resolution
  dnsPolicy: ClusterFirst
  dnsConfig:
    options:
    - name: ndots
      value: "2"
    - name: edns0
  # Use hostPath volumes directly (no PVCs needed)
  volumes:
  - name: jellyfin-config
    hostPath:
      path: /var/lib/jellyfin
      type: DirectoryOrCreate
  - name: jellyfin-cache
    emptyDir:
      sizeLimit: 10Gi
  - name: jellyfin-media
    hostPath:
      path: /srv/media
      type: DirectoryOrCreate
  restartPolicy: Always
  # Add tolerations for network-related node issues
  tolerations:
  - key: "node.kubernetes.io/network-unavailable"
    operator: "Exists"
    effect: "NoExecute"
    tolerationSeconds: 300
  - key: "node.kubernetes.io/not-ready"
    operator: "Exists"
    effect: "NoExecute"
    tolerationSeconds: 300
---
# Jellyfin Service
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-service
  namespace: jellyfin
  labels:
    app: jellyfin
    component: media-server
spec:
  type: NodePort
  ports:
  - port: 8096
    targetPort: 8096
    nodePort: 30096
    name: http
  - port: 8920
    targetPort: 8920
    nodePort: 30920
    name: https
  selector:
    app: jellyfin
    component: media-server
