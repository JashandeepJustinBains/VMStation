name: Kubespray Automated Deployment

on:
  workflow_dispatch:
    inputs:
      skip_preflight:
        description: 'Skip preflight checks'
        required: false
        default: 'false'
      skip_monitoring:
        description: 'Skip monitoring deployment'
        required: false
        default: 'false'

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    
    env:
      REPO_ROOT: /github/workspace
      KUBESPRAY_DIR: /github/workspace/.cache/kubespray
      KUBESPRAY_INVENTORY: /github/workspace/.cache/kubespray/inventory/mycluster/inventory.ini
      MAIN_INVENTORY: /github/workspace/ansible/inventory/hosts.yml
      SSH_KEY_PATH: /tmp/id_vmstation_ops
      VMSTATION_SSH_KEY: ${{ secrets.VMSTATION_SSH_KEY }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for proper git operations
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3 \
            python3-pip \
            python3-venv \
            sshpass \
            wakeonlan \
            jq \
            curl \
            git
      
      - name: Install Ansible
        run: |
          python3 -m pip install --upgrade pip
          pip3 install ansible==8.5.0 jinja2 netaddr
      
      - name: Setup SSH configuration
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H 192.168.4.61 >> ~/.ssh/known_hosts 2>/dev/null || true
          ssh-keyscan -H 192.168.4.62 >> ~/.ssh/known_hosts 2>/dev/null || true
          ssh-keyscan -H 192.168.4.63 >> ~/.ssh/known_hosts 2>/dev/null || true
      
      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"
      
      - name: Run Kubespray Deployment Automation
        id: deployment
        run: |
          bash scripts/ops-kubespray-automation.sh
        continue-on-error: true
      
      - name: Collect deployment artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kubespray-deployment-artifacts
          path: |
            ansible/artifacts/run-*/
            .git/ops-backups/
          retention-days: 30
      
      - name: Collect deployment logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kubespray-deployment-logs
          path: |
            ansible/artifacts/run-*/ansible-run-logs/
          retention-days: 30
      
      - name: Collect kubeconfig (if exists)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kubeconfig
          path: |
            /tmp/admin.conf
          retention-days: 7
      
      - name: Display deployment summary
        if: always()
        run: |
          echo "=========================================="
          echo "Deployment Summary"
          echo "=========================================="
          
          if [[ -f ansible/artifacts/run-*/ops-report-*.json ]]; then
            echo "Report:"
            cat ansible/artifacts/run-*/ops-report-*.json 2>/dev/null || echo "No report found"
          fi
          
          echo ""
          echo "Log files available in artifacts"
          echo "=========================================="
      
      - name: Check deployment status
        if: always()
        run: |
          if [[ "${{ steps.deployment.outcome }}" == "success" ]]; then
            echo "✓ Deployment completed successfully"
            exit 0
          else
            echo "⚠ Deployment completed with warnings or errors"
            echo "Check artifacts for detailed logs"
            exit 1
          fi
