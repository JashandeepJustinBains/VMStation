root@masternode:/srv/monitoring_data/VMStation# # show the debug block we added (should be near the top)
grep -n -n \"Debug show kubeconfig_path and check file\" -n ansible/playbooks/verify-cluster.yml || true

# show the debug output and any immediate failures
sed -n '1,200p' /tmp/deploy-verify-full.log | sed -n '/Debug: show kubeconfig_path and check file/,$p' | sed -n '1,120p'

# show the last 400 lines (the failing section)
tail -n 400 /tmp/deploy-verify-full.log
grep: show: No such file or directory
grep: kubeconfig_path: No such file or directory
grep: and: No such file or directory
grep: check: No such file or directory
grep: file": No such file or directory
ansible/playbooks/verify-cluster.yml:12:    - name: "Debug show kubeconfig_path and check file"
ansible/playbooks/verify-cluster.yml:24:        - name: "Debug kubeconfig file stat result"
      wait_timeout: 120
  resources:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: '2'
      creationTimestamp: '2025-09-11T16:43:23Z'
      generation: 2
      labels:
        app.kubernetes.io/name: grafana
      managedFields:
      - apiVersion: apps/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:labels:
              .: {}
              f:app.kubernetes.io/name: {}
          f:spec:
            f:progressDeadlineSeconds: {}
            f:replicas: {}
            f:revisionHistoryLimit: {}
            f:selector: {}
            f:strategy:
              f:rollingUpdate:
                .: {}
                f:maxSurge: {}
                f:maxUnavailable: {}
              f:type: {}
            f:template:
              f:metadata:
                f:labels:
                  .: {}
                  f:app.kubernetes.io/name: {}
              f:spec:
                f:containers:
                  k:{"name":"grafana"}:
                    .: {}
                    f:env:
                      .: {}
                      k:{"name":"GF_INSTALL_PLUGINS"}:
                        .: {}
                        f:name: {}
                      k:{"name":"GF_SECURITY_ADMIN_PASSWORD"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:livenessProbe:
                      .: {}
                      f:failureThreshold: {}
                      f:httpGet:
                        .: {}
                        f:path: {}
                        f:port: {}
                        f:scheme: {}
                      f:initialDelaySeconds: {}
                      f:periodSeconds: {}
                      f:successThreshold: {}
                      f:timeoutSeconds: {}
                    f:name: {}
                    f:ports:
                      .: {}
                      k:{"containerPort":3000,"protocol":"TCP"}:
                        .: {}
                        f:containerPort: {}
                        f:protocol: {}
                    f:readinessProbe:
                      .: {}
                      f:failureThreshold: {}
                      f:httpGet:
                        .: {}
                        f:path: {}
                        f:port: {}
                        f:scheme: {}
                      f:initialDelaySeconds: {}
                      f:periodSeconds: {}
                      f:successThreshold: {}
                      f:timeoutSeconds: {}
                    f:resources:
                      .: {}
                      f:limits:
                        .: {}
                        f:cpu: {}
                        f:memory: {}
                      f:requests:
                        .: {}
                        f:cpu: {}
                        f:memory: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/var/lib/grafana"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:nodeSelector: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:terminationGracePeriodSeconds: {}
                f:tolerations: {}
                f:volumes:
                  .: {}
                  k:{"name":"storage"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
        manager: OpenAPI-Generator
        operation: Update
        time: '2025-09-12T00:34:36Z'
      - apiVersion: apps/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:annotations:
              .: {}
              f:deployment.kubernetes.io/revision: {}
          f:status:
            f:availableReplicas: {}
            f:conditions:
              .: {}
              k:{"type":"Available"}:
                .: {}
                f:lastTransitionTime: {}
                f:lastUpdateTime: {}
                f:message: {}
                f:reason: {}
                f:status: {}
                f:type: {}
              k:{"type":"Progressing"}:
                .: {}
                f:lastTransitionTime: {}
                f:lastUpdateTime: {}
                f:message: {}
                f:reason: {}
                f:status: {}
                f:type: {}
            f:observedGeneration: {}
            f:readyReplicas: {}
            f:replicas: {}
            f:updatedReplicas: {}
        manager: kube-controller-manager
        operation: Update
        subresource: status
        time: '2025-09-12T02:33:46Z'
      name: grafana
      namespace: monitoring
      resourceVersion: '140145'
      uid: b47550bc-3afd-4b4a-bc62-fc0958201f97
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app.kubernetes.io/name: grafana
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/name: grafana
        spec:
          containers:
          - env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
            - name: GF_INSTALL_PLUGINS
            image: grafana/grafana:latest
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /api/health
                port: 3000
                scheme: HTTP
              initialDelaySeconds: 60
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 1
            name: grafana
            ports:
            - containerPort: 3000
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /api/health
                port: 3000
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
            resources:
              limits:
                cpu: 500m
                memory: 512Mi
              requests:
                cpu: 100m
                memory: 128Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /var/lib/grafana
              name: storage
          dnsPolicy: ClusterFirst
          nodeSelector:
            node-role.kubernetes.io/control-plane: ''
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
          volumes:
          - emptyDir: {}
            name: storage
    status:
      availableReplicas: 1
      conditions:
      - lastTransitionTime: '2025-09-12T02:33:03Z'
        lastUpdateTime: '2025-09-12T02:33:03Z'
        message: Deployment has minimum availability.
        reason: MinimumReplicasAvailable
        status: 'True'
        type: Available
      - lastTransitionTime: '2025-09-12T02:33:03Z'
        lastUpdateTime: '2025-09-12T02:33:46Z'
        message: ReplicaSet "grafana-79db5b584f" has successfully progressed.
        reason: NewReplicaSetAvailable
        status: 'True'
        type: Progressing
      observedGeneration: 2
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1

TASK [Delete Grafana Deployment if selector doesn't match manifest expectation] ***
task path: /srv/monitoring_data/VMStation/ansible/playbooks/verify-cluster.yml:150
skipping: [masternode] => changed=false
  skip_reason: Conditional result was False

TASK [Deploy monitoring namespace and components] ******************************
task path: /srv/monitoring_data/VMStation/ansible/playbooks/verify-cluster.yml:160
<192.168.4.63> ESTABLISH LOCAL CONNECTION FOR USER: root
<192.168.4.63> EXEC /bin/sh -c 'echo ~root && sleep 0'
<192.168.4.63> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1757690723.6532798-1178129-23503266372436 `" && echo ansible-tmp-1757690723.6532798-1178129-23503266372436="` echo /root/.ansible/tmp/ansible-tmp-1757690723.6532798-1178129-23503266372436 `" ) && sleep 0'
Loading collection cloud.common from /usr/lib/python3/dist-packages/ansible_collections/cloud/common
Using module file /root/.ansible/collections/ansible_collections/kubernetes/core/plugins/modules/k8s.py
<192.168.4.63> PUT /root/.ansible/tmp/ansible-local-1177678cz2qu98j/tmpd6a7s4xw TO /root/.ansible/tmp/ansible-tmp-1757690723.6532798-1178129-23503266372436/AnsiballZ_k8s.py
<192.168.4.63> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1757690723.6532798-1178129-23503266372436/ /root/.ansible/tmp/ansible-tmp-1757690723.6532798-1178129-23503266372436/AnsiballZ_k8s.py && sleep 0'
<192.168.4.63> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1757690723.6532798-1178129-23503266372436/AnsiballZ_k8s.py && sleep 0'
<192.168.4.63> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1757690723.6532798-1178129-23503266372436/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
  File "/tmp/ansible_kubernetes.core.k8s_payload_mgt8c7dd/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/runner.py", line 101, in run_module
    result = perform_action(svc, definition, module.params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/tmp/ansible_kubernetes.core.k8s_payload_mgt8c7dd/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/runner.py", line 194, in perform_action
    instance, warnings = svc.update(resource, definition, existing)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/tmp/ansible_kubernetes.core.k8s_payload_mgt8c7dd/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/service.py", line 446, in update
    raise exception
  File "/tmp/ansible_kubernetes.core.k8s_payload_mgt8c7dd/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/service.py", line 436, in update
    return self.patch_resource(
           ^^^^^^^^^^^^^^^^^^^^
  File "/tmp/ansible_kubernetes.core.k8s_payload_mgt8c7dd/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/service.py", line 156, in patch_resource
    raise CoreException(msg) from e
failed: [masternode] (item=/srv/monitoring_data/VMStation/ansible/playbooks/../../manifests/monitoring/prometheus.yaml) => changed=false
  ansible_loop_var: item
  invocation:
    module_args:
      api_key: null
      api_version: v1
      append_hash: false
      apply: false
      ca_cert: null
      client_cert: null
      client_key: null
      context: null
      continue_on_error: false
      delete_all: false
      delete_options: null
      force: false
      generate_name: null
      hidden_fields: null
      host: null
      impersonate_groups: null
      impersonate_user: null
      kind: null
      kubeconfig: VALUE_SPECIFIED_IN_NO_LOG_PARAMETER
      label_selectors: null
      merge_type: null
      name: null
      namespace: null
      no_proxy: null
      password: null
      persist_config: null
      proxy: null
      proxy_headers: null
      resource_definition: null
      server_side_apply: null
      src: /srv/monitoring_data/VMStation/manifests/monitoring/prometheus.yaml
      state: present
      template: null
      username: null
      validate: null
      validate_certs: null
      wait: false
      wait_condition: null
      wait_sleep: 5
      wait_timeout: 120
  item: /srv/monitoring_data/VMStation/ansible/playbooks/../../manifests/monitoring/prometheus.yaml
  msg: 'Failed to patch object: b''{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"Deployment.apps \\"prometheus\\" is invalid: spec.selector: Invalid value: v1.LabelSelector{MatchLabels:map[string]string{\\"app\\":\\"prometheus\\", \\"app.kubernetes.io/name\\":\\"prometheus\\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable","reason":"Invalid","details":{"name":"prometheus","group":"apps","kind":"Deployment","causes":[{"reason":"FieldValueInvalid","message":"Invalid value: v1.LabelSelector{MatchLabels:map[string]string{\\"app\\":\\"prometheus\\", \\"app.kubernetes.io/name\\":\\"prometheus\\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable","field":"spec.selector"}]},"code":422}\n'''
  reason: Unprocessable Entity
<192.168.4.63> EXEC /bin/sh -c 'echo ~root && sleep 0'
<192.168.4.63> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1757690724.606063-1178129-169772960135493 `" && echo ansible-tmp-1757690724.606063-1178129-169772960135493="` echo /root/.ansible/tmp/ansible-tmp-1757690724.606063-1178129-169772960135493 `" ) && sleep 0'
Using module file /root/.ansible/collections/ansible_collections/kubernetes/core/plugins/modules/k8s.py
<192.168.4.63> PUT /root/.ansible/tmp/ansible-local-1177678cz2qu98j/tmplk15yht1 TO /root/.ansible/tmp/ansible-tmp-1757690724.606063-1178129-169772960135493/AnsiballZ_k8s.py
<192.168.4.63> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1757690724.606063-1178129-169772960135493/ /root/.ansible/tmp/ansible-tmp-1757690724.606063-1178129-169772960135493/AnsiballZ_k8s.py && sleep 0'
<192.168.4.63> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1757690724.606063-1178129-169772960135493/AnsiballZ_k8s.py && sleep 0'
<192.168.4.63> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1757690724.606063-1178129-169772960135493/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
  File "/tmp/ansible_kubernetes.core.k8s_payload_dqrjktx3/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/runner.py", line 101, in run_module
    result = perform_action(svc, definition, module.params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/tmp/ansible_kubernetes.core.k8s_payload_dqrjktx3/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/runner.py", line 194, in perform_action
    instance, warnings = svc.update(resource, definition, existing)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/tmp/ansible_kubernetes.core.k8s_payload_dqrjktx3/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/service.py", line 446, in update
    raise exception
  File "/tmp/ansible_kubernetes.core.k8s_payload_dqrjktx3/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/service.py", line 436, in update
    return self.patch_resource(
           ^^^^^^^^^^^^^^^^^^^^
  File "/tmp/ansible_kubernetes.core.k8s_payload_dqrjktx3/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/service.py", line 156, in patch_resource
    raise CoreException(msg) from e
failed: [masternode] (item=/srv/monitoring_data/VMStation/ansible/playbooks/../../manifests/monitoring/grafana.yaml) => changed=false
  ansible_loop_var: item
  invocation:
    module_args:
      api_key: null
      api_version: v1
      append_hash: false
      apply: false
      ca_cert: null
      client_cert: null
      client_key: null
      context: null
      continue_on_error: false
      delete_all: false
      delete_options: null
      force: false
      generate_name: null
      hidden_fields: null
      host: null
      impersonate_groups: null
      impersonate_user: null
      kind: null
      kubeconfig: VALUE_SPECIFIED_IN_NO_LOG_PARAMETER
      label_selectors: null
      merge_type: null
      name: null
      namespace: null
      no_proxy: null
      password: null
      persist_config: null
      proxy: null
      proxy_headers: null
      resource_definition: null
      server_side_apply: null
      src: /srv/monitoring_data/VMStation/manifests/monitoring/grafana.yaml
      state: present
      template: null
      username: null
      validate: null
      validate_certs: null
      wait: false
      wait_condition: null
      wait_sleep: 5
      wait_timeout: 120
  item: /srv/monitoring_data/VMStation/ansible/playbooks/../../manifests/monitoring/grafana.yaml
  msg: 'Failed to patch object: b''{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"Deployment.apps \\"grafana\\" is invalid: spec.selector: Invalid value: v1.LabelSelector{MatchLabels:map[string]string{\\"app\\":\\"grafana\\", \\"app.kubernetes.io/name\\":\\"grafana\\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable","reason":"Invalid","details":{"name":"grafana","group":"apps","kind":"Deployment","causes":[{"reason":"FieldValueInvalid","message":"Invalid value: v1.LabelSelector{MatchLabels:map[string]string{\\"app\\":\\"grafana\\", \\"app.kubernetes.io/name\\":\\"grafana\\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable","field":"spec.selector"}]},"code":422}\n'''
  reason: Unprocessable Entity

PLAY RECAP *********************************************************************
masternode                 : ok=16   changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0

[ERROR] ❌ Cluster verification failed!
[INFO] Run smoke test for quick diagnosis: ./deploy-cluster.sh smoke-test
root@masternode:/srv/monitoring_data/VMStation#
