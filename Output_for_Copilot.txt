        name: run
      - hostPath:
          path: /opt/cni/bin
          type: ''
        name: cni-plugin
      - hostPath:
          path: /etc/cni/net.d
          type: ''
        name: cni
      - configMap:
          defaultMode: 420
          name: kube-flannel-cfg
        name: flannel-cfg
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: kube-api-access-p57f5
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
    status:
      conditions:
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T13:33:53Z'
        status: 'True'
        type: PodReadyToStartContainers
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T13:33:58Z'
        status: 'True'
        type: Initialized
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T13:33:59Z'
        status: 'True'
        type: Ready
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T13:33:59Z'
        status: 'True'
        type: ContainersReady
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T13:33:50Z'
        status: 'True'
        type: PodScheduled
      containerStatuses:
      - containerID: containerd://33285268119196e7bc2d01a2d4c1fc24889b5cdcdc2dcea18c2f32bf714e9c78
        image: docker.io/flannel/flannel:v0.24.2
        imageID: docker.io/flannel/flannel@sha256:2a2b74a762a5d99517659f940e3f2ad774de293d41fce6a78378df6fe9320173
        lastState: {}
        name: kube-flannel
        ready: true
        restartCount: 0
        started: true
        state:
          running:
            startedAt: '2025-09-12T13:33:58Z'
      hostIP: 192.168.4.63
      hostIPs:
      - ip: 192.168.4.63
      initContainerStatuses:
      - containerID: containerd://9218ca8b78b862240d08a6b72a257c08fed1cd6dfd8ec6bc4d4b792c0969d057
        image: docker.io/flannel/flannel-cni-plugin:v1.4.0-flannel1
        imageID: docker.io/flannel/flannel-cni-plugin@sha256:743c25e5e477527d8e54faa3e5259fbbee3463a335de1690879fc74305edc79b
        lastState: {}
        name: install-cni-plugin
        ready: true
        restartCount: 0
        started: false
        state:
          terminated:
            containerID: containerd://9218ca8b78b862240d08a6b72a257c08fed1cd6dfd8ec6bc4d4b792c0969d057
            exitCode: 0
            finishedAt: '2025-09-12T13:33:52Z'
            reason: Completed
            startedAt: '2025-09-12T13:33:52Z'
      - containerID: containerd://968310553ecc5539f7bb0853108d6905d733b332d31955c05b967ee2e0fc9313
        image: docker.io/flannel/flannel:v0.24.2
        imageID: docker.io/flannel/flannel@sha256:2a2b74a762a5d99517659f940e3f2ad774de293d41fce6a78378df6fe9320173
        lastState: {}
        name: install-cni
        ready: true
        restartCount: 0
        started: false
        state:
          terminated:
            containerID: containerd://968310553ecc5539f7bb0853108d6905d733b332d31955c05b967ee2e0fc9313
            exitCode: 0
            finishedAt: '2025-09-12T13:33:57Z'
            reason: Completed
            startedAt: '2025-09-12T13:33:57Z'
      phase: Running
      podIP: 192.168.4.63
      podIPs:
      - ip: 192.168.4.63
      qosClass: Burstable
      startTime: '2025-09-12T13:33:50Z'
  - apiVersion: v1
    kind: Pod
    metadata:
      creationTimestamp: '2025-09-12T13:33:59Z'
      generateName: kube-flannel-ds-
      labels:
        app: flannel
        controller-revision-hash: 5cc678f779
        k8s-app: flannel
        pod-template-generation: '2'
        tier: node
      managedFields:
      - apiVersion: v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:generateName: {}
            f:labels:
              .: {}
              f:app: {}
              f:controller-revision-hash: {}
              f:k8s-app: {}
              f:pod-template-generation: {}
              f:tier: {}
            f:ownerReferences:
              .: {}
              k:{"uid":"498c66ad-8d8f-4b82-abce-7eff1439f0f1"}: {}
          f:spec:
            f:affinity:
              .: {}
              f:nodeAffinity:
                .: {}
                f:requiredDuringSchedulingIgnoredDuringExecution: {}
            f:containers:
              k:{"name":"kube-flannel"}:
                .: {}
                f:args: {}
                f:command: {}
                f:env:
                  .: {}
                  k:{"name":"CONT_WHEN_CACHE_NOT_READY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"EVENT_QUEUE_DEPTH"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"POD_NAME"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef: {}
                  k:{"name":"POD_NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:capabilities:
                    .: {}
                    f:add: {}
                  f:privileged: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/kube-flannel/"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/run/flannel"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/run/xtables.lock"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:enableServiceLinks: {}
            f:hostNetwork: {}
            f:initContainers:
              .: {}
              k:{"name":"install-cni"}:
                .: {}
                f:args: {}
                f:command: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/cni/net.d"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/etc/kube-flannel/"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"install-cni-plugin"}:
                .: {}
                f:args: {}
                f:command: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/opt/cni/bin"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:priorityClassName: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:tolerations: {}
            f:volumes:
              .: {}
              k:{"name":"cni"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"cni-plugin"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"flannel-cfg"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"run"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"xtables-lock"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
        manager: kube-controller-manager
        operation: Update
        time: '2025-09-12T13:33:59Z'
      - apiVersion: v1
        fieldsType: FieldsV1
        fieldsV1:
          f:status:
            f:conditions:
              k:{"type":"ContainersReady"}:
                .: {}
                f:lastProbeTime: {}
                f:lastTransitionTime: {}
                f:message: {}
                f:reason: {}
                f:status: {}
                f:type: {}
              k:{"type":"Initialized"}:
                .: {}
                f:lastProbeTime: {}
                f:lastTransitionTime: {}
                f:status: {}
                f:type: {}
              k:{"type":"PodReadyToStartContainers"}:
                .: {}
                f:lastProbeTime: {}
                f:lastTransitionTime: {}
                f:status: {}
                f:type: {}
              k:{"type":"Ready"}:
                .: {}
                f:lastProbeTime: {}
                f:lastTransitionTime: {}
                f:message: {}
                f:reason: {}
                f:status: {}
                f:type: {}
            f:containerStatuses: {}
            f:hostIP: {}
            f:hostIPs: {}
            f:initContainerStatuses: {}
            f:phase: {}
            f:podIP: {}
            f:podIPs:
              .: {}
              k:{"ip":"192.168.4.62"}:
                .: {}
                f:ip: {}
            f:startTime: {}
        manager: kubelet
        operation: Update
        subresource: status
        time: '2025-09-12T15:11:05Z'
      name: kube-flannel-ds-hns7m
      namespace: kube-flannel
      ownerReferences:
      - apiVersion: apps/v1
        blockOwnerDeletion: true
        controller: true
        kind: DaemonSet
        name: kube-flannel-ds
        uid: 498c66ad-8d8f-4b82-abce-7eff1439f0f1
      resourceVersion: '211088'
      uid: 1fc6bc2f-e94a-4f81-ab3f-0e81350f877a
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchFields:
              - key: metadata.name
                operator: In
                values:
                - homelab
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: EVENT_QUEUE_DEPTH
          value: '5000'
        - name: CONT_WHEN_CACHE_NOT_READY
          value: 'false'
        image: docker.io/flannel/flannel:v0.24.2
        imagePullPolicy: IfNotPresent
        name: kube-flannel
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-nrx29
          readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /flannel
        - /opt/cni/bin/flannel
        command:
        - cp
        image: docker.io/flannel/flannel-cni-plugin:v1.4.0-flannel1
        imagePullPolicy: IfNotPresent
        name: install-cni-plugin
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/cni/bin
          name: cni-plugin
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-nrx29
          readOnly: true
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: docker.io/flannel/flannel:v0.24.2
        imagePullPolicy: IfNotPresent
        name: install-cni
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-nrx29
          readOnly: true
      nodeName: homelab
      preemptionPolicy: PreemptLowerPriority
      priority: 2000001000
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: flannel
      serviceAccountName: flannel
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/disk-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/memory-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/pid-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/network-unavailable
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
          type: ''
        name: run
      - hostPath:
          path: /opt/cni/bin
          type: ''
        name: cni-plugin
      - hostPath:
          path: /etc/cni/net.d
          type: ''
        name: cni
      - configMap:
          defaultMode: 420
          name: kube-flannel-cfg
        name: flannel-cfg
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: kube-api-access-nrx29
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
    status:
      conditions:
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T15:10:51Z'
        status: 'True'
        type: PodReadyToStartContainers
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T13:34:06Z'
        status: 'True'
        type: Initialized
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T15:10:50Z'
        message: 'containers with unready status: [kube-flannel]'
        reason: ContainersNotReady
        status: 'False'
        type: Ready
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T15:10:50Z'
        message: 'containers with unready status: [kube-flannel]'
        reason: ContainersNotReady
        status: 'False'
        type: ContainersReady
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T13:33:59Z'
        status: 'True'
        type: PodScheduled
      containerStatuses:
      - containerID: containerd://2bb313ebec2a2754bed970bfe3ad2bae27bbb8954c7411fd8454542c9bee1b39
        image: docker.io/flannel/flannel:v0.24.2
        imageID: docker.io/flannel/flannel@sha256:2a2b74a762a5d99517659f940e3f2ad774de293d41fce6a78378df6fe9320173
        lastState:
          terminated:
            containerID: containerd://2bb313ebec2a2754bed970bfe3ad2bae27bbb8954c7411fd8454542c9bee1b39
            exitCode: 0
            finishedAt: '2025-09-12T15:10:50Z'
            reason: Completed
            startedAt: '2025-09-12T15:09:19Z'
        name: kube-flannel
        ready: false
        restartCount: 19
        started: false
        state:
          waiting:
            message: back-off 5m0s restarting failed container=kube-flannel pod=kube-flannel-ds-hns7m_kube-flannel(1fc6bc2f-e94a-4f81-ab3f-0e81350f877a)
            reason: CrashLoopBackOff
      hostIP: 192.168.4.62
      hostIPs:
      - ip: 192.168.4.62
      initContainerStatuses:
      - containerID: containerd://b292c1191f1e734e7c57d5fb8e2bcc7b471de69a93abe56bfd9629c15d6474d9
        image: docker.io/flannel/flannel-cni-plugin:v1.4.0-flannel1
        imageID: docker.io/flannel/flannel-cni-plugin@sha256:743c25e5e477527d8e54faa3e5259fbbee3463a335de1690879fc74305edc79b
        lastState: {}
        name: install-cni-plugin
        ready: true
        restartCount: 14
        started: false
        state:
          terminated:
            containerID: containerd://b292c1191f1e734e7c57d5fb8e2bcc7b471de69a93abe56bfd9629c15d6474d9
            exitCode: 0
            finishedAt: '2025-09-12T15:10:50Z'
            reason: Completed
            startedAt: '2025-09-12T15:10:50Z'
      - containerID: containerd://563cf2ee1d967f07a689e275034b9002e0f44b39ba0f52b907bbce269761f909
        image: docker.io/flannel/flannel:v0.24.2
        imageID: docker.io/flannel/flannel@sha256:2a2b74a762a5d99517659f940e3f2ad774de293d41fce6a78378df6fe9320173
        lastState: {}
        name: install-cni
        ready: true
        restartCount: 0
        started: false
        state:
          terminated:
            containerID: containerd://563cf2ee1d967f07a689e275034b9002e0f44b39ba0f52b907bbce269761f909
            exitCode: 0
            finishedAt: '2025-09-12T15:10:51Z'
            reason: Completed
            startedAt: '2025-09-12T15:10:51Z'
      phase: Running
      podIP: 192.168.4.62
      podIPs:
      - ip: 192.168.4.62
      qosClass: Burstable
      startTime: '2025-09-12T13:33:59Z'
  - apiVersion: v1
    kind: Pod
    metadata:
      creationTimestamp: '2025-09-12T13:34:08Z'
      generateName: kube-flannel-ds-
      labels:
        app: flannel
        controller-revision-hash: 5cc678f779
        k8s-app: flannel
        pod-template-generation: '2'
        tier: node
      managedFields:
      - apiVersion: v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:generateName: {}
            f:labels:
              .: {}
              f:app: {}
              f:controller-revision-hash: {}
              f:k8s-app: {}
              f:pod-template-generation: {}
              f:tier: {}
            f:ownerReferences:
              .: {}
              k:{"uid":"498c66ad-8d8f-4b82-abce-7eff1439f0f1"}: {}
          f:spec:
            f:affinity:
              .: {}
              f:nodeAffinity:
                .: {}
                f:requiredDuringSchedulingIgnoredDuringExecution: {}
            f:containers:
              k:{"name":"kube-flannel"}:
                .: {}
                f:args: {}
                f:command: {}
                f:env:
                  .: {}
                  k:{"name":"CONT_WHEN_CACHE_NOT_READY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"EVENT_QUEUE_DEPTH"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"POD_NAME"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef: {}
                  k:{"name":"POD_NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:capabilities:
                    .: {}
                    f:add: {}
                  f:privileged: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/kube-flannel/"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/run/flannel"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/run/xtables.lock"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:enableServiceLinks: {}
            f:hostNetwork: {}
            f:initContainers:
              .: {}
              k:{"name":"install-cni"}:
                .: {}
                f:args: {}
                f:command: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/cni/net.d"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/etc/kube-flannel/"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"install-cni-plugin"}:
                .: {}
                f:args: {}
                f:command: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/opt/cni/bin"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:priorityClassName: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:tolerations: {}
            f:volumes:
              .: {}
              k:{"name":"cni"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"cni-plugin"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"flannel-cfg"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"run"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"xtables-lock"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
        manager: kube-controller-manager
        operation: Update
        time: '2025-09-12T13:34:08Z'
      - apiVersion: v1
        fieldsType: FieldsV1
        fieldsV1:
          f:status:
            f:conditions:
              k:{"type":"ContainersReady"}:
                .: {}
                f:lastProbeTime: {}
                f:lastTransitionTime: {}
                f:status: {}
                f:type: {}
              k:{"type":"Initialized"}:
                .: {}
                f:lastProbeTime: {}
                f:lastTransitionTime: {}
                f:status: {}
                f:type: {}
              k:{"type":"PodReadyToStartContainers"}:
                .: {}
                f:lastProbeTime: {}
                f:lastTransitionTime: {}
                f:status: {}
                f:type: {}
              k:{"type":"Ready"}:
                .: {}
                f:lastProbeTime: {}
                f:lastTransitionTime: {}
                f:status: {}
                f:type: {}
            f:containerStatuses: {}
            f:hostIP: {}
            f:hostIPs: {}
            f:initContainerStatuses: {}
            f:phase: {}
            f:podIP: {}
            f:podIPs:
              .: {}
              k:{"ip":"192.168.4.61"}:
                .: {}
                f:ip: {}
            f:startTime: {}
        manager: kubelet
        operation: Update
        subresource: status
        time: '2025-09-12T13:34:27Z'
      name: kube-flannel-ds-zmn26
      namespace: kube-flannel
      ownerReferences:
      - apiVersion: apps/v1
        blockOwnerDeletion: true
        controller: true
        kind: DaemonSet
        name: kube-flannel-ds
        uid: 498c66ad-8d8f-4b82-abce-7eff1439f0f1
      resourceVersion: '202000'
      uid: faf3707c-3350-418d-a288-0d0fe0f57075
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchFields:
              - key: metadata.name
                operator: In
                values:
                - storagenodet3500
      containers:
      - args:
        - --ip-masq
        - --kube-subnet-mgr
        command:
        - /opt/bin/flanneld
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: EVENT_QUEUE_DEPTH
          value: '5000'
        - name: CONT_WHEN_CACHE_NOT_READY
          value: 'false'
        image: docker.io/flannel/flannel:v0.24.2
        imagePullPolicy: IfNotPresent
        name: kube-flannel
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /run/flannel
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-fbksv
          readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      hostNetwork: true
      initContainers:
      - args:
        - -f
        - /flannel
        - /opt/cni/bin/flannel
        command:
        - cp
        image: docker.io/flannel/flannel-cni-plugin:v1.4.0-flannel1
        imagePullPolicy: IfNotPresent
        name: install-cni-plugin
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/cni/bin
          name: cni-plugin
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-fbksv
          readOnly: true
      - args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        command:
        - cp
        image: docker.io/flannel/flannel:v0.24.2
        imagePullPolicy: IfNotPresent
        name: install-cni
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-fbksv
          readOnly: true
      nodeName: storagenodet3500
      preemptionPolicy: PreemptLowerPriority
      priority: 2000001000
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: flannel
      serviceAccountName: flannel
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/disk-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/memory-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/pid-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/network-unavailable
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel
          type: ''
        name: run
      - hostPath:
          path: /opt/cni/bin
          type: ''
        name: cni-plugin
      - hostPath:
          path: /etc/cni/net.d
          type: ''
        name: cni
      - configMap:
          defaultMode: 420
          name: kube-flannel-cfg
        name: flannel-cfg
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: kube-api-access-fbksv
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
    status:
      conditions:
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T13:34:13Z'
        status: 'True'
        type: PodReadyToStartContainers
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T13:34:26Z'
        status: 'True'
        type: Initialized
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T13:34:27Z'
        status: 'True'
        type: Ready
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T13:34:27Z'
        status: 'True'
        type: ContainersReady
      - lastProbeTime: null
        lastTransitionTime: '2025-09-12T13:34:08Z'
        status: 'True'
        type: PodScheduled
      containerStatuses:
      - containerID: containerd://28514fcc0ce6b5b5b2db60c41eb22b1e833046831b7f174c8bda1795cf8beafc
        image: docker.io/flannel/flannel:v0.24.2
        imageID: docker.io/flannel/flannel@sha256:2a2b74a762a5d99517659f940e3f2ad774de293d41fce6a78378df6fe9320173
        lastState: {}
        name: kube-flannel
        ready: true
        restartCount: 0
        started: true
        state:
          running:
            startedAt: '2025-09-12T13:34:27Z'
      hostIP: 192.168.4.61
      hostIPs:
      - ip: 192.168.4.61
      initContainerStatuses:
      - containerID: containerd://15656a969b1c98edd520af2ceb4ab1a9199d657f723b71329d7ee452a0b82b0e
        image: docker.io/flannel/flannel-cni-plugin:v1.4.0-flannel1
        imageID: docker.io/flannel/flannel-cni-plugin@sha256:743c25e5e477527d8e54faa3e5259fbbee3463a335de1690879fc74305edc79b
        lastState: {}
        name: install-cni-plugin
        ready: true
        restartCount: 0
        started: false
        state:
          terminated:
            containerID: containerd://15656a969b1c98edd520af2ceb4ab1a9199d657f723b71329d7ee452a0b82b0e
            exitCode: 0
            finishedAt: '2025-09-12T13:34:13Z'
            reason: Completed
            startedAt: '2025-09-12T13:34:13Z'
      - containerID: containerd://0426caecbdd6d30cf618c0376dd36fad494108408c1f27fd9ef4451301b33d69
        image: docker.io/flannel/flannel:v0.24.2
        imageID: docker.io/flannel/flannel@sha256:2a2b74a762a5d99517659f940e3f2ad774de293d41fce6a78378df6fe9320173
        lastState: {}
        name: install-cni
        ready: true
        restartCount: 0
        started: false
        state:
          terminated:
            containerID: containerd://0426caecbdd6d30cf618c0376dd36fad494108408c1f27fd9ef4451301b33d69
            exitCode: 0
            finishedAt: '2025-09-12T13:34:23Z'
            reason: Completed
            startedAt: '2025-09-12T13:34:23Z'
      phase: Running
      podIP: 192.168.4.61
      podIPs:
      - ip: 192.168.4.61
      qosClass: Burstable
      startTime: '2025-09-12T13:34:08Z'

TASK [Display Flannel status] *****************************************************************************************************************************************************************
task path: /srv/monitoring_data/VMStation/ansible/playbooks/verify-cluster.yml:92
ok: [masternode] => (item={'metadata': {'name': 'kube-flannel-ds-fmxpq', 'generateName': 'kube-flannel-ds-', 'namespace': 'kube-flannel', 'uid': '2586317a-77fa-4bd8-9821-80c4ab06f962', 'resourceVersion': '201896', 'creationTimestamp': '2025-09-12T13:33:50Z', 'labels': {'app': 'flannel', 'controller-revision-hash': '5cc678f779', 'k8s-app': 'flannel', 'pod-template-generation': '2', 'tier': 'node'}, 'ownerReferences': [{'apiVersion': 'apps/v1', 'kind': 'DaemonSet', 'name': 'kube-flannel-ds', 'uid': '498c66ad-8d8f-4b82-abce-7eff1439f0f1', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T13:33:50Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:generateName': {}, 'f:labels': {'.': {}, 'f:app': {}, 'f:controller-revision-hash': {}, 'f:k8s-app': {}, 'f:pod-template-generation': {}, 'f:tier': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"498c66ad-8d8f-4b82-abce-7eff1439f0f1"}': {}}}, 'f:spec': {'f:affinity': {'.': {}, 'f:nodeAffinity': {'.': {}, 'f:requiredDuringSchedulingIgnoredDuringExecution': {}}}, 'f:containers': {'k:{"name":"kube-flannel"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"CONT_WHEN_CACHE_NOT_READY"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"EVENT_QUEUE_DEPTH"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {'.': {}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:capabilities': {'.': {}, 'f:add': {}}, 'f:privileged': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/run/flannel"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/run/xtables.lock"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:hostNetwork': {}, 'f:initContainers': {'.': {}, 'k:{"name":"install-cni"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/cni/net.d"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}, 'k:{"name":"install-cni-plugin"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/opt/cni/bin"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:priorityClassName': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"cni"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"cni-plugin"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"flannel-cfg"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"run"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"xtables-lock"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}}}}}, {'manager': 'kubelet', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T13:33:59Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Initialized"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"PodReadyToStartContainers"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Ready"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}}, 'f:containerStatuses': {}, 'f:hostIP': {}, 'f:hostIPs': {}, 'f:initContainerStatuses': {}, 'f:phase': {}, 'f:podIP': {}, 'f:podIPs': {'.': {}, 'k:{"ip":"192.168.4.63"}': {'.': {}, 'f:ip': {}}}, 'f:startTime': {}}}, 'subresource': 'status'}]}, 'spec': {'volumes': [{'name': 'run', 'hostPath': {'path': '/run/flannel', 'type': ''}}, {'name': 'cni-plugin', 'hostPath': {'path': '/opt/cni/bin', 'type': ''}}, {'name': 'cni', 'hostPath': {'path': '/etc/cni/net.d', 'type': ''}}, {'name': 'flannel-cfg', 'configMap': {'name': 'kube-flannel-cfg', 'defaultMode': 420}}, {'name': 'xtables-lock', 'hostPath': {'path': '/run/xtables.lock', 'type': 'FileOrCreate'}}, {'name': 'kube-api-access-p57f5', 'projected': {'sources': [{'serviceAccountToken': {'expirationSeconds': 3607, 'path': 'token'}}, {'configMap': {'name': 'kube-root-ca.crt', 'items': [{'key': 'ca.crt', 'path': 'ca.crt'}]}}, {'downwardAPI': {'items': [{'path': 'namespace', 'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}]}}], 'defaultMode': 420}}], 'initContainers': [{'name': 'install-cni-plugin', 'image': 'docker.io/flannel/flannel-cni-plugin:v1.4.0-flannel1', 'command': ['cp'], 'args': ['-f', '/flannel', '/opt/cni/bin/flannel'], 'resources': {}, 'volumeMounts': [{'name': 'cni-plugin', 'mountPath': '/opt/cni/bin'}, {'name': 'kube-api-access-p57f5', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}, {'name': 'install-cni', 'image': 'docker.io/flannel/flannel:v0.24.2', 'command': ['cp'], 'args': ['-f', '/etc/kube-flannel/cni-conf.json', '/etc/cni/net.d/10-flannel.conflist'], 'resources': {}, 'volumeMounts': [{'name': 'cni', 'mountPath': '/etc/cni/net.d'}, {'name': 'flannel-cfg', 'mountPath': '/etc/kube-flannel/'}, {'name': 'kube-api-access-p57f5', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'containers': [{'name': 'kube-flannel', 'image': 'docker.io/flannel/flannel:v0.24.2', 'command': ['/opt/bin/flanneld'], 'args': ['--ip-masq', '--kube-subnet-mgr'], 'env': [{'name': 'POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'EVENT_QUEUE_DEPTH', 'value': '5000'}, {'name': 'CONT_WHEN_CACHE_NOT_READY', 'value': 'false'}], 'resources': {'requests': {'cpu': '100m', 'memory': '50Mi'}}, 'volumeMounts': [{'name': 'run', 'mountPath': '/run/flannel'}, {'name': 'flannel-cfg', 'mountPath': '/etc/kube-flannel/'}, {'name': 'xtables-lock', 'mountPath': '/run/xtables.lock'}, {'name': 'kube-api-access-p57f5', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'add': ['NET_ADMIN', 'NET_RAW']}, 'privileged': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'flannel', 'serviceAccount': 'flannel', 'nodeName': 'masternode', 'hostNetwork': True, 'securityContext': {}, 'affinity': {'nodeAffinity': {'requiredDuringSchedulingIgnoredDuringExecution': {'nodeSelectorTerms': [{'matchFields': [{'key': 'metadata.name', 'operator': 'In', 'values': ['masternode']}]}]}}}, 'schedulerName': 'default-scheduler', 'tolerations': [{'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/not-ready', 'operator': 'Exists', 'effect': 'NoExecute'}, {'key': 'node.kubernetes.io/unreachable', 'operator': 'Exists', 'effect': 'NoExecute'}, {'key': 'node.kubernetes.io/disk-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/memory-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/pid-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/unschedulable', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/network-unavailable', 'operator': 'Exists', 'effect': 'NoSchedule'}], 'priorityClassName': 'system-node-critical', 'priority': 2000001000, 'enableServiceLinks': True, 'preemptionPolicy': 'PreemptLowerPriority'}, 'status': {'phase': 'Running', 'conditions': [{'type': 'PodReadyToStartContainers', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T13:33:53Z'}, {'type': 'Initialized', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T13:33:58Z'}, {'type': 'Ready', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T13:33:59Z'}, {'type': 'ContainersReady', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T13:33:59Z'}, {'type': 'PodScheduled', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T13:33:50Z'}], 'hostIP': '192.168.4.63', 'hostIPs': [{'ip': '192.168.4.63'}], 'podIP': '192.168.4.63', 'podIPs': [{'ip': '192.168.4.63'}], 'startTime': '2025-09-12T13:33:50Z', 'initContainerStatuses': [{'name': 'install-cni-plugin', 'state': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T13:33:52Z', 'finishedAt': '2025-09-12T13:33:52Z', 'containerID': 'containerd://9218ca8b78b862240d08a6b72a257c08fed1cd6dfd8ec6bc4d4b792c0969d057'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'docker.io/flannel/flannel-cni-plugin:v1.4.0-flannel1', 'imageID': 'docker.io/flannel/flannel-cni-plugin@sha256:743c25e5e477527d8e54faa3e5259fbbee3463a335de1690879fc74305edc79b', 'containerID': 'containerd://9218ca8b78b862240d08a6b72a257c08fed1cd6dfd8ec6bc4d4b792c0969d057', 'started': False}, {'name': 'install-cni', 'state': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T13:33:57Z', 'finishedAt': '2025-09-12T13:33:57Z', 'containerID': 'containerd://968310553ecc5539f7bb0853108d6905d733b332d31955c05b967ee2e0fc9313'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'docker.io/flannel/flannel:v0.24.2', 'imageID': 'docker.io/flannel/flannel@sha256:2a2b74a762a5d99517659f940e3f2ad774de293d41fce6a78378df6fe9320173', 'containerID': 'containerd://968310553ecc5539f7bb0853108d6905d733b332d31955c05b967ee2e0fc9313', 'started': False}], 'containerStatuses': [{'name': 'kube-flannel', 'state': {'running': {'startedAt': '2025-09-12T13:33:58Z'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'docker.io/flannel/flannel:v0.24.2', 'imageID': 'docker.io/flannel/flannel@sha256:2a2b74a762a5d99517659f940e3f2ad774de293d41fce6a78378df6fe9320173', 'containerID': 'containerd://33285268119196e7bc2d01a2d4c1fc24889b5cdcdc2dcea18c2f32bf714e9c78', 'started': True}], 'qosClass': 'Burstable'}, 'apiVersion': 'v1', 'kind': 'Pod'}) =>
  msg: Flannel pod kube-flannel-ds-fmxpq on node masternode is Running
ok: [masternode] => (item={'metadata': {'name': 'kube-flannel-ds-hns7m', 'generateName': 'kube-flannel-ds-', 'namespace': 'kube-flannel', 'uid': '1fc6bc2f-e94a-4f81-ab3f-0e81350f877a', 'resourceVersion': '211088', 'creationTimestamp': '2025-09-12T13:33:59Z', 'labels': {'app': 'flannel', 'controller-revision-hash': '5cc678f779', 'k8s-app': 'flannel', 'pod-template-generation': '2', 'tier': 'node'}, 'ownerReferences': [{'apiVersion': 'apps/v1', 'kind': 'DaemonSet', 'name': 'kube-flannel-ds', 'uid': '498c66ad-8d8f-4b82-abce-7eff1439f0f1', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T13:33:59Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:generateName': {}, 'f:labels': {'.': {}, 'f:app': {}, 'f:controller-revision-hash': {}, 'f:k8s-app': {}, 'f:pod-template-generation': {}, 'f:tier': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"498c66ad-8d8f-4b82-abce-7eff1439f0f1"}': {}}}, 'f:spec': {'f:affinity': {'.': {}, 'f:nodeAffinity': {'.': {}, 'f:requiredDuringSchedulingIgnoredDuringExecution': {}}}, 'f:containers': {'k:{"name":"kube-flannel"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"CONT_WHEN_CACHE_NOT_READY"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"EVENT_QUEUE_DEPTH"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {'.': {}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:capabilities': {'.': {}, 'f:add': {}}, 'f:privileged': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/run/flannel"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/run/xtables.lock"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:hostNetwork': {}, 'f:initContainers': {'.': {}, 'k:{"name":"install-cni"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/cni/net.d"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}, 'k:{"name":"install-cni-plugin"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/opt/cni/bin"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:priorityClassName': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"cni"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"cni-plugin"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"flannel-cfg"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"run"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"xtables-lock"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}}}}}, {'manager': 'kubelet', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T15:11:05Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Initialized"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"PodReadyToStartContainers"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Ready"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:containerStatuses': {}, 'f:hostIP': {}, 'f:hostIPs': {}, 'f:initContainerStatuses': {}, 'f:phase': {}, 'f:podIP': {}, 'f:podIPs': {'.': {}, 'k:{"ip":"192.168.4.62"}': {'.': {}, 'f:ip': {}}}, 'f:startTime': {}}}, 'subresource': 'status'}]}, 'spec': {'volumes': [{'name': 'run', 'hostPath': {'path': '/run/flannel', 'type': ''}}, {'name': 'cni-plugin', 'hostPath': {'path': '/opt/cni/bin', 'type': ''}}, {'name': 'cni', 'hostPath': {'path': '/etc/cni/net.d', 'type': ''}}, {'name': 'flannel-cfg', 'configMap': {'name': 'kube-flannel-cfg', 'defaultMode': 420}}, {'name': 'xtables-lock', 'hostPath': {'path': '/run/xtables.lock', 'type': 'FileOrCreate'}}, {'name': 'kube-api-access-nrx29', 'projected': {'sources': [{'serviceAccountToken': {'expirationSeconds': 3607, 'path': 'token'}}, {'configMap': {'name': 'kube-root-ca.crt', 'items': [{'key': 'ca.crt', 'path': 'ca.crt'}]}}, {'downwardAPI': {'items': [{'path': 'namespace', 'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}]}}], 'defaultMode': 420}}], 'initContainers': [{'name': 'install-cni-plugin', 'image': 'docker.io/flannel/flannel-cni-plugin:v1.4.0-flannel1', 'command': ['cp'], 'args': ['-f', '/flannel', '/opt/cni/bin/flannel'], 'resources': {}, 'volumeMounts': [{'name': 'cni-plugin', 'mountPath': '/opt/cni/bin'}, {'name': 'kube-api-access-nrx29', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}, {'name': 'install-cni', 'image': 'docker.io/flannel/flannel:v0.24.2', 'command': ['cp'], 'args': ['-f', '/etc/kube-flannel/cni-conf.json', '/etc/cni/net.d/10-flannel.conflist'], 'resources': {}, 'volumeMounts': [{'name': 'cni', 'mountPath': '/etc/cni/net.d'}, {'name': 'flannel-cfg', 'mountPath': '/etc/kube-flannel/'}, {'name': 'kube-api-access-nrx29', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'containers': [{'name': 'kube-flannel', 'image': 'docker.io/flannel/flannel:v0.24.2', 'command': ['/opt/bin/flanneld'], 'args': ['--ip-masq', '--kube-subnet-mgr'], 'env': [{'name': 'POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'EVENT_QUEUE_DEPTH', 'value': '5000'}, {'name': 'CONT_WHEN_CACHE_NOT_READY', 'value': 'false'}], 'resources': {'requests': {'cpu': '100m', 'memory': '50Mi'}}, 'volumeMounts': [{'name': 'run', 'mountPath': '/run/flannel'}, {'name': 'flannel-cfg', 'mountPath': '/etc/kube-flannel/'}, {'name': 'xtables-lock', 'mountPath': '/run/xtables.lock'}, {'name': 'kube-api-access-nrx29', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'add': ['NET_ADMIN', 'NET_RAW']}, 'privileged': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'flannel', 'serviceAccount': 'flannel', 'nodeName': 'homelab', 'hostNetwork': True, 'securityContext': {}, 'affinity': {'nodeAffinity': {'requiredDuringSchedulingIgnoredDuringExecution': {'nodeSelectorTerms': [{'matchFields': [{'key': 'metadata.name', 'operator': 'In', 'values': ['homelab']}]}]}}}, 'schedulerName': 'default-scheduler', 'tolerations': [{'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/not-ready', 'operator': 'Exists', 'effect': 'NoExecute'}, {'key': 'node.kubernetes.io/unreachable', 'operator': 'Exists', 'effect': 'NoExecute'}, {'key': 'node.kubernetes.io/disk-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/memory-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/pid-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/unschedulable', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/network-unavailable', 'operator': 'Exists', 'effect': 'NoSchedule'}], 'priorityClassName': 'system-node-critical', 'priority': 2000001000, 'enableServiceLinks': True, 'preemptionPolicy': 'PreemptLowerPriority'}, 'status': {'phase': 'Running', 'conditions': [{'type': 'PodReadyToStartContainers', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T15:10:51Z'}, {'type': 'Initialized', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T13:34:06Z'}, {'type': 'Ready', 'status': 'False', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T15:10:50Z', 'reason': 'ContainersNotReady', 'message': 'containers with unready status: [kube-flannel]'}, {'type': 'ContainersReady', 'status': 'False', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T15:10:50Z', 'reason': 'ContainersNotReady', 'message': 'containers with unready status: [kube-flannel]'}, {'type': 'PodScheduled', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T13:33:59Z'}], 'hostIP': '192.168.4.62', 'hostIPs': [{'ip': '192.168.4.62'}], 'podIP': '192.168.4.62', 'podIPs': [{'ip': '192.168.4.62'}], 'startTime': '2025-09-12T13:33:59Z', 'initContainerStatuses': [{'name': 'install-cni-plugin', 'state': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T15:10:50Z', 'finishedAt': '2025-09-12T15:10:50Z', 'containerID': 'containerd://b292c1191f1e734e7c57d5fb8e2bcc7b471de69a93abe56bfd9629c15d6474d9'}}, 'lastState': {}, 'ready': True, 'restartCount': 14, 'image': 'docker.io/flannel/flannel-cni-plugin:v1.4.0-flannel1', 'imageID': 'docker.io/flannel/flannel-cni-plugin@sha256:743c25e5e477527d8e54faa3e5259fbbee3463a335de1690879fc74305edc79b', 'containerID': 'containerd://b292c1191f1e734e7c57d5fb8e2bcc7b471de69a93abe56bfd9629c15d6474d9', 'started': False}, {'name': 'install-cni', 'state': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T15:10:51Z', 'finishedAt': '2025-09-12T15:10:51Z', 'containerID': 'containerd://563cf2ee1d967f07a689e275034b9002e0f44b39ba0f52b907bbce269761f909'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'docker.io/flannel/flannel:v0.24.2', 'imageID': 'docker.io/flannel/flannel@sha256:2a2b74a762a5d99517659f940e3f2ad774de293d41fce6a78378df6fe9320173', 'containerID': 'containerd://563cf2ee1d967f07a689e275034b9002e0f44b39ba0f52b907bbce269761f909', 'started': False}], 'containerStatuses': [{'name': 'kube-flannel', 'state': {'waiting': {'reason': 'CrashLoopBackOff', 'message': 'back-off 5m0s restarting failed container=kube-flannel pod=kube-flannel-ds-hns7m_kube-flannel(1fc6bc2f-e94a-4f81-ab3f-0e81350f877a)'}}, 'lastState': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T15:09:19Z', 'finishedAt': '2025-09-12T15:10:50Z', 'containerID': 'containerd://2bb313ebec2a2754bed970bfe3ad2bae27bbb8954c7411fd8454542c9bee1b39'}}, 'ready': False, 'restartCount': 19, 'image': 'docker.io/flannel/flannel:v0.24.2', 'imageID': 'docker.io/flannel/flannel@sha256:2a2b74a762a5d99517659f940e3f2ad774de293d41fce6a78378df6fe9320173', 'containerID': 'containerd://2bb313ebec2a2754bed970bfe3ad2bae27bbb8954c7411fd8454542c9bee1b39', 'started': False}], 'qosClass': 'Burstable'}, 'apiVersion': 'v1', 'kind': 'Pod'}) =>
  msg: Flannel pod kube-flannel-ds-hns7m on node homelab is Running
ok: [masternode] => (item={'metadata': {'name': 'kube-flannel-ds-zmn26', 'generateName': 'kube-flannel-ds-', 'namespace': 'kube-flannel', 'uid': 'faf3707c-3350-418d-a288-0d0fe0f57075', 'resourceVersion': '202000', 'creationTimestamp': '2025-09-12T13:34:08Z', 'labels': {'app': 'flannel', 'controller-revision-hash': '5cc678f779', 'k8s-app': 'flannel', 'pod-template-generation': '2', 'tier': 'node'}, 'ownerReferences': [{'apiVersion': 'apps/v1', 'kind': 'DaemonSet', 'name': 'kube-flannel-ds', 'uid': '498c66ad-8d8f-4b82-abce-7eff1439f0f1', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T13:34:08Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:generateName': {}, 'f:labels': {'.': {}, 'f:app': {}, 'f:controller-revision-hash': {}, 'f:k8s-app': {}, 'f:pod-template-generation': {}, 'f:tier': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"498c66ad-8d8f-4b82-abce-7eff1439f0f1"}': {}}}, 'f:spec': {'f:affinity': {'.': {}, 'f:nodeAffinity': {'.': {}, 'f:requiredDuringSchedulingIgnoredDuringExecution': {}}}, 'f:containers': {'k:{"name":"kube-flannel"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"CONT_WHEN_CACHE_NOT_READY"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"EVENT_QUEUE_DEPTH"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {'.': {}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:capabilities': {'.': {}, 'f:add': {}}, 'f:privileged': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/run/flannel"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/run/xtables.lock"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:hostNetwork': {}, 'f:initContainers': {'.': {}, 'k:{"name":"install-cni"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/cni/net.d"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}, 'k:{"name":"install-cni-plugin"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/opt/cni/bin"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:priorityClassName': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"cni"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"cni-plugin"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"flannel-cfg"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"run"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"xtables-lock"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}}}}}, {'manager': 'kubelet', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T13:34:27Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Initialized"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"PodReadyToStartContainers"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Ready"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}}, 'f:containerStatuses': {}, 'f:hostIP': {}, 'f:hostIPs': {}, 'f:initContainerStatuses': {}, 'f:phase': {}, 'f:podIP': {}, 'f:podIPs': {'.': {}, 'k:{"ip":"192.168.4.61"}': {'.': {}, 'f:ip': {}}}, 'f:startTime': {}}}, 'subresource': 'status'}]}, 'spec': {'volumes': [{'name': 'run', 'hostPath': {'path': '/run/flannel', 'type': ''}}, {'name': 'cni-plugin', 'hostPath': {'path': '/opt/cni/bin', 'type': ''}}, {'name': 'cni', 'hostPath': {'path': '/etc/cni/net.d', 'type': ''}}, {'name': 'flannel-cfg', 'configMap': {'name': 'kube-flannel-cfg', 'defaultMode': 420}}, {'name': 'xtables-lock', 'hostPath': {'path': '/run/xtables.lock', 'type': 'FileOrCreate'}}, {'name': 'kube-api-access-fbksv', 'projected': {'sources': [{'serviceAccountToken': {'expirationSeconds': 3607, 'path': 'token'}}, {'configMap': {'name': 'kube-root-ca.crt', 'items': [{'key': 'ca.crt', 'path': 'ca.crt'}]}}, {'downwardAPI': {'items': [{'path': 'namespace', 'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}]}}], 'defaultMode': 420}}], 'initContainers': [{'name': 'install-cni-plugin', 'image': 'docker.io/flannel/flannel-cni-plugin:v1.4.0-flannel1', 'command': ['cp'], 'args': ['-f', '/flannel', '/opt/cni/bin/flannel'], 'resources': {}, 'volumeMounts': [{'name': 'cni-plugin', 'mountPath': '/opt/cni/bin'}, {'name': 'kube-api-access-fbksv', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}, {'name': 'install-cni', 'image': 'docker.io/flannel/flannel:v0.24.2', 'command': ['cp'], 'args': ['-f', '/etc/kube-flannel/cni-conf.json', '/etc/cni/net.d/10-flannel.conflist'], 'resources': {}, 'volumeMounts': [{'name': 'cni', 'mountPath': '/etc/cni/net.d'}, {'name': 'flannel-cfg', 'mountPath': '/etc/kube-flannel/'}, {'name': 'kube-api-access-fbksv', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'containers': [{'name': 'kube-flannel', 'image': 'docker.io/flannel/flannel:v0.24.2', 'command': ['/opt/bin/flanneld'], 'args': ['--ip-masq', '--kube-subnet-mgr'], 'env': [{'name': 'POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'EVENT_QUEUE_DEPTH', 'value': '5000'}, {'name': 'CONT_WHEN_CACHE_NOT_READY', 'value': 'false'}], 'resources': {'requests': {'cpu': '100m', 'memory': '50Mi'}}, 'volumeMounts': [{'name': 'run', 'mountPath': '/run/flannel'}, {'name': 'flannel-cfg', 'mountPath': '/etc/kube-flannel/'}, {'name': 'xtables-lock', 'mountPath': '/run/xtables.lock'}, {'name': 'kube-api-access-fbksv', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'add': ['NET_ADMIN', 'NET_RAW']}, 'privileged': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'flannel', 'serviceAccount': 'flannel', 'nodeName': 'storagenodet3500', 'hostNetwork': True, 'securityContext': {}, 'affinity': {'nodeAffinity': {'requiredDuringSchedulingIgnoredDuringExecution': {'nodeSelectorTerms': [{'matchFields': [{'key': 'metadata.name', 'operator': 'In', 'values': ['storagenodet3500']}]}]}}}, 'schedulerName': 'default-scheduler', 'tolerations': [{'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/not-ready', 'operator': 'Exists', 'effect': 'NoExecute'}, {'key': 'node.kubernetes.io/unreachable', 'operator': 'Exists', 'effect': 'NoExecute'}, {'key': 'node.kubernetes.io/disk-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/memory-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/pid-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/unschedulable', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/network-unavailable', 'operator': 'Exists', 'effect': 'NoSchedule'}], 'priorityClassName': 'system-node-critical', 'priority': 2000001000, 'enableServiceLinks': True, 'preemptionPolicy': 'PreemptLowerPriority'}, 'status': {'phase': 'Running', 'conditions': [{'type': 'PodReadyToStartContainers', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T13:34:13Z'}, {'type': 'Initialized', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T13:34:26Z'}, {'type': 'Ready', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T13:34:27Z'}, {'type': 'ContainersReady', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T13:34:27Z'}, {'type': 'PodScheduled', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T13:34:08Z'}], 'hostIP': '192.168.4.61', 'hostIPs': [{'ip': '192.168.4.61'}], 'podIP': '192.168.4.61', 'podIPs': [{'ip': '192.168.4.61'}], 'startTime': '2025-09-12T13:34:08Z', 'initContainerStatuses': [{'name': 'install-cni-plugin', 'state': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T13:34:13Z', 'finishedAt': '2025-09-12T13:34:13Z', 'containerID': 'containerd://15656a969b1c98edd520af2ceb4ab1a9199d657f723b71329d7ee452a0b82b0e'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'docker.io/flannel/flannel-cni-plugin:v1.4.0-flannel1', 'imageID': 'docker.io/flannel/flannel-cni-plugin@sha256:743c25e5e477527d8e54faa3e5259fbbee3463a335de1690879fc74305edc79b', 'containerID': 'containerd://15656a969b1c98edd520af2ceb4ab1a9199d657f723b71329d7ee452a0b82b0e', 'started': False}, {'name': 'install-cni', 'state': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T13:34:23Z', 'finishedAt': '2025-09-12T13:34:23Z', 'containerID': 'containerd://0426caecbdd6d30cf618c0376dd36fad494108408c1f27fd9ef4451301b33d69'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'docker.io/flannel/flannel:v0.24.2', 'imageID': 'docker.io/flannel/flannel@sha256:2a2b74a762a5d99517659f940e3f2ad774de293d41fce6a78378df6fe9320173', 'containerID': 'containerd://0426caecbdd6d30cf618c0376dd36fad494108408c1f27fd9ef4451301b33d69', 'started': False}], 'containerStatuses': [{'name': 'kube-flannel', 'state': {'running': {'startedAt': '2025-09-12T13:34:27Z'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'docker.io/flannel/flannel:v0.24.2', 'imageID': 'docker.io/flannel/flannel@sha256:2a2b74a762a5d99517659f940e3f2ad774de293d41fce6a78378df6fe9320173', 'containerID': 'containerd://28514fcc0ce6b5b5b2db60c41eb22b1e833046831b7f174c8bda1795cf8beafc', 'started': True}], 'qosClass': 'Burstable'}, 'apiVersion': 'v1', 'kind': 'Pod'}) =>
  msg: Flannel pod kube-flannel-ds-zmn26 on node storagenodet3500 is Running

PLAY [Deploy and Verify Monitoring Stack] *****************************************************************************************************************************************************

TASK [Check existing Prometheus Deployment selector] ******************************************************************************************************************************************
task path: /srv/monitoring_data/VMStation/ansible/playbooks/verify-cluster.yml:103
<192.168.4.63> ESTABLISH LOCAL CONNECTION FOR USER: root
<192.168.4.63> EXEC /bin/sh -c 'echo ~root && sleep 0'
<192.168.4.63> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1757690051.7491224-1174032-50884072275122 `" && echo ansible-tmp-1757690051.7491224-1174032-50884072275122="` echo /root/.ansible/tmp/ansible-tmp-1757690051.7491224-1174032-50884072275122 `" ) && sleep 0'
Using module file /root/.ansible/collections/ansible_collections/kubernetes/core/plugins/modules/k8s_info.py
<192.168.4.63> PUT /root/.ansible/tmp/ansible-local-1173686q2dnx0wb/tmp5jboe8ho TO /root/.ansible/tmp/ansible-tmp-1757690051.7491224-1174032-50884072275122/AnsiballZ_k8s_info.py
<192.168.4.63> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1757690051.7491224-1174032-50884072275122/ /root/.ansible/tmp/ansible-tmp-1757690051.7491224-1174032-50884072275122/AnsiballZ_k8s_info.py && sleep 0'
<192.168.4.63> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1757690051.7491224-1174032-50884072275122/AnsiballZ_k8s_info.py && sleep 0'
<192.168.4.63> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1757690051.7491224-1174032-50884072275122/ > /dev/null 2>&1 && sleep 0'
ok: [masternode] => changed=false
  api_found: true
  failed_when_result: false
  invocation:
    module_args:
      api_key: null
      api_version: apps/v1
      ca_cert: null
      client_cert: null
      client_key: null
      context: null
      field_selectors: []
      hidden_fields: null
      host: null
      impersonate_groups: null
      impersonate_user: null
      kind: Deployment
      kubeconfig: VALUE_SPECIFIED_IN_NO_LOG_PARAMETER
      label_selectors: []
      name: prometheus
      namespace: monitoring
      no_proxy: null
      password: null
      persist_config: null
      proxy: null
      proxy_headers: null
      username: null
      validate_certs: null
      wait: false
      wait_condition: null
      wait_sleep: 5
      wait_timeout: 120
  resources:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: '2'
      creationTimestamp: '2025-09-11T16:43:21Z'
      generation: 2
      labels:
        app.kubernetes.io/name: prometheus
      managedFields:
      - apiVersion: apps/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:labels:
              .: {}
              f:app.kubernetes.io/name: {}
          f:spec:
            f:progressDeadlineSeconds: {}
            f:replicas: {}
            f:revisionHistoryLimit: {}
            f:selector: {}
            f:strategy:
              f:rollingUpdate:
                .: {}
                f:maxSurge: {}
                f:maxUnavailable: {}
              f:type: {}
            f:template:
              f:metadata:
                f:labels:
                  .: {}
                  f:app.kubernetes.io/name: {}
              f:spec:
                f:containers:
                  k:{"name":"prometheus"}:
                    .: {}
                    f:args: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:livenessProbe:
                      .: {}
                      f:failureThreshold: {}
                      f:httpGet:
                        .: {}
                        f:path: {}
                        f:port: {}
                        f:scheme: {}
                      f:initialDelaySeconds: {}
                      f:periodSeconds: {}
                      f:successThreshold: {}
                      f:timeoutSeconds: {}
                    f:name: {}
                    f:ports:
                      .: {}
                      k:{"containerPort":9090,"protocol":"TCP"}:
                        .: {}
                        f:containerPort: {}
                        f:protocol: {}
                    f:readinessProbe:
                      .: {}
                      f:failureThreshold: {}
                      f:httpGet:
                        .: {}
                        f:path: {}
                        f:port: {}
                        f:scheme: {}
                      f:initialDelaySeconds: {}
                      f:periodSeconds: {}
                      f:successThreshold: {}
                      f:timeoutSeconds: {}
                    f:resources:
                      .: {}
                      f:limits:
                        .: {}
                        f:cpu: {}
                        f:memory: {}
                      f:requests:
                        .: {}
                        f:cpu: {}
                        f:memory: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/etc/prometheus/"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/prometheus/"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:nodeSelector: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:terminationGracePeriodSeconds: {}
                f:tolerations: {}
                f:volumes:
                  .: {}
                  k:{"name":"config-volume"}:
                    .: {}
                    f:configMap:
                      .: {}
                      f:defaultMode: {}
                      f:name: {}
                    f:name: {}
                  k:{"name":"storage-volume"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
        manager: OpenAPI-Generator
        operation: Update
        time: '2025-09-12T00:34:34Z'
      - apiVersion: apps/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:annotations:
              .: {}
              f:deployment.kubernetes.io/revision: {}
          f:status:
            f:availableReplicas: {}
            f:conditions:
              .: {}
              k:{"type":"Available"}:
                .: {}
                f:lastTransitionTime: {}
                f:lastUpdateTime: {}
                f:message: {}
                f:reason: {}
                f:status: {}
                f:type: {}
              k:{"type":"Progressing"}:
                .: {}
                f:lastTransitionTime: {}
                f:lastUpdateTime: {}
                f:message: {}
                f:reason: {}
                f:status: {}
                f:type: {}
            f:observedGeneration: {}
            f:readyReplicas: {}
            f:replicas: {}
            f:updatedReplicas: {}
        manager: kube-controller-manager
        operation: Update
        subresource: status
        time: '2025-09-12T02:33:34Z'
      name: prometheus
      namespace: monitoring
      resourceVersion: '140087'
      uid: 322eee1d-dcb1-4114-a72e-8cc7b97ff249
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app.kubernetes.io/name: prometheus
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/name: prometheus
        spec:
          containers:
          - args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus/
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
            image: prom/prometheus:latest
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /-/healthy
                port: 9090
                scheme: HTTP
              initialDelaySeconds: 60
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 1
            name: prometheus
            ports:
            - containerPort: 9090
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /-/ready
                port: 9090
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
            resources:
              limits:
                cpu: 500m
                memory: 1Gi
              requests:
                cpu: 100m
                memory: 256Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /etc/prometheus/
              name: config-volume
            - mountPath: /prometheus/
              name: storage-volume
          dnsPolicy: ClusterFirst
          nodeSelector:
            node-role.kubernetes.io/control-plane: ''
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
          volumes:
          - configMap:
              defaultMode: 420
              name: prometheus-config
            name: config-volume
          - emptyDir: {}
            name: storage-volume
    status:
      availableReplicas: 1
      conditions:
      - lastTransitionTime: '2025-09-12T02:32:59Z'
        lastUpdateTime: '2025-09-12T02:32:59Z'
        message: Deployment has minimum availability.
        reason: MinimumReplicasAvailable
        status: 'True'
        type: Available
      - lastTransitionTime: '2025-09-12T02:32:59Z'
        lastUpdateTime: '2025-09-12T02:33:34Z'
        message: ReplicaSet "prometheus-74887c8bb6" has successfully progressed.
        reason: NewReplicaSetAvailable
        status: 'True'
        type: Progressing
      observedGeneration: 2
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1

TASK [Delete Prometheus Deployment if selector doesn't match manifest expectation] ************************************************************************************************************
task path: /srv/monitoring_data/VMStation/ansible/playbooks/verify-cluster.yml:113
skipping: [masternode] => changed=false
  skip_reason: Conditional result was False

TASK [Check existing Grafana Deployment selector] *********************************************************************************************************************************************
task path: /srv/monitoring_data/VMStation/ansible/playbooks/verify-cluster.yml:123
<192.168.4.63> ESTABLISH LOCAL CONNECTION FOR USER: root
<192.168.4.63> EXEC /bin/sh -c 'echo ~root && sleep 0'
<192.168.4.63> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1757690052.5044055-1174060-177335242577782 `" && echo ansible-tmp-1757690052.5044055-1174060-177335242577782="` echo /root/.ansible/tmp/ansible-tmp-1757690052.5044055-1174060-177335242577782 `" ) && sleep 0'
Using module file /root/.ansible/collections/ansible_collections/kubernetes/core/plugins/modules/k8s_info.py
<192.168.4.63> PUT /root/.ansible/tmp/ansible-local-1173686q2dnx0wb/tmp4hnk0b3i TO /root/.ansible/tmp/ansible-tmp-1757690052.5044055-1174060-177335242577782/AnsiballZ_k8s_info.py
<192.168.4.63> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1757690052.5044055-1174060-177335242577782/ /root/.ansible/tmp/ansible-tmp-1757690052.5044055-1174060-177335242577782/AnsiballZ_k8s_info.py && sleep 0'
<192.168.4.63> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1757690052.5044055-1174060-177335242577782/AnsiballZ_k8s_info.py && sleep 0'
<192.168.4.63> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1757690052.5044055-1174060-177335242577782/ > /dev/null 2>&1 && sleep 0'
ok: [masternode] => changed=false
  api_found: true
  failed_when_result: false
  invocation:
    module_args:
      api_key: null
      api_version: apps/v1
      ca_cert: null
      client_cert: null
      client_key: null
      context: null
      field_selectors: []
      hidden_fields: null
      host: null
      impersonate_groups: null
      impersonate_user: null
      kind: Deployment
      kubeconfig: VALUE_SPECIFIED_IN_NO_LOG_PARAMETER
      label_selectors: []
      name: grafana
      namespace: monitoring
      no_proxy: null
      password: null
      persist_config: null
      proxy: null
      proxy_headers: null
      username: null
      validate_certs: null
      wait: false
      wait_condition: null
      wait_sleep: 5
      wait_timeout: 120
  resources:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: '2'
      creationTimestamp: '2025-09-11T16:43:23Z'
      generation: 2
      labels:
        app.kubernetes.io/name: grafana
      managedFields:
      - apiVersion: apps/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:labels:
              .: {}
              f:app.kubernetes.io/name: {}
          f:spec:
            f:progressDeadlineSeconds: {}
            f:replicas: {}
            f:revisionHistoryLimit: {}
            f:selector: {}
            f:strategy:
              f:rollingUpdate:
                .: {}
                f:maxSurge: {}
                f:maxUnavailable: {}
              f:type: {}
            f:template:
              f:metadata:
                f:labels:
                  .: {}
                  f:app.kubernetes.io/name: {}
              f:spec:
                f:containers:
                  k:{"name":"grafana"}:
                    .: {}
                    f:env:
                      .: {}
                      k:{"name":"GF_INSTALL_PLUGINS"}:
                        .: {}
                        f:name: {}
                      k:{"name":"GF_SECURITY_ADMIN_PASSWORD"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:livenessProbe:
                      .: {}
                      f:failureThreshold: {}
                      f:httpGet:
                        .: {}
                        f:path: {}
                        f:port: {}
                        f:scheme: {}
                      f:initialDelaySeconds: {}
                      f:periodSeconds: {}
                      f:successThreshold: {}
                      f:timeoutSeconds: {}
                    f:name: {}
                    f:ports:
                      .: {}
                      k:{"containerPort":3000,"protocol":"TCP"}:
                        .: {}
                        f:containerPort: {}
                        f:protocol: {}
                    f:readinessProbe:
                      .: {}
                      f:failureThreshold: {}
                      f:httpGet:
                        .: {}
                        f:path: {}
                        f:port: {}
                        f:scheme: {}
                      f:initialDelaySeconds: {}
                      f:periodSeconds: {}
                      f:successThreshold: {}
                      f:timeoutSeconds: {}
                    f:resources:
                      .: {}
                      f:limits:
                        .: {}
                        f:cpu: {}
                        f:memory: {}
                      f:requests:
                        .: {}
                        f:cpu: {}
                        f:memory: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/var/lib/grafana"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:nodeSelector: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:terminationGracePeriodSeconds: {}
                f:tolerations: {}
                f:volumes:
                  .: {}
                  k:{"name":"storage"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
        manager: OpenAPI-Generator
        operation: Update
        time: '2025-09-12T00:34:36Z'
      - apiVersion: apps/v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:annotations:
              .: {}
              f:deployment.kubernetes.io/revision: {}
          f:status:
            f:availableReplicas: {}
            f:conditions:
              .: {}
              k:{"type":"Available"}:
                .: {}
                f:lastTransitionTime: {}
                f:lastUpdateTime: {}
                f:message: {}
                f:reason: {}
                f:status: {}
                f:type: {}
              k:{"type":"Progressing"}:
                .: {}
                f:lastTransitionTime: {}
                f:lastUpdateTime: {}
                f:message: {}
                f:reason: {}
                f:status: {}
                f:type: {}
            f:observedGeneration: {}
            f:readyReplicas: {}
            f:replicas: {}
            f:updatedReplicas: {}
        manager: kube-controller-manager
        operation: Update
        subresource: status
        time: '2025-09-12T02:33:46Z'
      name: grafana
      namespace: monitoring
      resourceVersion: '140145'
      uid: b47550bc-3afd-4b4a-bc62-fc0958201f97
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app.kubernetes.io/name: grafana
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/name: grafana
        spec:
          containers:
          - env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
            - name: GF_INSTALL_PLUGINS
            image: grafana/grafana:latest
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /api/health
                port: 3000
                scheme: HTTP
              initialDelaySeconds: 60
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 1
            name: grafana
            ports:
            - containerPort: 3000
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /api/health
                port: 3000
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
            resources:
              limits:
                cpu: 500m
                memory: 512Mi
              requests:
                cpu: 100m
                memory: 128Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /var/lib/grafana
              name: storage
          dnsPolicy: ClusterFirst
          nodeSelector:
            node-role.kubernetes.io/control-plane: ''
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
          volumes:
          - emptyDir: {}
            name: storage
    status:
      availableReplicas: 1
      conditions:
      - lastTransitionTime: '2025-09-12T02:33:03Z'
        lastUpdateTime: '2025-09-12T02:33:03Z'
        message: Deployment has minimum availability.
        reason: MinimumReplicasAvailable
        status: 'True'
        type: Available
      - lastTransitionTime: '2025-09-12T02:33:03Z'
        lastUpdateTime: '2025-09-12T02:33:46Z'
        message: ReplicaSet "grafana-79db5b584f" has successfully progressed.
        reason: NewReplicaSetAvailable
        status: 'True'
        type: Progressing
      observedGeneration: 2
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1

TASK [Delete Grafana Deployment if selector doesn't match manifest expectation] ***************************************************************************************************************
task path: /srv/monitoring_data/VMStation/ansible/playbooks/verify-cluster.yml:133
skipping: [masternode] => changed=false
  skip_reason: Conditional result was False

TASK [Deploy monitoring namespace and components] *********************************************************************************************************************************************
task path: /srv/monitoring_data/VMStation/ansible/playbooks/verify-cluster.yml:143
<192.168.4.63> ESTABLISH LOCAL CONNECTION FOR USER: root
<192.168.4.63> EXEC /bin/sh -c 'echo ~root && sleep 0'
<192.168.4.63> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1757690053.2648623-1174088-25113771517694 `" && echo ansible-tmp-1757690053.2648623-1174088-25113771517694="` echo /root/.ansible/tmp/ansible-tmp-1757690053.2648623-1174088-25113771517694 `" ) && sleep 0'
Loading collection cloud.common from /usr/lib/python3/dist-packages/ansible_collections/cloud/common
Using module file /root/.ansible/collections/ansible_collections/kubernetes/core/plugins/modules/k8s.py
<192.168.4.63> PUT /root/.ansible/tmp/ansible-local-1173686q2dnx0wb/tmpiwn55jgo TO /root/.ansible/tmp/ansible-tmp-1757690053.2648623-1174088-25113771517694/AnsiballZ_k8s.py
<192.168.4.63> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1757690053.2648623-1174088-25113771517694/ /root/.ansible/tmp/ansible-tmp-1757690053.2648623-1174088-25113771517694/AnsiballZ_k8s.py && sleep 0'
<192.168.4.63> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1757690053.2648623-1174088-25113771517694/AnsiballZ_k8s.py && sleep 0'
<192.168.4.63> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1757690053.2648623-1174088-25113771517694/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
  File "/tmp/ansible_kubernetes.core.k8s_payload_iz7s5zba/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/runner.py", line 101, in run_module
    result = perform_action(svc, definition, module.params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/tmp/ansible_kubernetes.core.k8s_payload_iz7s5zba/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/runner.py", line 194, in perform_action
    instance, warnings = svc.update(resource, definition, existing)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/tmp/ansible_kubernetes.core.k8s_payload_iz7s5zba/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/service.py", line 446, in update
    raise exception
  File "/tmp/ansible_kubernetes.core.k8s_payload_iz7s5zba/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/service.py", line 436, in update
    return self.patch_resource(
           ^^^^^^^^^^^^^^^^^^^^
  File "/tmp/ansible_kubernetes.core.k8s_payload_iz7s5zba/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/service.py", line 156, in patch_resource
    raise CoreException(msg) from e
failed: [masternode] (item=/srv/monitoring_data/VMStation/ansible/playbooks/../../manifests/monitoring/prometheus.yaml) => changed=false
  ansible_loop_var: item
  invocation:
    module_args:
      api_key: null
      api_version: v1
      append_hash: false
      apply: false
      ca_cert: null
      client_cert: null
      client_key: null
      context: null
      continue_on_error: false
      delete_all: false
      delete_options: null
      force: false
      generate_name: null
      hidden_fields: null
      host: null
      impersonate_groups: null
      impersonate_user: null
      kind: null
      kubeconfig: VALUE_SPECIFIED_IN_NO_LOG_PARAMETER
      label_selectors: null
      merge_type: null
      name: null
      namespace: null
      no_proxy: null
      password: null
      persist_config: null
      proxy: null
      proxy_headers: null
      resource_definition: null
      server_side_apply: null
      src: /srv/monitoring_data/VMStation/manifests/monitoring/prometheus.yaml
      state: present
      template: null
      username: null
      validate: null
      validate_certs: null
      wait: false
      wait_condition: null
      wait_sleep: 5
      wait_timeout: 120
  item: /srv/monitoring_data/VMStation/ansible/playbooks/../../manifests/monitoring/prometheus.yaml
  msg: 'Failed to patch object: b''{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"Deployment.apps \\"prometheus\\" is invalid: spec.selector: Invalid value: v1.LabelSelector{MatchLabels:map[string]string{\\"app\\":\\"prometheus\\", \\"app.kubernetes.io/name\\":\\"prometheus\\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable","reason":"Invalid","details":{"name":"prometheus","group":"apps","kind":"Deployment","causes":[{"reason":"FieldValueInvalid","message":"Invalid value: v1.LabelSelector{MatchLabels:map[string]string{\\"app\\":\\"prometheus\\", \\"app.kubernetes.io/name\\":\\"prometheus\\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable","field":"spec.selector"}]},"code":422}\n'''
  reason: Unprocessable Entity
<192.168.4.63> EXEC /bin/sh -c 'echo ~root && sleep 0'
<192.168.4.63> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1757690054.207969-1174088-217191530906172 `" && echo ansible-tmp-1757690054.207969-1174088-217191530906172="` echo /root/.ansible/tmp/ansible-tmp-1757690054.207969-1174088-217191530906172 `" ) && sleep 0'
Using module file /root/.ansible/collections/ansible_collections/kubernetes/core/plugins/modules/k8s.py
<192.168.4.63> PUT /root/.ansible/tmp/ansible-local-1173686q2dnx0wb/tmplv9x4y4l TO /root/.ansible/tmp/ansible-tmp-1757690054.207969-1174088-217191530906172/AnsiballZ_k8s.py
<192.168.4.63> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1757690054.207969-1174088-217191530906172/ /root/.ansible/tmp/ansible-tmp-1757690054.207969-1174088-217191530906172/AnsiballZ_k8s.py && sleep 0'
<192.168.4.63> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1757690054.207969-1174088-217191530906172/AnsiballZ_k8s.py && sleep 0'
<192.168.4.63> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1757690054.207969-1174088-217191530906172/ > /dev/null 2>&1 && sleep 0'
The full traceback is:
  File "/tmp/ansible_kubernetes.core.k8s_payload_aa4gjzzn/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/runner.py", line 101, in run_module
    result = perform_action(svc, definition, module.params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/tmp/ansible_kubernetes.core.k8s_payload_aa4gjzzn/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/runner.py", line 194, in perform_action
    instance, warnings = svc.update(resource, definition, existing)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/tmp/ansible_kubernetes.core.k8s_payload_aa4gjzzn/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/service.py", line 446, in update
    raise exception
  File "/tmp/ansible_kubernetes.core.k8s_payload_aa4gjzzn/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/service.py", line 436, in update
    return self.patch_resource(
           ^^^^^^^^^^^^^^^^^^^^
  File "/tmp/ansible_kubernetes.core.k8s_payload_aa4gjzzn/ansible_kubernetes.core.k8s_payload.zip/ansible_collections/kubernetes/core/plugins/module_utils/k8s/service.py", line 156, in patch_resource
    raise CoreException(msg) from e
failed: [masternode] (item=/srv/monitoring_data/VMStation/ansible/playbooks/../../manifests/monitoring/grafana.yaml) => changed=false
  ansible_loop_var: item
  invocation:
    module_args:
      api_key: null
      api_version: v1
      append_hash: false
      apply: false
      ca_cert: null
      client_cert: null
      client_key: null
      context: null
      continue_on_error: false
      delete_all: false
      delete_options: null
      force: false
      generate_name: null
      hidden_fields: null
      host: null
      impersonate_groups: null
      impersonate_user: null
      kind: null
      kubeconfig: VALUE_SPECIFIED_IN_NO_LOG_PARAMETER
      label_selectors: null
      merge_type: null
      name: null
      namespace: null
      no_proxy: null
      password: null
      persist_config: null
      proxy: null
      proxy_headers: null
      resource_definition: null
      server_side_apply: null
      src: /srv/monitoring_data/VMStation/manifests/monitoring/grafana.yaml
      state: present
      template: null
      username: null
      validate: null
      validate_certs: null
      wait: false
      wait_condition: null
      wait_sleep: 5
      wait_timeout: 120
  item: /srv/monitoring_data/VMStation/ansible/playbooks/../../manifests/monitoring/grafana.yaml
  msg: 'Failed to patch object: b''{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"Deployment.apps \\"grafana\\" is invalid: spec.selector: Invalid value: v1.LabelSelector{MatchLabels:map[string]string{\\"app\\":\\"grafana\\", \\"app.kubernetes.io/name\\":\\"grafana\\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable","reason":"Invalid","details":{"name":"grafana","group":"apps","kind":"Deployment","causes":[{"reason":"FieldValueInvalid","message":"Invalid value: v1.LabelSelector{MatchLabels:map[string]string{\\"app\\":\\"grafana\\", \\"app.kubernetes.io/name\\":\\"grafana\\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable","field":"spec.selector"}]},"code":422}\n'''
  reason: Unprocessable Entity

PLAY RECAP ************************************************************************************************************************************************************************************
masternode                 : ok=13   changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0

[ERROR] ❌ Cluster verification failed!
[INFO] Run smoke test for quick diagnosis: ./deploy-cluster.sh smoke-test
