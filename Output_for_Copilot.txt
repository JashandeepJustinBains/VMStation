
TASK [Display final cluster integration summary] **********************************************************************************************************************************************
ok: [192.168.4.63] => {
    "msg": "=== Final Cluster Status After Post-Wipe Worker Integration ===\\n          Timestamp: Fri 12 Sep 2025 08:03:07 AM EDT\\n          \\n          Cluster Nodes:\\n          NAME               STATUS   ROLES           AGE   VERSION    INTERNAL-IP    EXTERNAL-IP   OS-IMAGE                                   KERNEL-VERSION                CONTAINER-RUNTIME\\n          homelab            Ready    <none>          12h   v1.29.15   192.168.4.62   <none>        Red Hat Enterprise Linux 10.0 (Coughlan)   6.12.0-55.9.1.el10_0.x86_64   containerd://1.7.27\\n          masternode         Ready    control-plane   39h   v1.29.15   192.168.4.63   <none>        Debian GNU/Linux 12 (bookworm)             6.1.0-32-amd64                containerd://1.6.20\\n          storagenodet3500   Ready    <none>          13h   v1.29.15   192.168.4.61   <none>        Debian GNU/Linux 12 (bookworm)             6.1.0-34-amd64                containerd://1.6.20\\n          \\n          Node Readiness Status:\\n          NAME               STATUS        READY\\n          homelab            PIDPressure   False\\n          masternode         PIDPressure   False\\n          storagenodet3500   PIDPressure   False\\n          \\n          Flannel DaemonSet Status:\\n          NAME              DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE   CONTAINERS     IMAGES                               SELECTOR\\n          kube-flannel-ds   3         3         3       3            3           <none>          39h   kube-flannel   ghcr.io/flannel-io/flannel:v0.27.3   app=flannel,k8s-app=flannel\\n          \\n          Pod Network Status:\\n          NAME                    READY   STATUS    RESTARTS        AGE   IP             NODE               NOMINATED NODE   READINESS GATES\\n          kube-flannel-ds-cz2k8   1/1     Running   94 (5m8s ago)   9h    192.168.4.62   homelab            <none>           <none>\\n          kube-flannel-ds-vs2k8   1/1     Running   0               9h    192.168.4.61   storagenodet3500   <none>           <none>\\n          kube-flannel-ds-x4gnh   1/1     Running   0               9h    192.168.4.63   masternode         <none>           <none>\\n          \\n          Cluster Summary:\\n          - Total nodes: 3\\n          - Ready nodes: 3\\n          - Control-plane: 1\\n          - Storage nodes: 1\\n          - Compute nodes: 1\\n          \\n          ✅ POST-WIPE WORKER INTEGRATION SUCCESSFUL\\n          All wiped workers successfully joined control-plane cluster\n\n====================================\nPOST-WIPE WORKER JOIN PROCESS COMPLETE\n====================================\n\nThe enhanced worker join process has:\n✓ Detected post-wipe worker states\n✓ Validated control-plane readiness\n✓ Generated fresh join tokens (2h TTL)\n✓ Performed enhanced reset and cleanup\n✓ Successfully joined workers to control-plane\n✓ Verified kubelet cluster connectivity (NOT standalone)\n✓ Confirmed node registration in cluster\n\nWorkers are now managed by the control-plane using TLS certificates.\nNo standalone mode detected - cluster formation successful!\n"
}

PLAY [Cluster Readiness Validation] ***********************************************************************************************************************************************************

TASK [Check cluster node status] **************************************************************************************************************************************************************
[WARNING]: kubernetes<24.2.0 is not supported or tested. Some features may not work.
ok: [192.168.4.63]

TASK [Check flannel pod status] ***************************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Display cluster status] *****************************************************************************************************************************************************************
ok: [192.168.4.63] => {
    "msg": "=== Cluster Status Check ===\nTotal nodes: 3\n- homelab: True\n- masternode: True\n- storagenodet3500: True\n\nFlannel pods: 3\n- kube-flannel-ds-cz2k8 on homelab: Running\n- kube-flannel-ds-vs2k8 on storagenodet3500: Running\n- kube-flannel-ds-x4gnh on masternode: Running\n"
}

TASK [Check for CNI bridge conflicts before flannel wait] *************************************************************************************************************************************
changed: [192.168.4.63]

TASK [Wait for flannel DaemonSet with timeout protection] *************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Handle CNI conflicts detected during flannel wait] **************************************************************************************************************************************
skipping: [192.168.4.63]

TASK [Set CNI conflict flag for post-deployment handling] *************************************************************************************************************************************
skipping: [192.168.4.63]

TASK [Handle flannel wait timeout] ************************************************************************************************************************************************************
skipping: [192.168.4.63]

TASK [Display flannel readiness status] *******************************************************************************************************************************************************
ok: [192.168.4.63] => {
    "msg": "Flannel Readiness Check Complete:\n- CNI conflicts detected: No\n- Flannel wait completed: Yes\n- Post-deployment fixes required: No\n"
}

TASK [Check if any critical pods are failing] *************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Display system pod issues] **************************************************************************************************************************************************************
ok: [192.168.4.63] => {
    "msg": "=== System Pod Status ===\n"
}

PLAY [Deploy VMStation Applications] **********************************************************************************************************************************************************

TASK [Gathering Facts] ************************************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Create monitoring namespace] ************************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Get flannel pod status] *****************************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Restart crashlooping flannel pods] ******************************************************************************************************************************************************
changed: [192.168.4.63] => (item={'metadata': {'name': 'kube-flannel-ds-cz2k8', 'generateName': 'kube-flannel-ds-', 'namespace': 'kube-flannel', 'uid': 'b5f55801-ea0c-4952-b62d-38ee3ac77df0', 'resourceVersion': '193406', 'creationTimestamp': '2025-09-12T02:32:27Z', 'labels': {'app': 'flannel', 'controller-revision-hash': '8f698f8cd', 'k8s-app': 'flannel', 'pod-template-generation': '1', 'tier': 'node'}, 'ownerReferences': [{'apiVersion': 'apps/v1', 'kind': 'DaemonSet', 'name': 'kube-flannel-ds', 'uid': '498c66ad-8d8f-4b82-abce-7eff1439f0f1', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T02:32:27Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:generateName': {}, 'f:labels': {'.': {}, 'f:app': {}, 'f:controller-revision-hash': {}, 'f:k8s-app': {}, 'f:pod-template-generation': {}, 'f:tier': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"498c66ad-8d8f-4b82-abce-7eff1439f0f1"}': {}}}, 'f:spec': {'f:affinity': {'.': {}, 'f:nodeAffinity': {'.': {}, 'f:requiredDuringSchedulingIgnoredDuringExecution': {}}}, 'f:containers': {'k:{"name":"kube-flannel"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"CONT_WHEN_CACHE_NOT_READY"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"EVENT_QUEUE_DEPTH"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {'.': {}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:capabilities': {'.': {}, 'f:add': {}}, 'f:privileged': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/run/flannel"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/run/xtables.lock"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:hostNetwork': {}, 'f:initContainers': {'.': {}, 'k:{"name":"install-cni"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/cni/net.d"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}, 'k:{"name":"install-cni-plugin"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/opt/cni/bin"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:priorityClassName': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"cni"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"cni-plugin"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"flannel-cfg"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"run"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"xtables-lock"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}}}}}, {'manager': 'kubelet', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T12:04:40Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Initialized"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"PodReadyToStartContainers"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Ready"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:containerStatuses': {}, 'f:hostIP': {}, 'f:hostIPs': {}, 'f:initContainerStatuses': {}, 'f:phase': {}, 'f:podIP': {}, 'f:podIPs': {'.': {}, 'k:{"ip":"192.168.4.62"}': {'.': {}, 'f:ip': {}}}, 'f:startTime': {}}}, 'subresource': 'status'}]}, 'spec': {'volumes': [{'name': 'run', 'hostPath': {'path': '/run/flannel', 'type': ''}}, {'name': 'cni-plugin', 'hostPath': {'path': '/opt/cni/bin', 'type': ''}}, {'name': 'cni', 'hostPath': {'path': '/etc/cni/net.d', 'type': ''}}, {'name': 'flannel-cfg', 'configMap': {'name': 'kube-flannel-cfg', 'defaultMode': 420}}, {'name': 'xtables-lock', 'hostPath': {'path': '/run/xtables.lock', 'type': 'FileOrCreate'}}, {'name': 'kube-api-access-rp2cw', 'projected': {'sources': [{'serviceAccountToken': {'expirationSeconds': 3607, 'path': 'token'}}, {'configMap': {'name': 'kube-root-ca.crt', 'items': [{'key': 'ca.crt', 'path': 'ca.crt'}]}}, {'downwardAPI': {'items': [{'path': 'namespace', 'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}]}}], 'defaultMode': 420}}], 'initContainers': [{'name': 'install-cni-plugin', 'image': 'ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1', 'command': ['cp'], 'args': ['-f', '/flannel', '/opt/cni/bin/flannel'], 'resources': {}, 'volumeMounts': [{'name': 'cni-plugin', 'mountPath': '/opt/cni/bin'}, {'name': 'kube-api-access-rp2cw', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}, {'name': 'install-cni', 'image': 'ghcr.io/flannel-io/flannel:v0.27.3', 'command': ['cp'], 'args': ['-f', '/etc/kube-flannel/cni-conf.json', '/etc/cni/net.d/10-flannel.conflist'], 'resources': {}, 'volumeMounts': [{'name': 'cni', 'mountPath': '/etc/cni/net.d'}, {'name': 'flannel-cfg', 'mountPath': '/etc/kube-flannel/'}, {'name': 'kube-api-access-rp2cw', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'containers': [{'name': 'kube-flannel', 'image': 'ghcr.io/flannel-io/flannel:v0.27.3', 'command': ['/opt/bin/flanneld'], 'args': ['--ip-masq', '--kube-subnet-mgr'], 'env': [{'name': 'POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'EVENT_QUEUE_DEPTH', 'value': '5000'}, {'name': 'CONT_WHEN_CACHE_NOT_READY', 'value': 'false'}], 'resources': {'requests': {'cpu': '100m', 'memory': '50Mi'}}, 'volumeMounts': [{'name': 'run', 'mountPath': '/run/flannel'}, {'name': 'flannel-cfg', 'mountPath': '/etc/kube-flannel/'}, {'name': 'xtables-lock', 'mountPath': '/run/xtables.lock'}, {'name': 'kube-api-access-rp2cw', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'add': ['NET_ADMIN', 'NET_RAW']}, 'privileged': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'flannel', 'serviceAccount': 'flannel', 'nodeName': 'homelab', 'hostNetwork': True, 'securityContext': {}, 'affinity': {'nodeAffinity': {'requiredDuringSchedulingIgnoredDuringExecution': {'nodeSelectorTerms': [{'matchFields': [{'key': 'metadata.name', 'operator': 'In', 'values': ['homelab']}]}]}}}, 'schedulerName': 'default-scheduler', 'tolerations': [{'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/not-ready', 'operator': 'Exists', 'effect': 'NoExecute'}, {'key': 'node.kubernetes.io/unreachable', 'operator': 'Exists', 'effect': 'NoExecute'}, {'key': 'node.kubernetes.io/disk-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/memory-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/pid-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/unschedulable', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/network-unavailable', 'operator': 'Exists', 'effect': 'NoSchedule'}], 'priorityClassName': 'system-node-critical', 'priority': 2000001000, 'enableServiceLinks': True, 'preemptionPolicy': 'PreemptLowerPriority'}, 'status': {'phase': 'Running', 'conditions': [{'type': 'PodReadyToStartContainers', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T12:04:38Z'}, {'type': 'Initialized', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:32:29Z'}, {'type': 'Ready', 'status': 'False', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T12:04:37Z', 'reason': 'ContainersNotReady', 'message': 'containers with unready status: [kube-flannel]'}, {'type': 'ContainersReady', 'status': 'False', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T12:04:37Z', 'reason': 'ContainersNotReady', 'message': 'containers with unready status: [kube-flannel]'}, {'type': 'PodScheduled', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:32:27Z'}], 'hostIP': '192.168.4.62', 'hostIPs': [{'ip': '192.168.4.62'}], 'podIP': '192.168.4.62', 'podIPs': [{'ip': '192.168.4.62'}], 'startTime': '2025-09-12T02:32:27Z', 'initContainerStatuses': [{'name': 'install-cni-plugin', 'state': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T12:04:37Z', 'finishedAt': '2025-09-12T12:04:37Z', 'containerID': 'containerd://837b67d81825af2de3d14fbb9039932171e92138470c981619b48ab2b44d8856'}}, 'lastState': {}, 'ready': True, 'restartCount': 88, 'image': 'ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1', 'imageID': 'ghcr.io/flannel-io/flannel-cni-plugin@sha256:cb3176a2c9eae5fa0acd7f45397e706eacb4577dac33cad89f93b775ff5611df', 'containerID': 'containerd://837b67d81825af2de3d14fbb9039932171e92138470c981619b48ab2b44d8856', 'started': False}, {'name': 'install-cni', 'state': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T12:04:38Z', 'finishedAt': '2025-09-12T12:04:38Z', 'containerID': 'containerd://be54d70985b7708786fdd1f10ff412b3e41f59f4dab6a1376901654b8fd877de'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'ghcr.io/flannel-io/flannel:v0.27.3', 'imageID': 'ghcr.io/flannel-io/flannel@sha256:8cc0cf9e94df48e98be84bce3e61984bbd46c3c44ad35707ec7ef40e96b009d1', 'containerID': 'containerd://be54d70985b7708786fdd1f10ff412b3e41f59f4dab6a1376901654b8fd877de', 'started': False}], 'containerStatuses': [{'name': 'kube-flannel', 'state': {'waiting': {'reason': 'CrashLoopBackOff', 'message': 'back-off 5m0s restarting failed container=kube-flannel pod=kube-flannel-ds-cz2k8_kube-flannel(b5f55801-ea0c-4952-b62d-38ee3ac77df0)'}}, 'lastState': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T12:03:06Z', 'finishedAt': '2025-09-12T12:04:36Z', 'containerID': 'containerd://57d2e24a4c0c2856633fd1d5549b9064b8fc59656e286af63c57d39c1017d5e1'}}, 'ready': False, 'restartCount': 94, 'image': 'ghcr.io/flannel-io/flannel:v0.27.3', 'imageID': 'ghcr.io/flannel-io/flannel@sha256:8cc0cf9e94df48e98be84bce3e61984bbd46c3c44ad35707ec7ef40e96b009d1', 'containerID': 'containerd://57d2e24a4c0c2856633fd1d5549b9064b8fc59656e286af63c57d39c1017d5e1', 'started': False}], 'qosClass': 'Burstable'}, 'apiVersion': 'v1', 'kind': 'Pod'})
skipping: [192.168.4.63] => (item={'metadata': {'name': 'kube-flannel-ds-vs2k8', 'generateName': 'kube-flannel-ds-', 'namespace': 'kube-flannel', 'uid': 'beac7998-65bc-40e7-804f-30d893a80692', 'resourceVersion': '139892', 'creationTimestamp': '2025-09-12T02:32:27Z', 'labels': {'app': 'flannel', 'controller-revision-hash': '8f698f8cd', 'k8s-app': 'flannel', 'pod-template-generation': '1', 'tier': 'node'}, 'ownerReferences': [{'apiVersion': 'apps/v1', 'kind': 'DaemonSet', 'name': 'kube-flannel-ds', 'uid': '498c66ad-8d8f-4b82-abce-7eff1439f0f1', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T02:32:27Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:generateName': {}, 'f:labels': {'.': {}, 'f:app': {}, 'f:controller-revision-hash': {}, 'f:k8s-app': {}, 'f:pod-template-generation': {}, 'f:tier': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"498c66ad-8d8f-4b82-abce-7eff1439f0f1"}': {}}}, 'f:spec': {'f:affinity': {'.': {}, 'f:nodeAffinity': {'.': {}, 'f:requiredDuringSchedulingIgnoredDuringExecution': {}}}, 'f:containers': {'k:{"name":"kube-flannel"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"CONT_WHEN_CACHE_NOT_READY"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"EVENT_QUEUE_DEPTH"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {'.': {}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:capabilities': {'.': {}, 'f:add': {}}, 'f:privileged': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/run/flannel"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/run/xtables.lock"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:hostNetwork': {}, 'f:initContainers': {'.': {}, 'k:{"name":"install-cni"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/cni/net.d"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}, 'k:{"name":"install-cni-plugin"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/opt/cni/bin"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:priorityClassName': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"cni"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"cni-plugin"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"flannel-cfg"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"run"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"xtables-lock"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}}}}}, {'manager': 'kubelet', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T02:32:32Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Initialized"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"PodReadyToStartContainers"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Ready"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}}, 'f:containerStatuses': {}, 'f:hostIP': {}, 'f:hostIPs': {}, 'f:initContainerStatuses': {}, 'f:phase': {}, 'f:podIP': {}, 'f:podIPs': {'.': {}, 'k:{"ip":"192.168.4.61"}': {'.': {}, 'f:ip': {}}}, 'f:startTime': {}}}, 'subresource': 'status'}]}, 'spec': {'volumes': [{'name': 'run', 'hostPath': {'path': '/run/flannel', 'type': ''}}, {'name': 'cni-plugin', 'hostPath': {'path': '/opt/cni/bin', 'type': ''}}, {'name': 'cni', 'hostPath': {'path': '/etc/cni/net.d', 'type': ''}}, {'name': 'flannel-cfg', 'configMap': {'name': 'kube-flannel-cfg', 'defaultMode': 420}}, {'name': 'xtables-lock', 'hostPath': {'path': '/run/xtables.lock', 'type': 'FileOrCreate'}}, {'name': 'kube-api-access-jt8dz', 'projected': {'sources': [{'serviceAccountToken': {'expirationSeconds': 3607, 'path': 'token'}}, {'configMap': {'name': 'kube-root-ca.crt', 'items': [{'key': 'ca.crt', 'path': 'ca.crt'}]}}, {'downwardAPI': {'items': [{'path': 'namespace', 'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}]}}], 'defaultMode': 420}}], 'initContainers': [{'name': 'install-cni-plugin', 'image': 'ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1', 'command': ['cp'], 'args': ['-f', '/flannel', '/opt/cni/bin/flannel'], 'resources': {}, 'volumeMounts': [{'name': 'cni-plugin', 'mountPath': '/opt/cni/bin'}, {'name': 'kube-api-access-jt8dz', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}, {'name': 'install-cni', 'image': 'ghcr.io/flannel-io/flannel:v0.27.3', 'command': ['cp'], 'args': ['-f', '/etc/kube-flannel/cni-conf.json', '/etc/cni/net.d/10-flannel.conflist'], 'resources': {}, 'volumeMounts': [{'name': 'cni', 'mountPath': '/etc/cni/net.d'}, {'name': 'flannel-cfg', 'mountPath': '/etc/kube-flannel/'}, {'name': 'kube-api-access-jt8dz', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'containers': [{'name': 'kube-flannel', 'image': 'ghcr.io/flannel-io/flannel:v0.27.3', 'command': ['/opt/bin/flanneld'], 'args': ['--ip-masq', '--kube-subnet-mgr'], 'env': [{'name': 'POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'EVENT_QUEUE_DEPTH', 'value': '5000'}, {'name': 'CONT_WHEN_CACHE_NOT_READY', 'value': 'false'}], 'resources': {'requests': {'cpu': '100m', 'memory': '50Mi'}}, 'volumeMounts': [{'name': 'run', 'mountPath': '/run/flannel'}, {'name': 'flannel-cfg', 'mountPath': '/etc/kube-flannel/'}, {'name': 'xtables-lock', 'mountPath': '/run/xtables.lock'}, {'name': 'kube-api-access-jt8dz', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'add': ['NET_ADMIN', 'NET_RAW']}, 'privileged': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'flannel', 'serviceAccount': 'flannel', 'nodeName': 'storagenodet3500', 'hostNetwork': True, 'securityContext': {}, 'affinity': {'nodeAffinity': {'requiredDuringSchedulingIgnoredDuringExecution': {'nodeSelectorTerms': [{'matchFields': [{'key': 'metadata.name', 'operator': 'In', 'values': ['storagenodet3500']}]}]}}}, 'schedulerName': 'default-scheduler', 'tolerations': [{'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/not-ready', 'operator': 'Exists', 'effect': 'NoExecute'}, {'key': 'node.kubernetes.io/unreachable', 'operator': 'Exists', 'effect': 'NoExecute'}, {'key': 'node.kubernetes.io/disk-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/memory-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/pid-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/unschedulable', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/network-unavailable', 'operator': 'Exists', 'effect': 'NoSchedule'}], 'priorityClassName': 'system-node-critical', 'priority': 2000001000, 'enableServiceLinks': True, 'preemptionPolicy': 'PreemptLowerPriority'}, 'status': {'phase': 'Running', 'conditions': [{'type': 'PodReadyToStartContainers', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:32:30Z'}, {'type': 'Initialized', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:32:31Z'}, {'type': 'Ready', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:32:32Z'}, {'type': 'ContainersReady', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:32:32Z'}, {'type': 'PodScheduled', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:32:27Z'}], 'hostIP': '192.168.4.61', 'hostIPs': [{'ip': '192.168.4.61'}], 'podIP': '192.168.4.61', 'podIPs': [{'ip': '192.168.4.61'}], 'startTime': '2025-09-12T02:32:27Z', 'initContainerStatuses': [{'name': 'install-cni-plugin', 'state': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T02:32:29Z', 'finishedAt': '2025-09-12T02:32:29Z', 'containerID': 'containerd://fb79d39c911bf0ac81ab9ba287d3bf1b268249a960d52a2baaaeb22b7c13609d'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1', 'imageID': 'ghcr.io/flannel-io/flannel-cni-plugin@sha256:cb3176a2c9eae5fa0acd7f45397e706eacb4577dac33cad89f93b775ff5611df', 'containerID': 'containerd://fb79d39c911bf0ac81ab9ba287d3bf1b268249a960d52a2baaaeb22b7c13609d', 'started': False}, {'name': 'install-cni', 'state': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T02:32:30Z', 'finishedAt': '2025-09-12T02:32:30Z', 'containerID': 'containerd://a95e19ab3ab5896fb1e0e21a1374263b30464144ce0d7607250a2fa2435126b1'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'ghcr.io/flannel-io/flannel:v0.27.3', 'imageID': 'ghcr.io/flannel-io/flannel@sha256:8cc0cf9e94df48e98be84bce3e61984bbd46c3c44ad35707ec7ef40e96b009d1', 'containerID': 'containerd://a95e19ab3ab5896fb1e0e21a1374263b30464144ce0d7607250a2fa2435126b1', 'started': False}], 'containerStatuses': [{'name': 'kube-flannel', 'state': {'running': {'startedAt': '2025-09-12T02:32:31Z'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'ghcr.io/flannel-io/flannel:v0.27.3', 'imageID': 'ghcr.io/flannel-io/flannel@sha256:8cc0cf9e94df48e98be84bce3e61984bbd46c3c44ad35707ec7ef40e96b009d1', 'containerID': 'containerd://f575d001d60270fbdf959a58de89f6ab0748f3ed4ff43a2585c60783d5ec55e3', 'started': True}], 'qosClass': 'Burstable'}, 'apiVersion': 'v1', 'kind': 'Pod'})
skipping: [192.168.4.63] => (item={'metadata': {'name': 'kube-flannel-ds-x4gnh', 'generateName': 'kube-flannel-ds-', 'namespace': 'kube-flannel', 'uid': '29081ede-67c8-475a-be9e-5b6c9fe7de92', 'resourceVersion': '139886', 'creationTimestamp': '2025-09-12T02:32:27Z', 'labels': {'app': 'flannel', 'controller-revision-hash': '8f698f8cd', 'k8s-app': 'flannel', 'pod-template-generation': '1', 'tier': 'node'}, 'ownerReferences': [{'apiVersion': 'apps/v1', 'kind': 'DaemonSet', 'name': 'kube-flannel-ds', 'uid': '498c66ad-8d8f-4b82-abce-7eff1439f0f1', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T02:32:27Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:generateName': {}, 'f:labels': {'.': {}, 'f:app': {}, 'f:controller-revision-hash': {}, 'f:k8s-app': {}, 'f:pod-template-generation': {}, 'f:tier': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"498c66ad-8d8f-4b82-abce-7eff1439f0f1"}': {}}}, 'f:spec': {'f:affinity': {'.': {}, 'f:nodeAffinity': {'.': {}, 'f:requiredDuringSchedulingIgnoredDuringExecution': {}}}, 'f:containers': {'k:{"name":"kube-flannel"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"CONT_WHEN_CACHE_NOT_READY"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"EVENT_QUEUE_DEPTH"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {'.': {}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:capabilities': {'.': {}, 'f:add': {}}, 'f:privileged': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/run/flannel"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/run/xtables.lock"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:hostNetwork': {}, 'f:initContainers': {'.': {}, 'k:{"name":"install-cni"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/cni/net.d"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/etc/kube-flannel/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}, 'k:{"name":"install-cni-plugin"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/opt/cni/bin"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:priorityClassName': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"cni"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"cni-plugin"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"flannel-cfg"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"run"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}, 'k:{"name":"xtables-lock"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}}}}}, {'manager': 'kubelet', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T02:32:31Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Initialized"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"PodReadyToStartContainers"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Ready"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}}, 'f:containerStatuses': {}, 'f:hostIP': {}, 'f:hostIPs': {}, 'f:initContainerStatuses': {}, 'f:phase': {}, 'f:podIP': {}, 'f:podIPs': {'.': {}, 'k:{"ip":"192.168.4.63"}': {'.': {}, 'f:ip': {}}}, 'f:startTime': {}}}, 'subresource': 'status'}]}, 'spec': {'volumes': [{'name': 'run', 'hostPath': {'path': '/run/flannel', 'type': ''}}, {'name': 'cni-plugin', 'hostPath': {'path': '/opt/cni/bin', 'type': ''}}, {'name': 'cni', 'hostPath': {'path': '/etc/cni/net.d', 'type': ''}}, {'name': 'flannel-cfg', 'configMap': {'name': 'kube-flannel-cfg', 'defaultMode': 420}}, {'name': 'xtables-lock', 'hostPath': {'path': '/run/xtables.lock', 'type': 'FileOrCreate'}}, {'name': 'kube-api-access-n95pg', 'projected': {'sources': [{'serviceAccountToken': {'expirationSeconds': 3607, 'path': 'token'}}, {'configMap': {'name': 'kube-root-ca.crt', 'items': [{'key': 'ca.crt', 'path': 'ca.crt'}]}}, {'downwardAPI': {'items': [{'path': 'namespace', 'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}]}}], 'defaultMode': 420}}], 'initContainers': [{'name': 'install-cni-plugin', 'image': 'ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1', 'command': ['cp'], 'args': ['-f', '/flannel', '/opt/cni/bin/flannel'], 'resources': {}, 'volumeMounts': [{'name': 'cni-plugin', 'mountPath': '/opt/cni/bin'}, {'name': 'kube-api-access-n95pg', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}, {'name': 'install-cni', 'image': 'ghcr.io/flannel-io/flannel:v0.27.3', 'command': ['cp'], 'args': ['-f', '/etc/kube-flannel/cni-conf.json', '/etc/cni/net.d/10-flannel.conflist'], 'resources': {}, 'volumeMounts': [{'name': 'cni', 'mountPath': '/etc/cni/net.d'}, {'name': 'flannel-cfg', 'mountPath': '/etc/kube-flannel/'}, {'name': 'kube-api-access-n95pg', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'containers': [{'name': 'kube-flannel', 'image': 'ghcr.io/flannel-io/flannel:v0.27.3', 'command': ['/opt/bin/flanneld'], 'args': ['--ip-masq', '--kube-subnet-mgr'], 'env': [{'name': 'POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'EVENT_QUEUE_DEPTH', 'value': '5000'}, {'name': 'CONT_WHEN_CACHE_NOT_READY', 'value': 'false'}], 'resources': {'requests': {'cpu': '100m', 'memory': '50Mi'}}, 'volumeMounts': [{'name': 'run', 'mountPath': '/run/flannel'}, {'name': 'flannel-cfg', 'mountPath': '/etc/kube-flannel/'}, {'name': 'xtables-lock', 'mountPath': '/run/xtables.lock'}, {'name': 'kube-api-access-n95pg', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'add': ['NET_ADMIN', 'NET_RAW']}, 'privileged': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'flannel', 'serviceAccount': 'flannel', 'nodeName': 'masternode', 'hostNetwork': True, 'securityContext': {}, 'affinity': {'nodeAffinity': {'requiredDuringSchedulingIgnoredDuringExecution': {'nodeSelectorTerms': [{'matchFields': [{'key': 'metadata.name', 'operator': 'In', 'values': ['masternode']}]}]}}}, 'schedulerName': 'default-scheduler', 'tolerations': [{'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/not-ready', 'operator': 'Exists', 'effect': 'NoExecute'}, {'key': 'node.kubernetes.io/unreachable', 'operator': 'Exists', 'effect': 'NoExecute'}, {'key': 'node.kubernetes.io/disk-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/memory-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/pid-pressure', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/unschedulable', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/network-unavailable', 'operator': 'Exists', 'effect': 'NoSchedule'}], 'priorityClassName': 'system-node-critical', 'priority': 2000001000, 'enableServiceLinks': True, 'preemptionPolicy': 'PreemptLowerPriority'}, 'status': {'phase': 'Running', 'conditions': [{'type': 'PodReadyToStartContainers', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:32:28Z'}, {'type': 'Initialized', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:32:30Z'}, {'type': 'Ready', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:32:31Z'}, {'type': 'ContainersReady', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:32:31Z'}, {'type': 'PodScheduled', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:32:27Z'}], 'hostIP': '192.168.4.63', 'hostIPs': [{'ip': '192.168.4.63'}], 'podIP': '192.168.4.63', 'podIPs': [{'ip': '192.168.4.63'}], 'startTime': '2025-09-12T02:32:27Z', 'initContainerStatuses': [{'name': 'install-cni-plugin', 'state': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T02:32:28Z', 'finishedAt': '2025-09-12T02:32:28Z', 'containerID': 'containerd://e55af78cea304bf512d3683a9cc93a17515c23cd1e143934ba90193647604436'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1', 'imageID': 'ghcr.io/flannel-io/flannel-cni-plugin@sha256:cb3176a2c9eae5fa0acd7f45397e706eacb4577dac33cad89f93b775ff5611df', 'containerID': 'containerd://e55af78cea304bf512d3683a9cc93a17515c23cd1e143934ba90193647604436', 'started': False}, {'name': 'install-cni', 'state': {'terminated': {'exitCode': 0, 'reason': 'Completed', 'startedAt': '2025-09-12T02:32:29Z', 'finishedAt': '2025-09-12T02:32:29Z', 'containerID': 'containerd://966a46456d9497beb1257d29b207b2517cd7cdd0a29b703cd7aefaa694472fa2'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'ghcr.io/flannel-io/flannel:v0.27.3', 'imageID': 'ghcr.io/flannel-io/flannel@sha256:8cc0cf9e94df48e98be84bce3e61984bbd46c3c44ad35707ec7ef40e96b009d1', 'containerID': 'containerd://966a46456d9497beb1257d29b207b2517cd7cdd0a29b703cd7aefaa694472fa2', 'started': False}], 'containerStatuses': [{'name': 'kube-flannel', 'state': {'running': {'startedAt': '2025-09-12T02:32:30Z'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'ghcr.io/flannel-io/flannel:v0.27.3', 'imageID': 'ghcr.io/flannel-io/flannel@sha256:8cc0cf9e94df48e98be84bce3e61984bbd46c3c44ad35707ec7ef40e96b009d1', 'containerID': 'containerd://505f774aa05a30ba04dfc3c3b806f686180ec90b1011c1ffa88af3404e023ee3', 'started': True}], 'qosClass': 'Burstable'}, 'apiVersion': 'v1', 'kind': 'Pod'})

TASK [Wait for flannel to stabilize] **********************************************************************************************************************************************************
Pausing for 30 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [192.168.4.63]

TASK [Deploy Prometheus] **********************************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Create Prometheus ConfigMap] ************************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Deploy Prometheus Service] **************************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Deploy Grafana] *************************************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Deploy Grafana Service] *****************************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Deploy Loki] ****************************************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Deploy Loki Service] ********************************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Deploy Kubernetes Dashboard] ************************************************************************************************************************************************************
changed: [192.168.4.63]

TASK [Patch Kubernetes Dashboard to run on monitoring node] ***********************************************************************************************************************************
changed: [192.168.4.63]

TASK [Patch Dashboard Metrics Scraper to run on monitoring node] ******************************************************************************************************************************
changed: [192.168.4.63]

TASK [Create Dashboard Admin User] ************************************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Create Dashboard Admin ClusterRoleBinding] **********************************************************************************************************************************************
ok: [192.168.4.63]

TASK [Check if cluster networking is stable before waiting] ***********************************************************************************************************************************
ok: [192.168.4.63]

TASK [Verify at least one CoreDNS pod is running] *********************************************************************************************************************************************
skipping: [192.168.4.63]

TASK [Wait for applications to be ready with reduced timeout] *********************************************************************************************************************************
ok: [192.168.4.63] => (item=prometheus)
ok: [192.168.4.63] => (item=grafana)
ok: [192.168.4.63] => (item=loki)

TASK [Check pod status for troubleshooting] ***************************************************************************************************************************************************
skipping: [192.168.4.63] => (item={'changed': False, 'resources': [{'kind': 'Pod', 'apiVersion': 'v1', 'metadata': {'name': 'prometheus-74887c8bb6-rqdl5', 'generateName': 'prometheus-74887c8bb6-', 'namespace': 'monitoring', 'uid': 'e2297b1f-dec8-4135-91df-cd1aa42641d1', 'resourceVersion': '140074', 'creationTimestamp': '2025-09-12T00:34:34Z', 'labels': {'app.kubernetes.io/name': 'prometheus', 'pod-template-hash': '74887c8bb6'}, 'ownerReferences': [{'apiVersion': 'apps/v1', 'kind': 'ReplicaSet', 'name': 'prometheus-74887c8bb6', 'uid': 'f2897b78-d2e5-4f29-b79d-b9b31bf5b68e', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T00:34:34Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:generateName': {}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/name': {}, 'f:pod-template-hash': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"f2897b78-d2e5-4f29-b79d-b9b31bf5b68e"}': {}}}, 'f:spec': {'f:containers': {'k:{"name":"prometheus"}': {'.': {}, 'f:args': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":9090,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/prometheus/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/prometheus/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"config-volume"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"storage-volume"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}, {'manager': 'kubelet', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T02:33:34Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Initialized"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"PodReadyToStartContainers"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Ready"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}}, 'f:containerStatuses': {}, 'f:hostIP': {}, 'f:hostIPs': {}, 'f:phase': {}, 'f:podIP': {}, 'f:podIPs': {'.': {}, 'k:{"ip":"10.244.0.23"}': {'.': {}, 'f:ip': {}}}, 'f:startTime': {}}}, 'subresource': 'status'}]}, 'spec': {'volumes': [{'name': 'config-volume', 'configMap': {'name': 'prometheus-config', 'defaultMode': 420}}, {'name': 'storage-volume', 'emptyDir': {}}, {'name': 'kube-api-access-bldqd', 'projected': {'sources': [{'serviceAccountToken': {'expirationSeconds': 3607, 'path': 'token'}}, {'configMap': {'name': 'kube-root-ca.crt', 'items': [{'key': 'ca.crt', 'path': 'ca.crt'}]}}, {'downwardAPI': {'items': [{'path': 'namespace', 'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}]}}], 'defaultMode': 420}}], 'containers': [{'name': 'prometheus', 'image': 'prom/prometheus:latest', 'args': ['--config.file=/etc/prometheus/prometheus.yml', '--storage.tsdb.path=/prometheus/', '--web.console.libraries=/etc/prometheus/console_libraries', '--web.console.templates=/etc/prometheus/consoles', '--web.enable-lifecycle'], 'ports': [{'containerPort': 9090, 'protocol': 'TCP'}], 'resources': {'limits': {'cpu': '500m', 'memory': '1Gi'}, 'requests': {'cpu': '100m', 'memory': '256Mi'}}, 'volumeMounts': [{'name': 'config-volume', 'mountPath': '/etc/prometheus/'}, {'name': 'storage-volume', 'mountPath': '/prometheus/'}, {'name': 'kube-api-access-bldqd', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'livenessProbe': {'httpGet': {'path': '/-/healthy', 'port': 9090, 'scheme': 'HTTP'}, 'initialDelaySeconds': 60, 'timeoutSeconds': 1, 'periodSeconds': 30, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/-/ready', 'port': 9090, 'scheme': 'HTTP'}, 'initialDelaySeconds': 30, 'timeoutSeconds': 5, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'node-role.kubernetes.io/control-plane': ''}, 'serviceAccountName': 'default', 'serviceAccount': 'default', 'nodeName': 'masternode', 'securityContext': {}, 'schedulerName': 'default-scheduler', 'tolerations': [{'key': 'node-role.kubernetes.io/control-plane', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/not-ready', 'operator': 'Exists', 'effect': 'NoExecute', 'tolerationSeconds': 300}, {'key': 'node.kubernetes.io/unreachable', 'operator': 'Exists', 'effect': 'NoExecute', 'tolerationSeconds': 300}], 'priority': 0, 'enableServiceLinks': True, 'preemptionPolicy': 'PreemptLowerPriority'}, 'status': {'phase': 'Running', 'conditions': [{'type': 'PodReadyToStartContainers', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:04Z'}, {'type': 'Initialized', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T00:34:34Z'}, {'type': 'Ready', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:34Z'}, {'type': 'ContainersReady', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:34Z'}, {'type': 'PodScheduled', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T00:34:34Z'}], 'hostIP': '192.168.4.63', 'hostIPs': [{'ip': '192.168.4.63'}], 'podIP': '10.244.0.23', 'podIPs': [{'ip': '10.244.0.23'}], 'startTime': '2025-09-12T00:34:34Z', 'containerStatuses': [{'name': 'prometheus', 'state': {'running': {'startedAt': '2025-09-12T02:33:04Z'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'docker.io/prom/prometheus:latest', 'imageID': 'docker.io/prom/prometheus@sha256:63805ebb8d2b3920190daf1cb14a60871b16fd38bed42b857a3182bc621f4996', 'containerID': 'containerd://5141fedde1f3c44ca348a2196b48a1350a2bcf56e1bdfcdfb7c24803972c8a08', 'started': True}], 'qosClass': 'Burstable'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'v1', 'kind': 'Pod', 'namespace': 'monitoring', 'label_selectors': ['app.kubernetes.io/name=prometheus'], 'wait': True, 'wait_condition': {'type': 'Ready', 'status': True, 'reason': None}, 'wait_timeout': 300, 'wait_sleep': 5, 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'no_proxy': None, 'proxy_headers': None, 'persist_config': None, 'impersonate_user': None, 'impersonate_groups': None, 'name': None, 'hidden_fields': None}}, 'failed': False, 'item': 'prometheus', 'ansible_loop_var': 'item'})
skipping: [192.168.4.63] => (item={'changed': False, 'resources': [{'kind': 'Pod', 'apiVersion': 'v1', 'metadata': {'name': 'grafana-79db5b584f-jdbgf', 'generateName': 'grafana-79db5b584f-', 'namespace': 'monitoring', 'uid': 'c1b898cc-a1e5-417d-b957-349e78ffce4c', 'resourceVersion': '140132', 'creationTimestamp': '2025-09-12T00:34:36Z', 'labels': {'app.kubernetes.io/name': 'grafana', 'pod-template-hash': '79db5b584f'}, 'ownerReferences': [{'apiVersion': 'apps/v1', 'kind': 'ReplicaSet', 'name': 'grafana-79db5b584f', 'uid': 'aea55d2e-d035-4fb2-9591-3f0a157bc8af', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T00:34:36Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:generateName': {}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/name': {}, 'f:pod-template-hash': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"aea55d2e-d035-4fb2-9591-3f0a157bc8af"}': {}}}, 'f:spec': {'f:containers': {'k:{"name":"grafana"}': {'.': {}, 'f:env': {'.': {}, 'k:{"name":"GF_INSTALL_PLUGINS"}': {'.': {}, 'f:name': {}}, 'k:{"name":"GF_SECURITY_ADMIN_PASSWORD"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":3000,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/var/lib/grafana"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"storage"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}, {'manager': 'kubelet', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T02:33:46Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Initialized"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"PodReadyToStartContainers"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Ready"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}}, 'f:containerStatuses': {}, 'f:hostIP': {}, 'f:hostIPs': {}, 'f:phase': {}, 'f:podIP': {}, 'f:podIPs': {'.': {}, 'k:{"ip":"10.244.0.29"}': {'.': {}, 'f:ip': {}}}, 'f:startTime': {}}}, 'subresource': 'status'}]}, 'spec': {'volumes': [{'name': 'storage', 'emptyDir': {}}, {'name': 'kube-api-access-wrzd8', 'projected': {'sources': [{'serviceAccountToken': {'expirationSeconds': 3607, 'path': 'token'}}, {'configMap': {'name': 'kube-root-ca.crt', 'items': [{'key': 'ca.crt', 'path': 'ca.crt'}]}}, {'downwardAPI': {'items': [{'path': 'namespace', 'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}]}}], 'defaultMode': 420}}], 'containers': [{'name': 'grafana', 'image': 'grafana/grafana:latest', 'ports': [{'containerPort': 3000, 'protocol': 'TCP'}], 'env': [{'name': 'GF_SECURITY_ADMIN_PASSWORD', 'value': 'admin'}, {'name': 'GF_INSTALL_PLUGINS'}], 'resources': {'limits': {'cpu': '500m', 'memory': '512Mi'}, 'requests': {'cpu': '100m', 'memory': '128Mi'}}, 'volumeMounts': [{'name': 'storage', 'mountPath': '/var/lib/grafana'}, {'name': 'kube-api-access-wrzd8', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'livenessProbe': {'httpGet': {'path': '/api/health', 'port': 3000, 'scheme': 'HTTP'}, 'initialDelaySeconds': 60, 'timeoutSeconds': 1, 'periodSeconds': 30, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/api/health', 'port': 3000, 'scheme': 'HTTP'}, 'initialDelaySeconds': 30, 'timeoutSeconds': 5, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'node-role.kubernetes.io/control-plane': ''}, 'serviceAccountName': 'default', 'serviceAccount': 'default', 'nodeName': 'masternode', 'securityContext': {}, 'schedulerName': 'default-scheduler', 'tolerations': [{'key': 'node-role.kubernetes.io/control-plane', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/not-ready', 'operator': 'Exists', 'effect': 'NoExecute', 'tolerationSeconds': 300}, {'key': 'node.kubernetes.io/unreachable', 'operator': 'Exists', 'effect': 'NoExecute', 'tolerationSeconds': 300}], 'priority': 0, 'enableServiceLinks': True, 'preemptionPolicy': 'PreemptLowerPriority'}, 'status': {'phase': 'Running', 'conditions': [{'type': 'PodReadyToStartContainers', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:10Z'}, {'type': 'Initialized', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T00:34:36Z'}, {'type': 'Ready', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:46Z'}, {'type': 'ContainersReady', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:46Z'}, {'type': 'PodScheduled', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T00:34:36Z'}], 'hostIP': '192.168.4.63', 'hostIPs': [{'ip': '192.168.4.63'}], 'podIP': '10.244.0.29', 'podIPs': [{'ip': '10.244.0.29'}], 'startTime': '2025-09-12T00:34:36Z', 'containerStatuses': [{'name': 'grafana', 'state': {'running': {'startedAt': '2025-09-12T02:33:10Z'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'docker.io/grafana/grafana:latest', 'imageID': 'docker.io/grafana/grafana@sha256:a1701c2180249361737a99a01bc770db39381640e4d631825d38ff4535efa47d', 'containerID': 'containerd://5d5a3403db2d8bb68c574a9d934fb8645d8bce3a0e50bae04f21fd19e5bd4a2d', 'started': True}], 'qosClass': 'Burstable'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'v1', 'kind': 'Pod', 'namespace': 'monitoring', 'label_selectors': ['app.kubernetes.io/name=grafana'], 'wait': True, 'wait_condition': {'type': 'Ready', 'status': True, 'reason': None}, 'wait_timeout': 300, 'wait_sleep': 5, 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'no_proxy': None, 'proxy_headers': None, 'persist_config': None, 'impersonate_user': None, 'impersonate_groups': None, 'name': None, 'hidden_fields': None}}, 'failed': False, 'item': 'grafana', 'ansible_loop_var': 'item'})
skipping: [192.168.4.63] => (item={'changed': False, 'resources': [{'kind': 'Pod', 'apiVersion': 'v1', 'metadata': {'name': 'loki-85d467fb56-xt466', 'generateName': 'loki-85d467fb56-', 'namespace': 'monitoring', 'uid': '472d7a10-50d8-4241-92cf-6623b433b6b1', 'resourceVersion': '140286', 'creationTimestamp': '2025-09-12T00:34:37Z', 'labels': {'app.kubernetes.io/name': 'loki', 'pod-template-hash': '85d467fb56'}, 'ownerReferences': [{'apiVersion': 'apps/v1', 'kind': 'ReplicaSet', 'name': 'loki-85d467fb56', 'uid': '48751ec9-21e3-48e5-bcb2-abbeb9fa6ca1', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T00:34:37Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:generateName': {}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/name': {}, 'f:pod-template-hash': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"48751ec9-21e3-48e5-bcb2-abbeb9fa6ca1"}': {}}}, 'f:spec': {'f:containers': {'k:{"name":"loki"}': {'.': {}, 'f:args': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":3100,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp/loki"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"storage"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}, {'manager': 'kubelet', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T02:35:03Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Initialized"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"PodReadyToStartContainers"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Ready"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}}, 'f:containerStatuses': {}, 'f:hostIP': {}, 'f:hostIPs': {}, 'f:phase': {}, 'f:podIP': {}, 'f:podIPs': {'.': {}, 'k:{"ip":"10.244.0.25"}': {'.': {}, 'f:ip': {}}}, 'f:startTime': {}}}, 'subresource': 'status'}]}, 'spec': {'volumes': [{'name': 'storage', 'emptyDir': {}}, {'name': 'kube-api-access-sj6vf', 'projected': {'sources': [{'serviceAccountToken': {'expirationSeconds': 3607, 'path': 'token'}}, {'configMap': {'name': 'kube-root-ca.crt', 'items': [{'key': 'ca.crt', 'path': 'ca.crt'}]}}, {'downwardAPI': {'items': [{'path': 'namespace', 'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}]}}], 'defaultMode': 420}}], 'containers': [{'name': 'loki', 'image': 'grafana/loki:latest', 'args': ['-config.file=/etc/loki/local-config.yaml'], 'ports': [{'containerPort': 3100, 'protocol': 'TCP'}], 'resources': {'limits': {'cpu': '500m', 'memory': '512Mi'}, 'requests': {'cpu': '100m', 'memory': '128Mi'}}, 'volumeMounts': [{'name': 'storage', 'mountPath': '/tmp/loki'}, {'name': 'kube-api-access-sj6vf', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'livenessProbe': {'httpGet': {'path': '/ready', 'port': 3100, 'scheme': 'HTTP'}, 'initialDelaySeconds': 60, 'timeoutSeconds': 1, 'periodSeconds': 30, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/ready', 'port': 3100, 'scheme': 'HTTP'}, 'initialDelaySeconds': 30, 'timeoutSeconds': 5, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'node-role.kubernetes.io/control-plane': ''}, 'serviceAccountName': 'default', 'serviceAccount': 'default', 'nodeName': 'masternode', 'securityContext': {}, 'schedulerName': 'default-scheduler', 'tolerations': [{'key': 'node-role.kubernetes.io/control-plane', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/not-ready', 'operator': 'Exists', 'effect': 'NoExecute', 'tolerationSeconds': 300}, {'key': 'node.kubernetes.io/unreachable', 'operator': 'Exists', 'effect': 'NoExecute', 'tolerationSeconds': 300}], 'priority': 0, 'enableServiceLinks': True, 'preemptionPolicy': 'PreemptLowerPriority'}, 'status': {'phase': 'Running', 'conditions': [{'type': 'PodReadyToStartContainers', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:06Z'}, {'type': 'Initialized', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T00:34:37Z'}, {'type': 'Ready', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:58Z'}, {'type': 'ContainersReady', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:58Z'}, {'type': 'PodScheduled', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T00:34:37Z'}], 'hostIP': '192.168.4.63', 'hostIPs': [{'ip': '192.168.4.63'}], 'podIP': '10.244.0.25', 'podIPs': [{'ip': '10.244.0.25'}], 'startTime': '2025-09-12T00:34:37Z', 'containerStatuses': [{'name': 'loki', 'state': {'running': {'startedAt': '2025-09-12T02:33:06Z'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'sha256:7ab1582665de88def8826ec75e2708877e1915ff794c000a6c37b2f478420510', 'imageID': 'docker.io/grafana/loki@sha256:0b9846377113bc6a56eea2e56fe5963afdea2962178bd171190e30fa25157542', 'containerID': 'containerd://0e9b544e51adb132d1689ef933dfeaa0ee4af646cf53b39718f5af15f811f2e8', 'started': True}], 'qosClass': 'Burstable'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'v1', 'kind': 'Pod', 'namespace': 'monitoring', 'label_selectors': ['app.kubernetes.io/name=loki'], 'wait': True, 'wait_condition': {'type': 'Ready', 'status': True, 'reason': None}, 'wait_timeout': 300, 'wait_sleep': 5, 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'no_proxy': None, 'proxy_headers': None, 'persist_config': None, 'impersonate_user': None, 'impersonate_groups': None, 'name': None, 'hidden_fields': None}}, 'failed': False, 'item': 'loki', 'ansible_loop_var': 'item'})
skipping: [192.168.4.63]

TASK [Display troubleshooting information for failed pods] ************************************************************************************************************************************
skipping: [192.168.4.63] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'changed': False, 'resources': [{'kind': 'Pod', 'apiVersion': 'v1', 'metadata': {'name': 'prometheus-74887c8bb6-rqdl5', 'generateName': 'prometheus-74887c8bb6-', 'namespace': 'monitoring', 'uid': 'e2297b1f-dec8-4135-91df-cd1aa42641d1', 'resourceVersion': '140074', 'creationTimestamp': '2025-09-12T00:34:34Z', 'labels': {'app.kubernetes.io/name': 'prometheus', 'pod-template-hash': '74887c8bb6'}, 'ownerReferences': [{'apiVersion': 'apps/v1', 'kind': 'ReplicaSet', 'name': 'prometheus-74887c8bb6', 'uid': 'f2897b78-d2e5-4f29-b79d-b9b31bf5b68e', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T00:34:34Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:generateName': {}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/name': {}, 'f:pod-template-hash': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"f2897b78-d2e5-4f29-b79d-b9b31bf5b68e"}': {}}}, 'f:spec': {'f:containers': {'k:{"name":"prometheus"}': {'.': {}, 'f:args': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":9090,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/prometheus/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/prometheus/"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"config-volume"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"storage-volume"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}, {'manager': 'kubelet', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T02:33:34Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Initialized"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"PodReadyToStartContainers"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Ready"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}}, 'f:containerStatuses': {}, 'f:hostIP': {}, 'f:hostIPs': {}, 'f:phase': {}, 'f:podIP': {}, 'f:podIPs': {'.': {}, 'k:{"ip":"10.244.0.23"}': {'.': {}, 'f:ip': {}}}, 'f:startTime': {}}}, 'subresource': 'status'}]}, 'spec': {'volumes': [{'name': 'config-volume', 'configMap': {'name': 'prometheus-config', 'defaultMode': 420}}, {'name': 'storage-volume', 'emptyDir': {}}, {'name': 'kube-api-access-bldqd', 'projected': {'sources': [{'serviceAccountToken': {'expirationSeconds': 3607, 'path': 'token'}}, {'configMap': {'name': 'kube-root-ca.crt', 'items': [{'key': 'ca.crt', 'path': 'ca.crt'}]}}, {'downwardAPI': {'items': [{'path': 'namespace', 'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}]}}], 'defaultMode': 420}}], 'containers': [{'name': 'prometheus', 'image': 'prom/prometheus:latest', 'args': ['--config.file=/etc/prometheus/prometheus.yml', '--storage.tsdb.path=/prometheus/', '--web.console.libraries=/etc/prometheus/console_libraries', '--web.console.templates=/etc/prometheus/consoles', '--web.enable-lifecycle'], 'ports': [{'containerPort': 9090, 'protocol': 'TCP'}], 'resources': {'limits': {'cpu': '500m', 'memory': '1Gi'}, 'requests': {'cpu': '100m', 'memory': '256Mi'}}, 'volumeMounts': [{'name': 'config-volume', 'mountPath': '/etc/prometheus/'}, {'name': 'storage-volume', 'mountPath': '/prometheus/'}, {'name': 'kube-api-access-bldqd', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'livenessProbe': {'httpGet': {'path': '/-/healthy', 'port': 9090, 'scheme': 'HTTP'}, 'initialDelaySeconds': 60, 'timeoutSeconds': 1, 'periodSeconds': 30, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/-/ready', 'port': 9090, 'scheme': 'HTTP'}, 'initialDelaySeconds': 30, 'timeoutSeconds': 5, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'node-role.kubernetes.io/control-plane': ''}, 'serviceAccountName': 'default', 'serviceAccount': 'default', 'nodeName': 'masternode', 'securityContext': {}, 'schedulerName': 'default-scheduler', 'tolerations': [{'key': 'node-role.kubernetes.io/control-plane', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/not-ready', 'operator': 'Exists', 'effect': 'NoExecute', 'tolerationSeconds': 300}, {'key': 'node.kubernetes.io/unreachable', 'operator': 'Exists', 'effect': 'NoExecute', 'tolerationSeconds': 300}], 'priority': 0, 'enableServiceLinks': True, 'preemptionPolicy': 'PreemptLowerPriority'}, 'status': {'phase': 'Running', 'conditions': [{'type': 'PodReadyToStartContainers', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:04Z'}, {'type': 'Initialized', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T00:34:34Z'}, {'type': 'Ready', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:34Z'}, {'type': 'ContainersReady', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:34Z'}, {'type': 'PodScheduled', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T00:34:34Z'}], 'hostIP': '192.168.4.63', 'hostIPs': [{'ip': '192.168.4.63'}], 'podIP': '10.244.0.23', 'podIPs': [{'ip': '10.244.0.23'}], 'startTime': '2025-09-12T00:34:34Z', 'containerStatuses': [{'name': 'prometheus', 'state': {'running': {'startedAt': '2025-09-12T02:33:04Z'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'docker.io/prom/prometheus:latest', 'imageID': 'docker.io/prom/prometheus@sha256:63805ebb8d2b3920190daf1cb14a60871b16fd38bed42b857a3182bc621f4996', 'containerID': 'containerd://5141fedde1f3c44ca348a2196b48a1350a2bcf56e1bdfcdfb7c24803972c8a08', 'started': True}], 'qosClass': 'Burstable'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'v1', 'kind': 'Pod', 'namespace': 'monitoring', 'label_selectors': ['app.kubernetes.io/name=prometheus'], 'wait': True, 'wait_condition': {'type': 'Ready', 'status': True, 'reason': None}, 'wait_timeout': 300, 'wait_sleep': 5, 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'no_proxy': None, 'proxy_headers': None, 'persist_config': None, 'impersonate_user': None, 'impersonate_groups': None, 'name': None, 'hidden_fields': None}}, 'failed': False, 'item': 'prometheus', 'ansible_loop_var': 'item'}, 'ansible_loop_var': 'item'})
skipping: [192.168.4.63] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'changed': False, 'resources': [{'kind': 'Pod', 'apiVersion': 'v1', 'metadata': {'name': 'grafana-79db5b584f-jdbgf', 'generateName': 'grafana-79db5b584f-', 'namespace': 'monitoring', 'uid': 'c1b898cc-a1e5-417d-b957-349e78ffce4c', 'resourceVersion': '140132', 'creationTimestamp': '2025-09-12T00:34:36Z', 'labels': {'app.kubernetes.io/name': 'grafana', 'pod-template-hash': '79db5b584f'}, 'ownerReferences': [{'apiVersion': 'apps/v1', 'kind': 'ReplicaSet', 'name': 'grafana-79db5b584f', 'uid': 'aea55d2e-d035-4fb2-9591-3f0a157bc8af', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T00:34:36Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:generateName': {}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/name': {}, 'f:pod-template-hash': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"aea55d2e-d035-4fb2-9591-3f0a157bc8af"}': {}}}, 'f:spec': {'f:containers': {'k:{"name":"grafana"}': {'.': {}, 'f:env': {'.': {}, 'k:{"name":"GF_INSTALL_PLUGINS"}': {'.': {}, 'f:name': {}}, 'k:{"name":"GF_SECURITY_ADMIN_PASSWORD"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":3000,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/var/lib/grafana"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"storage"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}, {'manager': 'kubelet', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T02:33:46Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Initialized"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"PodReadyToStartContainers"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Ready"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}}, 'f:containerStatuses': {}, 'f:hostIP': {}, 'f:hostIPs': {}, 'f:phase': {}, 'f:podIP': {}, 'f:podIPs': {'.': {}, 'k:{"ip":"10.244.0.29"}': {'.': {}, 'f:ip': {}}}, 'f:startTime': {}}}, 'subresource': 'status'}]}, 'spec': {'volumes': [{'name': 'storage', 'emptyDir': {}}, {'name': 'kube-api-access-wrzd8', 'projected': {'sources': [{'serviceAccountToken': {'expirationSeconds': 3607, 'path': 'token'}}, {'configMap': {'name': 'kube-root-ca.crt', 'items': [{'key': 'ca.crt', 'path': 'ca.crt'}]}}, {'downwardAPI': {'items': [{'path': 'namespace', 'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}]}}], 'defaultMode': 420}}], 'containers': [{'name': 'grafana', 'image': 'grafana/grafana:latest', 'ports': [{'containerPort': 3000, 'protocol': 'TCP'}], 'env': [{'name': 'GF_SECURITY_ADMIN_PASSWORD', 'value': 'admin'}, {'name': 'GF_INSTALL_PLUGINS'}], 'resources': {'limits': {'cpu': '500m', 'memory': '512Mi'}, 'requests': {'cpu': '100m', 'memory': '128Mi'}}, 'volumeMounts': [{'name': 'storage', 'mountPath': '/var/lib/grafana'}, {'name': 'kube-api-access-wrzd8', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'livenessProbe': {'httpGet': {'path': '/api/health', 'port': 3000, 'scheme': 'HTTP'}, 'initialDelaySeconds': 60, 'timeoutSeconds': 1, 'periodSeconds': 30, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/api/health', 'port': 3000, 'scheme': 'HTTP'}, 'initialDelaySeconds': 30, 'timeoutSeconds': 5, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'node-role.kubernetes.io/control-plane': ''}, 'serviceAccountName': 'default', 'serviceAccount': 'default', 'nodeName': 'masternode', 'securityContext': {}, 'schedulerName': 'default-scheduler', 'tolerations': [{'key': 'node-role.kubernetes.io/control-plane', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/not-ready', 'operator': 'Exists', 'effect': 'NoExecute', 'tolerationSeconds': 300}, {'key': 'node.kubernetes.io/unreachable', 'operator': 'Exists', 'effect': 'NoExecute', 'tolerationSeconds': 300}], 'priority': 0, 'enableServiceLinks': True, 'preemptionPolicy': 'PreemptLowerPriority'}, 'status': {'phase': 'Running', 'conditions': [{'type': 'PodReadyToStartContainers', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:10Z'}, {'type': 'Initialized', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T00:34:36Z'}, {'type': 'Ready', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:46Z'}, {'type': 'ContainersReady', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:46Z'}, {'type': 'PodScheduled', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T00:34:36Z'}], 'hostIP': '192.168.4.63', 'hostIPs': [{'ip': '192.168.4.63'}], 'podIP': '10.244.0.29', 'podIPs': [{'ip': '10.244.0.29'}], 'startTime': '2025-09-12T00:34:36Z', 'containerStatuses': [{'name': 'grafana', 'state': {'running': {'startedAt': '2025-09-12T02:33:10Z'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'docker.io/grafana/grafana:latest', 'imageID': 'docker.io/grafana/grafana@sha256:a1701c2180249361737a99a01bc770db39381640e4d631825d38ff4535efa47d', 'containerID': 'containerd://5d5a3403db2d8bb68c574a9d934fb8645d8bce3a0e50bae04f21fd19e5bd4a2d', 'started': True}], 'qosClass': 'Burstable'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'v1', 'kind': 'Pod', 'namespace': 'monitoring', 'label_selectors': ['app.kubernetes.io/name=grafana'], 'wait': True, 'wait_condition': {'type': 'Ready', 'status': True, 'reason': None}, 'wait_timeout': 300, 'wait_sleep': 5, 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'no_proxy': None, 'proxy_headers': None, 'persist_config': None, 'impersonate_user': None, 'impersonate_groups': None, 'name': None, 'hidden_fields': None}}, 'failed': False, 'item': 'grafana', 'ansible_loop_var': 'item'}, 'ansible_loop_var': 'item'})
skipping: [192.168.4.63] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'changed': False, 'resources': [{'kind': 'Pod', 'apiVersion': 'v1', 'metadata': {'name': 'loki-85d467fb56-xt466', 'generateName': 'loki-85d467fb56-', 'namespace': 'monitoring', 'uid': '472d7a10-50d8-4241-92cf-6623b433b6b1', 'resourceVersion': '140286', 'creationTimestamp': '2025-09-12T00:34:37Z', 'labels': {'app.kubernetes.io/name': 'loki', 'pod-template-hash': '85d467fb56'}, 'ownerReferences': [{'apiVersion': 'apps/v1', 'kind': 'ReplicaSet', 'name': 'loki-85d467fb56', 'uid': '48751ec9-21e3-48e5-bcb2-abbeb9fa6ca1', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T00:34:37Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:generateName': {}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/name': {}, 'f:pod-template-hash': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"48751ec9-21e3-48e5-bcb2-abbeb9fa6ca1"}': {}}}, 'f:spec': {'f:containers': {'k:{"name":"loki"}': {'.': {}, 'f:args': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":3100,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp/loki"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"storage"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}, {'manager': 'kubelet', 'operation': 'Update', 'apiVersion': 'v1', 'time': '2025-09-12T02:35:03Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status': {'f:conditions': {'k:{"type":"ContainersReady"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Initialized"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"PodReadyToStartContainers"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Ready"}': {'.': {}, 'f:lastProbeTime': {}, 'f:lastTransitionTime': {}, 'f:status': {}, 'f:type': {}}}, 'f:containerStatuses': {}, 'f:hostIP': {}, 'f:hostIPs': {}, 'f:phase': {}, 'f:podIP': {}, 'f:podIPs': {'.': {}, 'k:{"ip":"10.244.0.25"}': {'.': {}, 'f:ip': {}}}, 'f:startTime': {}}}, 'subresource': 'status'}]}, 'spec': {'volumes': [{'name': 'storage', 'emptyDir': {}}, {'name': 'kube-api-access-sj6vf', 'projected': {'sources': [{'serviceAccountToken': {'expirationSeconds': 3607, 'path': 'token'}}, {'configMap': {'name': 'kube-root-ca.crt', 'items': [{'key': 'ca.crt', 'path': 'ca.crt'}]}}, {'downwardAPI': {'items': [{'path': 'namespace', 'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}]}}], 'defaultMode': 420}}], 'containers': [{'name': 'loki', 'image': 'grafana/loki:latest', 'args': ['-config.file=/etc/loki/local-config.yaml'], 'ports': [{'containerPort': 3100, 'protocol': 'TCP'}], 'resources': {'limits': {'cpu': '500m', 'memory': '512Mi'}, 'requests': {'cpu': '100m', 'memory': '128Mi'}}, 'volumeMounts': [{'name': 'storage', 'mountPath': '/tmp/loki'}, {'name': 'kube-api-access-sj6vf', 'readOnly': True, 'mountPath': '/var/run/secrets/kubernetes.io/serviceaccount'}], 'livenessProbe': {'httpGet': {'path': '/ready', 'port': 3100, 'scheme': 'HTTP'}, 'initialDelaySeconds': 60, 'timeoutSeconds': 1, 'periodSeconds': 30, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/ready', 'port': 3100, 'scheme': 'HTTP'}, 'initialDelaySeconds': 30, 'timeoutSeconds': 5, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'node-role.kubernetes.io/control-plane': ''}, 'serviceAccountName': 'default', 'serviceAccount': 'default', 'nodeName': 'masternode', 'securityContext': {}, 'schedulerName': 'default-scheduler', 'tolerations': [{'key': 'node-role.kubernetes.io/control-plane', 'operator': 'Exists', 'effect': 'NoSchedule'}, {'key': 'node.kubernetes.io/not-ready', 'operator': 'Exists', 'effect': 'NoExecute', 'tolerationSeconds': 300}, {'key': 'node.kubernetes.io/unreachable', 'operator': 'Exists', 'effect': 'NoExecute', 'tolerationSeconds': 300}], 'priority': 0, 'enableServiceLinks': True, 'preemptionPolicy': 'PreemptLowerPriority'}, 'status': {'phase': 'Running', 'conditions': [{'type': 'PodReadyToStartContainers', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:06Z'}, {'type': 'Initialized', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T00:34:37Z'}, {'type': 'Ready', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:58Z'}, {'type': 'ContainersReady', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T02:33:58Z'}, {'type': 'PodScheduled', 'status': 'True', 'lastProbeTime': None, 'lastTransitionTime': '2025-09-12T00:34:37Z'}], 'hostIP': '192.168.4.63', 'hostIPs': [{'ip': '192.168.4.63'}], 'podIP': '10.244.0.25', 'podIPs': [{'ip': '10.244.0.25'}], 'startTime': '2025-09-12T00:34:37Z', 'containerStatuses': [{'name': 'loki', 'state': {'running': {'startedAt': '2025-09-12T02:33:06Z'}}, 'lastState': {}, 'ready': True, 'restartCount': 0, 'image': 'sha256:7ab1582665de88def8826ec75e2708877e1915ff794c000a6c37b2f478420510', 'imageID': 'docker.io/grafana/loki@sha256:0b9846377113bc6a56eea2e56fe5963afdea2962178bd171190e30fa25157542', 'containerID': 'containerd://0e9b544e51adb132d1689ef933dfeaa0ee4af646cf53b39718f5af15f811f2e8', 'started': True}], 'qosClass': 'Burstable'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'v1', 'kind': 'Pod', 'namespace': 'monitoring', 'label_selectors': ['app.kubernetes.io/name=loki'], 'wait': True, 'wait_condition': {'type': 'Ready', 'status': True, 'reason': None}, 'wait_timeout': 300, 'wait_sleep': 5, 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'no_proxy': None, 'proxy_headers': None, 'persist_config': None, 'impersonate_user': None, 'impersonate_groups': None, 'name': None, 'hidden_fields': None}}, 'failed': False, 'item': 'loki', 'ansible_loop_var': 'item'}, 'ansible_loop_var': 'item'})
skipping: [192.168.4.63]

TASK [Display deployment status] **************************************************************************************************************************************************************
ok: [192.168.4.63] => {
    "msg": "=== VMStation Applications Deployed ===\n\nServices available at:\n- Prometheus: http://192.168.4.63:30090\n- Grafana: http://192.168.4.63:30300 (admin/admin)\n- Loki: http://192.168.4.63:31100\n\nTo access Kubernetes Dashboard:\n1. kubectl -n kubernetes-dashboard create token admin-user\n2. kubectl proxy\n3. Navigate to: http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/"
}

PLAY [storage_nodes] **************************************************************************************************************************************************************************

TASK [Skip Jellyfin deployment if disabled] ***************************************************************************************************************************************************
skipping: [192.168.4.61]

TASK [Check if kubectl is available] **********************************************************************************************************************************************************
ok: [192.168.4.61]

TASK [Display kubectl path] *******************************************************************************************************************************************************************
ok: [192.168.4.61] => {
    "msg": "kubectl found at: /usr/local/bin/kubectl"
}

TASK [Show kubectl client version] ************************************************************************************************************************************************************
ok: [192.168.4.61]

TASK [ansible.builtin.debug] ******************************************************************************************************************************************************************
ok: [192.168.4.61] => {
    "kubectl_version.stdout_lines": [
        "Client Version: v1.34.0",
        "Kustomize Version: v5.7.1"
    ]
}

TASK [Fail with remediation if kubectl not available] *****************************************************************************************************************************************
skipping: [192.168.4.61]

TASK [Check if target node exists in cluster] *************************************************************************************************************************************************
ok: [192.168.4.61]

TASK [Get all available nodes if target not found] ********************************************************************************************************************************************
skipping: [192.168.4.61]

TASK [Set jellyfin deployment node] ***********************************************************************************************************************************************************
ok: [192.168.4.61]

TASK [Fallback to available storage nodes if target not found] ********************************************************************************************************************************
skipping: [192.168.4.61]

TASK [Display node availability status] *******************************************************************************************************************************************************
ok: [192.168.4.61] => {
    "msg": "Target node status for Jellyfin deployment:\nRequested node: storagenodet3500\nActual deployment node: storagenodet3500\nNode exists: Yes\n"
}

TASK [Get cluster nodes for reference] ********************************************************************************************************************************************************
skipping: [192.168.4.61]

TASK [Deploy Jellyfin namespace] **************************************************************************************************************************************************************
ok: [192.168.4.61]

TASK [Deploy Jellyfin pod] ********************************************************************************************************************************************************************
fatal: [192.168.4.61]: FAILED! => {"changed": false, "msg": "Failed to patch object: b'{\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"Pod \\\\\"jellyfin\\\\\" is invalid: spec: Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)\\\\n  core.PodSpec{\\\\n  \\\\tVolumes: []core.Volume{\\\\n  \\\\t\\\\t{\\\\n  \\\\t\\\\t\\\\tName: \\\\\"media\\\\\",\\\\n  \\\\t\\\\t\\\\tVolumeSource: core.VolumeSource{\\\\n  \\\\t\\\\t\\\\t\\\\tHostPath: \\\\u0026core.HostPathVolumeSource{\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tPath: \\\\\"/srv/media\\\\\",\\\\n- \\\\t\\\\t\\\\t\\\\t\\\\tType: \\\\u0026\\\\\"Directory\\\\\",\\\\n+ \\\\t\\\\t\\\\t\\\\t\\\\tType: \\\\u0026\\\\\"DirectoryOrCreate\\\\\",\\\\n  \\\\t\\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\t\\\\tEmptyDir:          nil,\\\\n  \\\\t\\\\t\\\\t\\\\tGCEPersistentDisk: nil,\\\\n  \\\\t\\\\t\\\\t\\\\t... // 26 identical fields\\\\n  \\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t},\\\\n  \\\\t\\\\t{Name: \\\\\"config\\\\\", VolumeSource: {HostPath: \\\\u0026{Path: \\\\\"/var/lib/jellyfin\\\\\", Type: \\\\u0026\\\\\"DirectoryOrCreate\\\\\"}}},\\\\n- \\\\t\\\\t{\\\\n- \\\\t\\\\t\\\\tName: \\\\\"kube-api-access-qzdn5\\\\\",\\\\n- \\\\t\\\\t\\\\tVolumeSource: core.VolumeSource{\\\\n- \\\\t\\\\t\\\\t\\\\tProjected: \\\\u0026core.ProjectedVolumeSource{Sources: []core.VolumeProjection{...}, DefaultMode: \\\\u0026420},\\\\n- \\\\t\\\\t\\\\t},\\\\n- \\\\t\\\\t},\\\\n  \\\\t},\\\\n  \\\\tInitContainers: nil,\\\\n  \\\\tContainers: []core.Container{\\\\n  \\\\t\\\\t{\\\\n  \\\\t\\\\t\\\\t... // 9 identical fields\\\\n  \\\\t\\\\t\\\\tResizePolicy:  nil,\\\\n  \\\\t\\\\t\\\\tRestartPolicy: nil,\\\\n  \\\\t\\\\t\\\\tVolumeMounts: []core.VolumeMount{\\\\n  \\\\t\\\\t\\\\t\\\\t{Name: \\\\\"media\\\\\", ReadOnly: true, MountPath: \\\\\"/media\\\\\"},\\\\n  \\\\t\\\\t\\\\t\\\\t{Name: \\\\\"config\\\\\", MountPath: \\\\\"/config\\\\\"},\\\\n- \\\\t\\\\t\\\\t\\\\t{\\\\n- \\\\t\\\\t\\\\t\\\\t\\\\tName:      \\\\\"kube-api-access-qzdn5\\\\\",\\\\n- \\\\t\\\\t\\\\t\\\\t\\\\tReadOnly:  true,\\\\n- \\\\t\\\\t\\\\t\\\\t\\\\tMountPath: \\\\\"/var/run/secrets/kubernetes.io/serviceaccount\\\\\",\\\\n- \\\\t\\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\tVolumeDevices: nil,\\\\n  \\\\t\\\\t\\\\tLivenessProbe: \\\\u0026core.Probe{\\\\n  \\\\t\\\\t\\\\t\\\\tProbeHandler: core.ProbeHandler{\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tExec: nil,\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tHTTPGet: \\\\u0026core.HTTPGetAction{\\\\n- \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tPath: \\\\\"/health\\\\\",\\\\n+ \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tPath: \\\\\"/web/index.html\\\\\",\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tPort: {IntVal: 8096},\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tHost: \\\\\"\\\\\",\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t\\\\t... // 2 identical fields\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tTCPSocket: nil,\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tGRPC:      nil,\\\\n  \\\\t\\\\t\\\\t\\\\t},\\\\n- \\\\t\\\\t\\\\t\\\\tInitialDelaySeconds:           120,\\\\n+ \\\\t\\\\t\\\\t\\\\tInitialDelaySeconds:           180,\\\\n- \\\\t\\\\t\\\\t\\\\tTimeoutSeconds:                10,\\\\n+ \\\\t\\\\t\\\\t\\\\tTimeoutSeconds:                30,\\\\n- \\\\t\\\\t\\\\t\\\\tPeriodSeconds:                 30,\\\\n+ \\\\t\\\\t\\\\t\\\\tPeriodSeconds:                 60,\\\\n  \\\\t\\\\t\\\\t\\\\tSuccessThreshold:              1,\\\\n- \\\\t\\\\t\\\\t\\\\tFailureThreshold:              3,\\\\n+ \\\\t\\\\t\\\\t\\\\tFailureThreshold:              5,\\\\n  \\\\t\\\\t\\\\t\\\\tTerminationGracePeriodSeconds: nil,\\\\n  \\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\tReadinessProbe: \\\\u0026core.Probe{\\\\n  \\\\t\\\\t\\\\t\\\\tProbeHandler: core.ProbeHandler{\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tExec: nil,\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tHTTPGet: \\\\u0026core.HTTPGetAction{\\\\n- \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tPath: \\\\\"/health\\\\\",\\\\n+ \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tPath: \\\\\"/web/index.html\\\\\",\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tPort: {IntVal: 8096},\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tHost: \\\\\"\\\\\",\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t\\\\t... // 2 identical fields\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tTCPSocket: nil,\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tGRPC:      nil,\\\\n  \\\\t\\\\t\\\\t\\\\t},\\\\n- \\\\t\\\\t\\\\t\\\\tInitialDelaySeconds:           60,\\\\n+ \\\\t\\\\t\\\\t\\\\tInitialDelaySeconds:           120,\\\\n- \\\\t\\\\t\\\\t\\\\tTimeoutSeconds:                5,\\\\n+ \\\\t\\\\t\\\\t\\\\tTimeoutSeconds:                15,\\\\n- \\\\t\\\\t\\\\t\\\\tPeriodSeconds:                 10,\\\\n+ \\\\t\\\\t\\\\t\\\\tPeriodSeconds:                 30,\\\\n  \\\\t\\\\t\\\\t\\\\tSuccessThreshold:              1,\\\\n- \\\\t\\\\t\\\\t\\\\tFailureThreshold:              3,\\\\n+ \\\\t\\\\t\\\\t\\\\tFailureThreshold:              5,\\\\n  \\\\t\\\\t\\\\t\\\\tTerminationGracePeriodSeconds: nil,\\\\n  \\\\t\\\\t\\\\t},\\\\n- \\\\t\\\\t\\\\tStartupProbe: nil,\\\\n+ \\\\t\\\\t\\\\tStartupProbe: \\\\u0026core.Probe{\\\\n+ \\\\t\\\\t\\\\t\\\\tProbeHandler: core.ProbeHandler{\\\\n+ \\\\t\\\\t\\\\t\\\\t\\\\tHTTPGet: \\\\u0026core.HTTPGetAction{Path: \\\\\"/web/index.html\\\\\", Port: intstr.IntOrString{...}, Scheme: \\\\\"HTTP\\\\\"},\\\\n+ \\\\t\\\\t\\\\t\\\\t},\\\\n+ \\\\t\\\\t\\\\t\\\\tInitialDelaySeconds: 30,\\\\n+ \\\\t\\\\t\\\\t\\\\tTimeoutSeconds:      5,\\\\n+ \\\\t\\\\t\\\\t\\\\tPeriodSeconds:       10,\\\\n+ \\\\t\\\\t\\\\t\\\\tSuccessThreshold:    1,\\\\n+ \\\\t\\\\t\\\\t\\\\tFailureThreshold:    30,\\\\n+ \\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\tLifecycle:              nil,\\\\n  \\\\t\\\\t\\\\tTerminationMessagePath: \\\\\"/dev/termination-log\\\\\",\\\\n  \\\\t\\\\t\\\\t... // 6 identical fields\\\\n  \\\\t\\\\t},\\\\n  \\\\t},\\\\n  \\\\tEphemeralContainers: nil,\\\\n  \\\\tRestartPolicy:       \\\\\"Always\\\\\",\\\\n  \\\\t... // 28 identical fields\\\\n  }\\\\n\",\"reason\":\"Invalid\",\"details\":{\"name\":\"jellyfin\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)\\\\n  core.PodSpec{\\\\n  \\\\tVolumes: []core.Volume{\\\\n  \\\\t\\\\t{\\\\n  \\\\t\\\\t\\\\tName: \\\\\"media\\\\\",\\\\n  \\\\t\\\\t\\\\tVolumeSource: core.VolumeSource{\\\\n  \\\\t\\\\t\\\\t\\\\tHostPath: \\\\u0026core.HostPathVolumeSource{\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tPath: \\\\\"/srv/media\\\\\",\\\\n- \\\\t\\\\t\\\\t\\\\t\\\\tType: \\\\u0026\\\\\"Directory\\\\\",\\\\n+ \\\\t\\\\t\\\\t\\\\t\\\\tType: \\\\u0026\\\\\"DirectoryOrCreate\\\\\",\\\\n  \\\\t\\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\t\\\\tEmptyDir:          nil,\\\\n  \\\\t\\\\t\\\\t\\\\tGCEPersistentDisk: nil,\\\\n  \\\\t\\\\t\\\\t\\\\t... // 26 identical fields\\\\n  \\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t},\\\\n  \\\\t\\\\t{Name: \\\\\"config\\\\\", VolumeSource: {HostPath: \\\\u0026{Path: \\\\\"/var/lib/jellyfin\\\\\", Type: \\\\u0026\\\\\"DirectoryOrCreate\\\\\"}}},\\\\n- \\\\t\\\\t{\\\\n- \\\\t\\\\t\\\\tName: \\\\\"kube-api-access-qzdn5\\\\\",\\\\n- \\\\t\\\\t\\\\tVolumeSource: core.VolumeSource{\\\\n- \\\\t\\\\t\\\\t\\\\tProjected: \\\\u0026core.ProjectedVolumeSource{Sources: []core.VolumeProjection{...}, DefaultMode: \\\\u0026420},\\\\n- \\\\t\\\\t\\\\t},\\\\n- \\\\t\\\\t},\\\\n  \\\\t},\\\\n  \\\\tInitContainers: nil,\\\\n  \\\\tContainers: []core.Container{\\\\n  \\\\t\\\\t{\\\\n  \\\\t\\\\t\\\\t... // 9 identical fields\\\\n  \\\\t\\\\t\\\\tResizePolicy:  nil,\\\\n  \\\\t\\\\t\\\\tRestartPolicy: nil,\\\\n  \\\\t\\\\t\\\\tVolumeMounts: []core.VolumeMount{\\\\n  \\\\t\\\\t\\\\t\\\\t{Name: \\\\\"media\\\\\", ReadOnly: true, MountPath: \\\\\"/media\\\\\"},\\\\n  \\\\t\\\\t\\\\t\\\\t{Name: \\\\\"config\\\\\", MountPath: \\\\\"/config\\\\\"},\\\\n- \\\\t\\\\t\\\\t\\\\t{\\\\n- \\\\t\\\\t\\\\t\\\\t\\\\tName:      \\\\\"kube-api-access-qzdn5\\\\\",\\\\n- \\\\t\\\\t\\\\t\\\\t\\\\tReadOnly:  true,\\\\n- \\\\t\\\\t\\\\t\\\\t\\\\tMountPath: \\\\\"/var/run/secrets/kubernetes.io/serviceaccount\\\\\",\\\\n- \\\\t\\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\tVolumeDevices: nil,\\\\n  \\\\t\\\\t\\\\tLivenessProbe: \\\\u0026core.Probe{\\\\n  \\\\t\\\\t\\\\t\\\\tProbeHandler: core.ProbeHandler{\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tExec: nil,\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tHTTPGet: \\\\u0026core.HTTPGetAction{\\\\n- \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tPath: \\\\\"/health\\\\\",\\\\n+ \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tPath: \\\\\"/web/index.html\\\\\",\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tPort: {IntVal: 8096},\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tHost: \\\\\"\\\\\",\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t\\\\t... // 2 identical fields\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tTCPSocket: nil,\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tGRPC:      nil,\\\\n  \\\\t\\\\t\\\\t\\\\t},\\\\n- \\\\t\\\\t\\\\t\\\\tInitialDelaySeconds:           120,\\\\n+ \\\\t\\\\t\\\\t\\\\tInitialDelaySeconds:           180,\\\\n- \\\\t\\\\t\\\\t\\\\tTimeoutSeconds:                10,\\\\n+ \\\\t\\\\t\\\\t\\\\tTimeoutSeconds:                30,\\\\n- \\\\t\\\\t\\\\t\\\\tPeriodSeconds:                 30,\\\\n+ \\\\t\\\\t\\\\t\\\\tPeriodSeconds:                 60,\\\\n  \\\\t\\\\t\\\\t\\\\tSuccessThreshold:              1,\\\\n- \\\\t\\\\t\\\\t\\\\tFailureThreshold:              3,\\\\n+ \\\\t\\\\t\\\\t\\\\tFailureThreshold:              5,\\\\n  \\\\t\\\\t\\\\t\\\\tTerminationGracePeriodSeconds: nil,\\\\n  \\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\tReadinessProbe: \\\\u0026core.Probe{\\\\n  \\\\t\\\\t\\\\t\\\\tProbeHandler: core.ProbeHandler{\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tExec: nil,\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tHTTPGet: \\\\u0026core.HTTPGetAction{\\\\n- \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tPath: \\\\\"/health\\\\\",\\\\n+ \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tPath: \\\\\"/web/index.html\\\\\",\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tPort: {IntVal: 8096},\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t\\\\tHost: \\\\\"\\\\\",\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t\\\\t... // 2 identical fields\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tTCPSocket: nil,\\\\n  \\\\t\\\\t\\\\t\\\\t\\\\tGRPC:      nil,\\\\n  \\\\t\\\\t\\\\t\\\\t},\\\\n- \\\\t\\\\t\\\\t\\\\tInitialDelaySeconds:           60,\\\\n+ \\\\t\\\\t\\\\t\\\\tInitialDelaySeconds:           120,\\\\n- \\\\t\\\\t\\\\t\\\\tTimeoutSeconds:                5,\\\\n+ \\\\t\\\\t\\\\t\\\\tTimeoutSeconds:                15,\\\\n- \\\\t\\\\t\\\\t\\\\tPeriodSeconds:                 10,\\\\n+ \\\\t\\\\t\\\\t\\\\tPeriodSeconds:                 30,\\\\n  \\\\t\\\\t\\\\t\\\\tSuccessThreshold:              1,\\\\n- \\\\t\\\\t\\\\t\\\\tFailureThreshold:              3,\\\\n+ \\\\t\\\\t\\\\t\\\\tFailureThreshold:              5,\\\\n  \\\\t\\\\t\\\\t\\\\tTerminationGracePeriodSeconds: nil,\\\\n  \\\\t\\\\t\\\\t},\\\\n- \\\\t\\\\t\\\\tStartupProbe: nil,\\\\n+ \\\\t\\\\t\\\\tStartupProbe: \\\\u0026core.Probe{\\\\n+ \\\\t\\\\t\\\\t\\\\tProbeHandler: core.ProbeHandler{\\\\n+ \\\\t\\\\t\\\\t\\\\t\\\\tHTTPGet: \\\\u0026core.HTTPGetAction{Path: \\\\\"/web/index.html\\\\\", Port: intstr.IntOrString{...}, Scheme: \\\\\"HTTP\\\\\"},\\\\n+ \\\\t\\\\t\\\\t\\\\t},\\\\n+ \\\\t\\\\t\\\\t\\\\tInitialDelaySeconds: 30,\\\\n+ \\\\t\\\\t\\\\t\\\\tTimeoutSeconds:      5,\\\\n+ \\\\t\\\\t\\\\t\\\\tPeriodSeconds:       10,\\\\n+ \\\\t\\\\t\\\\t\\\\tSuccessThreshold:    1,\\\\n+ \\\\t\\\\t\\\\t\\\\tFailureThreshold:    30,\\\\n+ \\\\t\\\\t\\\\t},\\\\n  \\\\t\\\\t\\\\tLifecycle:              nil,\\\\n  \\\\t\\\\t\\\\tTerminationMessagePath: \\\\\"/dev/termination-log\\\\\",\\\\n  \\\\t\\\\t\\\\t... // 6 identical fields\\\\n  \\\\t\\\\t},\\\\n  \\\\t},\\\\n  \\\\tEphemeralContainers: nil,\\\\n  \\\\tRestartPolicy:       \\\\\"Always\\\\\",\\\\n  \\\\t... // 28 identical fields\\\\n  }\\\\n\",\"field\":\"spec\"}]},\"code\":422}\\n'", "reason": "Unprocessable Entity"}

