
TASK [Reload systemd and restart containerd and kubelet] *******************************************************************************************************************************************************
skipping: [storagenodet3500] => (item=containerd)
skipping: [storagenodet3500] => (item=kubelet)
skipping: [storagenodet3500]
changed: [homelab] => (item=containerd)
changed: [homelab] => (item=kubelet)

TASK [Register kubeadm flags file existence] *******************************************************************************************************************************************************************
skipping: [storagenodet3500]
ok: [homelab]

TASK [Enhanced kubelet validation for post-wipe workers] *******************************************************************************************************************************************************
skipping: [storagenodet3500]
fatal: [homelab]: FAILED! => {"changed": true, "cmd": "echo \"=== Post-Join Kubelet Validation for Wiped Worker ===\"\necho \"Timestamp: $(date)\"\necho \"\"\n\n# Check if kubelet is active\nif ! systemctl is-active kubelet >/dev/null 2>&1; then\n  echo \"ERROR: kubelet is not running after join\"\n  exit 1\nfi\necho \"✓ kubelet service is active\"\n\n# Check kubelet logs for standalone mode indicators\nif journalctl -u kubelet --no-pager --since \"10 minutes ago\" | grep -q \"standalone\"; then\n  echo \"ERROR: kubelet is still in standalone mode\"\n  echo \"This indicates the join failed to properly connect to control-plane\"\n  exit 1\nfi\necho \"✓ kubelet is not in standalone mode\"\n\n# Check for successful cluster connection\nif journalctl -u kubelet --no-pager --since \"10 minutes ago\" | grep -q \"Started kubelet\"; then\n  if ! journalctl -u kubelet --no-pager --since \"10 minutes ago\" | grep -q \"No API server defined\"; then\n    echo \"✓ kubelet successfully connected to cluster\"\n    \n    # Additional validation for wiped workers\n    if [ -f /etc/kubernetes/kubelet.conf ]; then\n      server_ip=$(grep \"server:\" /etc/kubernetes/kubelet.conf | awk '{print $2}' | cut -d':' -f1 | sed 's|https://||')\n      if [ \"$server_ip\" = \"192.168.4.63\" ]; then\n        echo \"✓ kubelet.conf points to correct control-plane: $server_ip\"\n      else\n        echo \"WARNING: kubelet.conf server mismatch - expected 192.168.4.63, got $server_ip\"\n      fi\n    else\n      echo \"ERROR: kubelet.conf not found after successful join\"\n      exit 1\n    fi\n    \n    exit 0\n  else\n    echo \"ERROR: kubelet started but no API server connection\"\n    exit 1\n  fi\nelse\n  echo \"WARNING: kubelet status unclear\"\n  exit 1\nfi\n", "delta": "0:00:00.016211", "end": "2025-09-12 14:07:26.178505", "failed_when_result": true, "msg": "non-zero return code", "rc": 1, "start": "2025-09-12 14:07:26.162294", "stderr": "", "stderr_lines": [], "stdout": "=== Post-Join Kubelet Validation for Wiped Worker ===\nTimestamp: Fri 12 Sep 2025 02:07:26 PM EDT\n\nERROR: kubelet is not running after join", "stdout_lines": ["=== Post-Join Kubelet Validation for Wiped Worker ===", "Timestamp: Fri 12 Sep 2025 02:07:26 PM EDT", "", "ERROR: kubelet is not running after join"]}

TASK [Display kubelet validation results] **********************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Verify node appears in cluster from control plane] *******************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Display cluster integration status] **********************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Wait for Flannel DaemonSet to be ready on control plane] *************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Check CNI configuration file exists] *********************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Validate CNI configuration syntax] ***********************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Enhanced pre-join CNI preparation] ***********************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Create CNI directories on worker nodes] ******************************************************************************************************************************************************************
skipping: [storagenodet3500] => (item=/opt/cni/bin)
skipping: [storagenodet3500] => (item=/etc/cni/net.d)
skipping: [storagenodet3500] => (item=/var/lib/cni/networks)
skipping: [storagenodet3500] => (item=/var/lib/cni/results)
skipping: [storagenodet3500]

TASK [Download and install Flannel CNI plugin binary on worker nodes] ******************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Fallback: Download Flannel CNI plugin with curl on worker nodes] *****************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Enhanced fallback: Download Flannel CNI plugin with wget on worker nodes] ********************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Verify Flannel CNI plugin download succeeded on worker nodes] ********************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Post-download verification: Ensure flannel binary is executable and valid on worker nodes] ***************************************************************************************************************
skipping: [storagenodet3500]

TASK [Download and install additional CNI plugins on worker nodes] *********************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Create basic CNI configuration for worker nodes BEFORE containerd restart] *******************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Create Flannel subnet environment directory] *************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Restart containerd AFTER CNI configuration is ready] *****************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Wait for containerd to fully initialize] *****************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Initialize containerd image filesystem for kubelet] ******************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Display containerd image filesystem status] **************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Verify containerd is ready for kubelet] ******************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Starting kubeadm join process] ***************************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Stop kubelet service before join] ************************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Remove any stale kubelet configuration files] ************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Ensure kubelet service is enabled for post-join management] **********************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Wait for kubelet to fully stop] **************************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Join cluster with retry logic] ***************************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Capture kubelet logs for troubleshooting] ****************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Display failure diagnostics] *****************************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Cleaning up after failed join] ***************************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Stop services for comprehensive cleanup] *****************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Clean up networking rules] *******************************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Remove Kubernetes state directories] *********************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Reset systemd services] **********************************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Restart containerd and prepare for retry] ****************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Wait for containerd to be fully ready after restart] *****************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Reinitialize containerd image filesystem after cleanup] **************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Recreate CNI directories] ********************************************************************************************************************************************************************************
skipping: [storagenodet3500] => (item=/etc/cni/net.d)
skipping: [storagenodet3500] => (item=/run/flannel)
skipping: [storagenodet3500]

TASK [Recreate basic CNI configuration] ************************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Enable kubelet for kubeadm join] *************************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Verify containerd is running before retry] ***************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Wait before retry to ensure system stability] ************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Stop kubelet service before retry] ***********************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Remove any stale kubelet configuration files before retry] ***********************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Wait for kubelet to fully stop before retry] *************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Retry join after thorough cleanup] ***********************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Display join result] *************************************************************************************************************************************************************************************
skipping: [storagenodet3500]

TASK [Remove join command and cleanup temporary files] *********************************************************************************************************************************************************
skipping: [storagenodet3500] => (item=/tmp/kubeadm-join.sh)
skipping: [storagenodet3500] => (item=/tmp/validate_join_prerequisites.sh)
skipping: [storagenodet3500] => (item=/tmp/enhanced_kubeadm_join.sh)
skipping: [storagenodet3500]

PLAY [Post-Wipe Worker Integration Validation] *****************************************************************************************************************************************************************

TASK [Gathering Facts] *****************************************************************************************************************************************************************************************
ok: [masternode]

TASK [Final cluster status check after post-wipe worker joins] *************************************************************************************************************************************************
changed: [masternode]

TASK [Display final cluster integration summary] ***************************************************************************************************************************************************************
ok: [masternode] => {
    "msg": "=== Final Cluster Status After Post-Wipe Worker Integration ===\\n          Timestamp: Fri 12 Sep 2025 02:07:28 PM EDT\\n          \\n          Cluster Nodes:\\n          NAME               STATUS   ROLES           AGE    VERSION    INTERNAL-IP    EXTERNAL-IP   OS-IMAGE                         KERNEL-VERSION   CONTAINER-RUNTIME\\n          masternode         Ready    control-plane   144m   v1.29.15   192.168.4.63   <none>        Debian GNU/Linux 12 (bookworm)   6.1.0-32-amd64   containerd://1.6.20\\n          storagenodet3500   Ready    <none>          109m   v1.29.15   192.168.4.61   <none>        Debian GNU/Linux 12 (bookworm)   6.1.0-34-amd64   containerd://1.6.20\\n          \\n          Node Readiness Status:\\n          NAME               STATUS        READY\\n          masternode         PIDPressure   False\\n          storagenodet3500   PIDPressure   False\\n          \\n          Flannel DaemonSet Status:\\n          NAME              DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE    CONTAINERS     IMAGES                              SELECTOR\\n          kube-flannel-ds   2         2         2       2            2           <none>          144m   kube-flannel   docker.io/flannel/flannel:v0.24.2   app=flannel,k8s-app=flannel\\n          \\n          Pod Network Status:\\n          NAME                    READY   STATUS    RESTARTS   AGE    IP             NODE               NOMINATED NODE   READINESS GATES\\n          kube-flannel-ds-f68pp   1/1     Running   0          105m   192.168.4.61   storagenodet3500   <none>           <none>\\n          kube-flannel-ds-q6zn9   1/1     Running   0          105m   192.168.4.63   masternode         <none>           <none>\\n          \\n          Cluster Summary:\\n          - Total nodes: 2\\n          - Ready nodes: 2\\n          - Control-plane: 1\\n          - Storage nodes: 1\\n          - Compute nodes: 1\\n          \\n          ✅ POST-WIPE WORKER INTEGRATION SUCCESSFUL\\n          All wiped workers successfully joined control-plane cluster\n\n====================================\nPOST-WIPE WORKER JOIN PROCESS COMPLETE\n====================================\n\nThe enhanced worker join process has:\n✓ Detected post-wipe worker states\n✓ Validated control-plane readiness\n✓ Generated fresh join tokens (2h TTL)\n✓ Performed enhanced reset and cleanup\n✓ Successfully joined workers to control-plane\n✓ Verified kubelet cluster connectivity (NOT standalone)\n✓ Confirmed node registration in cluster\n\nWorkers are now managed by the control-plane using TLS certificates.\nNo standalone mode detected - cluster formation successful!\n"
}

