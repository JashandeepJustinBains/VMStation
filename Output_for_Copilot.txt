root@masternode:/srv/monitoring_data/VMStation# # show the play that failed
Get-Content .\ansible\playbooks\cluster-bootstrap.yml | Select-String -Pattern "Verify Cluster Status" -Context 0,6

# check group_vars template
Get-Content .\ansible\inventory\group_vars\all.yml.template | Select-String kubeconfig_path
-bash: Select-String: command not found
-bash: Get-Content: command not found
-bash: Select-String: command not found
-bash: Get-Content: command not found
root@masternode:/srv/monitoring_data/VMStation# kubectl -n monitoring get deployment prometheus -o yaml
kubectl -n monitoring get deployment grafana -o yaml

# Compare selectors quickly
kubectl -n monitoring get deploy prometheus -o=jsonpath='{.spec.selector.matchLabels}'
kubectl -n monitoring get deploy prometheus -o=jsonpath='{.spec.template.metadata.labels}'3
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  creationTimestamp: "2025-09-11T16:43:21Z"
  generation: 2
  labels:
    app.kubernetes.io/name: prometheus
  name: prometheus
  namespace: monitoring
  resourceVersion: "140087"
  uid: 322eee1d-dcb1-4114-a72e-8cc7b97ff249
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: prometheus
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus/
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --web.enable-lifecycle
        image: prom/prometheus:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        name: prometheus
        ports:
        - containerPort: 9090
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/
          name: config-volume
        - mountPath: /prometheus/
          name: storage-volume
      dnsPolicy: ClusterFirst
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-config
        name: config-volume
      - emptyDir: {}
        name: storage-volume
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-09-12T02:32:59Z"
    lastUpdateTime: "2025-09-12T02:32:59Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-09-12T02:32:59Z"
    lastUpdateTime: "2025-09-12T02:33:34Z"
    message: ReplicaSet "prometheus-74887c8bb6" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  creationTimestamp: "2025-09-11T16:43:23Z"
  generation: 2
  labels:
    app.kubernetes.io/name: grafana
  name: grafana
  namespace: monitoring
  resourceVersion: "140145"
  uid: b47550bc-3afd-4b4a-bc62-fc0958201f97
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: grafana
    spec:
      containers:
      - env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin
        - name: GF_INSTALL_PLUGINS
        image: grafana/grafana:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        name: grafana
        ports:
        - containerPort: 3000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: storage
      dnsPolicy: ClusterFirst
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      volumes:
      - emptyDir: {}
        name: storage
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-09-12T02:33:03Z"
    lastUpdateTime: "2025-09-12T02:33:03Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-09-12T02:33:03Z"
    lastUpdateTime: "2025-09-12T02:33:46Z"
    message: ReplicaSet "grafana-79db5b584f" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
{"app.kubernetes.io/name":"prometheus"}{"app.kubernetes.io/name":"prometheus"}3