=== Worker Node Join Troubleshooting Session ===
Start Time: [TIMESTAMP]
Hostname: [HOSTNAME]
IP Address: [IP_ADDRESS]
User: [USERNAME]

This file contains the complete troubleshooting session for worker node join issues.
Generated by: worker_node_troubleshoot_integration.sh

=== SECTION 1: DIAGNOSTIC PHASE ===
Running worker_node_join_diagnostics.sh to identify issues...

[DIAGNOSTIC OUTPUT WILL BE INSERTED HERE]

=== SECTION 2: REMEDIATION PHASE ===
Running worker_node_join_remediation.sh to fix identified issues...

[REMEDIATION OUTPUT WILL BE INSERTED HERE]

=== SECTION 3: POST-REMEDIATION LOGS ===
Collecting system logs after troubleshooting...

--- Current kubelet status ---
[KUBELET STATUS WILL BE INSERTED HERE]

--- Current containerd status ---
[CONTAINERD STATUS WILL BE INSERTED HERE]

--- Recent kubelet logs ---
[KUBELET LOGS WILL BE INSERTED HERE]

--- Recent containerd logs ---
[CONTAINERD LOGS WILL BE INSERTED HERE]

=== SECTION 4: DEPLOYMENT LOGS (if collected during cluster deployment) ===
These logs are collected when running: ./deploy.sh cluster

[DEPLOYMENT LOGS FROM deployment_logs_*.txt WILL BE REFERENCED HERE]

=== TROUBLESHOOTING SESSION COMPLETE ===
End Time: [TIMESTAMP]
Output file: worker_node_join_scripts_output.txt

Next Steps:
1. Review the diagnostic output in Section 1 to understand the identified issues
2. Check the remediation results in Section 2 
3. Verify system status in Section 3
4. If issues persist, run: kubectl get nodes -o wide (from control plane)
5. For cluster deployment logs, check deployment_logs_*.txt files

Common Issues and Solutions:
- CNI configuration missing: Check /etc/cni/net.d/ directory
- Port 10250 conflicts: Look for kubelet or other processes using the port
- Filesystem capacity 0: Check containerd filesystem capacity issues
- Containerd socket issues: Verify /run/containerd/containerd.sock exists
- Service health problems: Check for failed/inactive states in systemctl status

For detailed troubleshooting steps, refer to the README.md file.