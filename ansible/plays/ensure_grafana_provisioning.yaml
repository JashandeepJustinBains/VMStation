---
- name: Ensure Grafana provisioning files exist for containerized Grafana
  hosts: monitoring_nodes
  become: true
  vars:
    grafana_data_dir: /srv/monitoring_data/grafana
    grafana_owner_uid: 472
    grafana_owner_gid: 472
  tasks:
    - name: Create persisted grafana provisioning & dashboards directories
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      loop:
        - "{{ grafana_data_dir }}"
        - "{{ grafana_data_dir }}/provisioning"
        - "{{ grafana_data_dir }}/provisioning/datasources"
        - "{{ grafana_data_dir }}/provisioning/dashboards"
        - "{{ grafana_data_dir }}/dashboards"

    - name: Write datasources provisioning file (Prometheus + Loki)
      copy:
        dest: "{{ grafana_data_dir }}/provisioning/datasources/datasources.yaml"
        content: |
          apiVersion: 1
          datasources:
            - name: Prometheus
              type: prometheus
              access: proxy
              url: http://{{ ansible_default_ipv4.address }}:9090
              isDefault: true
            - name: Loki
              type: loki
              access: proxy
              url: http://{{ ansible_default_ipv4.address }}:3100
              isDefault: false
        owner: root
        group: root
        mode: '0644'

    - name: Write dashboards provider file
      copy:
        dest: "{{ grafana_data_dir }}/provisioning/dashboards/dashboards.yaml"
        content: |
          apiVersion: 1
          providers:
            - name: 'default'
              orgId: 1
              folder: ''
              type: file
              options:
                path: /etc/grafana/provisioning/dashboards
        owner: root
        group: root
        mode: '0644'

    - name: Install a minimal Podman dashboard JSON for provisioning
      copy:
        dest: "{{ grafana_data_dir }}/provisioning/dashboards/podman_dashboard.json"
        content: |
          {
            "id": null,
            "title": "Podman Containers Overview (minimal)",
            "panels": [],
            "schemaVersion": 36,
            "version": 1
          }
        owner: root
        group: root
        mode: '0644'

    - name: Ensure persisted grafana data is owned by grafana user inside container
      file:
        path: "{{ grafana_data_dir }}"
        owner: "{{ grafana_owner_uid }}"
        group: "{{ grafana_owner_gid }}"
        recurse: yes

    - name: Notify user how to restart grafana container
      debug:
        msg: |
          Grafana provisioning files have been written to {{ grafana_data_dir }}.
          Restart the grafana container to pick them up: podman restart grafana
