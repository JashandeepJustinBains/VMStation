- name: Podman metrics core
  hosts: all
  become: true
  vars:
    node_exporter_image: docker.io/prom/node-exporter:latest
    podman_exporter_image: docker.io/veemero/podman_exporter:latest
  tasks:
    - name: Validate /srv/monitoring_data is mounted on monitoring nodes
      ansible.builtin.fail:
        msg: "/srv/monitoring_data is not mounted. Mount your monitoring partition (e.g. /dev/sda1) to /srv/monitoring_data and re-run the playbook."
      when: (inventory_hostname in groups['monitoring_nodes']) and ((ansible_mounts | selectattr('mount','equalto','/srv/monitoring_data') | list | length) == 0)

    - name: Validate /srv/monitoring_data is writable on monitoring nodes
      ansible.builtin.command: test -w /srv/monitoring_data
      register: monitoring_write_test
      failed_when: monitoring_write_test.rc != 0
      changed_when: false
      when: inventory_hostname in groups['monitoring_nodes']

    - name: Add Podman repo key (Debian/Ubuntu)
      apt_key:
        url: 'https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04/Release.key'
        state: present
      when: ansible_os_family == 'Debian'

    - name: Add Podman upstream repository (Debian/Ubuntu)
      apt_repository:
        repo: 'deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04/ /'
        state: present
      when: ansible_os_family == 'Debian'

    - name: Upgrade Podman to latest upstream version (Debian/Ubuntu)
      apt:
        name: podman
        state: latest
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Enable Podman metrics endpoint
      ansible.builtin.lineinfile:
        path: /etc/containers/containers.conf
        regexp: '^#?metrics_port ='
        line: 'metrics_port = 9882'
        state: present
        create: yes
      tags: metrics

    - name: Ensure Podman service is restarted to apply metrics config
      ansible.builtin.systemd:
        name: podman
        state: restarted
        enabled: yes
      when: ansible_service_mgr == 'systemd'
      tags: metrics

    - name: Create systemd unit for Podman metrics service
      ansible.builtin.copy:
        dest: /etc/systemd/system/podman-metrics.service
        content: |
          [Unit]
          Description=Podman Metrics Service
          After=network.target

          [Service]
          ExecStart=/usr/bin/podman system service --time=0 tcp:0.0.0.0:9882
          Restart=always
          User=root

          [Install]
          WantedBy=multi-user.target
        mode: '0644'
      tags: metrics

    - name: Reload systemd and enable/start podman-metrics
      ansible.builtin.systemd:
        name: podman-metrics.service
        state: started
        enabled: yes
        daemon_reload: yes
      tags: metrics

    - name: Ensure monitoring data base exists on hosts
      ansible.builtin.file:
        path: /srv/monitoring_data
        state: directory
        owner: root
        group: root
        mode: '0755'
      tags: monitoring_storage

    - name: Ensure promtail data directory exists on hosts
      ansible.builtin.file:
        path: /srv/monitoring_data/promtail
        state: directory
        owner: root
        group: root
        mode: '0755'
        recurse: yes
      tags: monitoring_storage

    - name: Copy promtail config to /etc/promtail
      ansible.builtin.copy:
        src: ../files/promtail-config.yaml
        dest: /etc/promtail/promtail.yaml
        owner: root
        group: root
        mode: '0644'
      tags: promtail

    - name: Ensure prometheus data directory exists on monitoring nodes
      ansible.builtin.file:
        path: /srv/monitoring_data/prometheus
        state: directory
        owner: 65534
        group: 65534
        mode: '0755'
        recurse: yes
      when: inventory_hostname in groups['monitoring_nodes']
      tags: monitoring_storage
