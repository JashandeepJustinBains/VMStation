

- name: Podman Metrics Exporter Setup
  hosts: all
  become: true
  tasks:
    # ...existing code...
    - name: Add Podman repo key (Debian/Ubuntu)
      apt_key:
        url: 'https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04/Release.key'
        state: present
      when: ansible_os_family == 'Debian'

    - name: Add Podman upstream repository (Debian/Ubuntu)
      apt_repository:
        repo: 'deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04/ /'
        state: present
      when: ansible_os_family == 'Debian'

    - name: Upgrade Podman to latest upstream version (Debian/Ubuntu)
      apt:
        name: podman
        state: latest
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Enable Podman metrics endpoint
      ansible.builtin.lineinfile:
        path: /etc/containers/containers.conf
        regexp: '^#?metrics_port ='
        line: 'metrics_port = 9882'
        state: present
        create: yes
      # No handler needed; explicit restart task follows
      tags: metrics

    - name: Ensure Podman service is restarted to apply metrics config
      ansible.builtin.systemd:
        name: podman
        state: restarted
        enabled: yes
      when: ansible_service_mgr == 'systemd'
      tags: metrics

    - name: Ensure /etc/promtail directory exists
      ansible.builtin.file:
        path: /etc/promtail
        state: directory
        owner: root
        group: root
        mode: '0755'
      tags: logs

    - name: Deploy promtail container
      containers.podman.podman_container:
        name: promtail
        image: docker.io/grafana/promtail:latest
        state: started
        volumes:
          - /var/log:/var/log:ro
          - /etc/promtail:/etc/promtail:ro
        restart_policy: always
        command: -config.file=/etc/promtail/promtail.yaml
      tags: logs

    - name: Download node_exporter binary
      ansible.builtin.get_url:
        url: https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz
        dest: /tmp/node_exporter.tar.gz
        mode: '0644'
      tags: node_exporter

    - name: Extract node_exporter
      ansible.builtin.unarchive:
        src: /tmp/node_exporter.tar.gz
        dest: /opt/
        remote_src: yes
      tags: node_exporter

    - name: Create systemd service for node_exporter
      ansible.builtin.copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          User=root
          ExecStart=/opt/node_exporter-1.7.0.linux-amd64/node_exporter
          Restart=always

          [Install]
          WantedBy=multi-user.target
        mode: '0644'
      tags: node_exporter

    - name: Start and enable node_exporter
      ansible.builtin.systemd:
        name: node_exporter
        state: started
        enabled: yes
      tags: node_exporter

    - name: Copy prometheus.yml to monitoring_node
      ansible.builtin.copy:
        src: files/prometheus.yml
        dest: /etc/prometheus/prometheus.yml
        owner: root
        group: root
        mode: '0644'
      when: inventory_hostname in groups['monitoring_nodes']
      tags: prometheus

    - name: Copy promtail config to all nodes
      ansible.builtin.copy:
        src: files/promtail-config.yaml
        dest: /etc/promtail/promtail.yaml
        owner: root
        group: root
        mode: '0644'
      tags: promtail

    - name: Ensure firewall allows Prometheus/Loki/node_exporter scraping
      ansible.builtin.ufw:
        rule: allow
        port: "9882,3100,9100"
        proto: tcp
      when: ansible_os_family == 'Debian'
      tags: firewall
