---
- name: Cleanup old monitoring services and free ports
  hosts: all
  become: true
  vars:
    monitoring_dirs:
  # Do NOT remove the monitoring mount itself; keep drives mounted at all times
  # - /srv/monitoring_data
      - /var/lib/grafana
      - /etc/grafana
      - /var/lib/loki
      - /etc/loki
      - /var/lib/prometheus
      - /etc/prometheus
  tasks:
    - name: Stop and disable packaged services on monitoring nodes (if present)
      service:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - prometheus
        - grafana-server
        - loki
        - promtail
      when: inventory_hostname in groups['monitoring_nodes']
      ignore_errors: yes

    - name: Stop and remove promtail container (if present) on all hosts
      containers.podman.podman_container:
        name: promtail
        state: absent
      ignore_errors: yes

    - name: Force-stop all podman containers (best-effort)
      shell: |
        if command -v podman >/dev/null 2>&1; then
          # try graceful kill first, fall back to kill and force remove
          podman ps -q | xargs -r podman stop || true
          podman ps -q | xargs -r podman kill || true
        fi
      args:
        executable: /bin/bash
      ignore_errors: yes

    - name: Force-remove all podman containers (best-effort)
      shell: |
        if command -v podman >/dev/null 2>&1; then
          podman rm -af || true
        fi
      args:
        executable: /bin/bash
      ignore_errors: yes

    - name: Stop podman service/socket if present
      service:
        name: "{{ item }}"
        state: stopped
      loop:
        - podman
        - podman.socket
      ignore_errors: yes

    - name: Remove monitoring pod (if present) on monitoring nodes
      containers.podman.podman_pod:
        name: monitoring_pod
        state: absent
      when: inventory_hostname in groups['monitoring_nodes']
      ignore_errors: yes

    - name: Kill processes bound to common monitoring ports (best-effort)
      shell: |
        for p in 9090 3100 3000 9080 9300 9882 9100; do
          if command -v fuser >/dev/null 2>&1; then
            fuser -k ${p}/tcp || true
          elif command -v lsof >/dev/null 2>&1; then
            lsof -ti tcp:${p} | xargs -r kill -9 || true
          else
            ss -ltnp | grep -E ":${p} " | awk '{print $NF}' | sed -E 's/.*pid=([0-9]+).*/\1/' | xargs -r kill -9 || true
          fi
        done
      args:
        executable: /bin/bash
      ignore_errors: yes

  # Do not unmount /srv/monitoring_data: keep mounts stable on this host

    - name: Remove monitoring data and config directories on monitoring node
      file:
        path: "{{ item }}"
        state: absent
      loop: "{{ monitoring_dirs }}"
      when: inventory_hostname in groups['monitoring_nodes']
      ignore_errors: yes

    - name: Remove promtail config dirs on all hosts
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /opt/promtail
        - /var/promtail
      ignore_errors: yes

    - name: Wait a moment for ports to free
      pause:
        seconds: 3
