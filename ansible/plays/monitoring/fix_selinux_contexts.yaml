---
- name: Fix SELinux contexts for container volumes to prevent restart loops
  hosts: all
  become: true
  gather_facts: yes
  vars:
    monitoring_root: /srv/monitoring_data
  tasks:
    - name: Check if SELinux is enabled
      shell: getenforce
      register: selinux_status
      ignore_errors: yes
      changed_when: false

    - name: Set fact for SELinux status
      set_fact:
        selinux_enabled: "{{ selinux_status.stdout == 'Enforcing' or selinux_status.stdout == 'Permissive' }}"
      when: selinux_status.rc == 0

    - name: Ensure SELinux tools are installed (RedHat/CentOS)
      package:
        name:
          - policycoreutils-python-utils
          - selinux-policy-targeted
        state: present
      when: 
        - selinux_enabled | default(false)
        - ansible_os_family == 'RedHat'

    - name: Ensure SELinux tools are installed (Debian/Ubuntu)
      package:
        name:
          - policycoreutils
          - selinux-utils
        state: present
      when: 
        - selinux_enabled | default(false)
        - ansible_os_family == 'Debian'

    - name: Set proper SELinux context for /var/log (for promtail read access)
      sefcontext:
        target: '/var/log(/.*)?'
        setype: container_file_t
        state: present
      when: selinux_enabled | default(false)
      notify: restorecon var log

    - name: Set proper SELinux context for monitoring directories
      sefcontext:
        target: '{{ monitoring_root }}(/.*)?'
        setype: container_file_t
        state: present
      when: 
        - selinux_enabled | default(false)
        - inventory_hostname in groups['monitoring_nodes']
      notify: restorecon monitoring

    - name: Set proper SELinux context for promtail directories
      sefcontext:
        target: '/var/promtail(/.*)?'
        setype: container_file_t
        state: present
      when: selinux_enabled | default(false)
      notify: restorecon promtail

    - name: Set proper SELinux context for opt promtail config
      sefcontext:
        target: '/opt/promtail(/.*)?'
        setype: container_file_t
        state: present
      when: selinux_enabled | default(false)
      notify: restorecon opt promtail

    - name: Allow container processes to read log files
      seboolean:
        name: container_use_cephfs
        state: true
        persistent: true
      when: selinux_enabled | default(false)
      ignore_errors: yes

    - name: Allow containers to manage files
      seboolean:
        name: container_manage_cgroup
        state: true
        persistent: true
      when: selinux_enabled | default(false)
      ignore_errors: yes

  handlers:
    - name: restorecon var log
      command: restorecon -R /var/log
      when: selinux_enabled | default(false)

    - name: restorecon monitoring
      command: restorecon -R {{ monitoring_root }}
      when: 
        - selinux_enabled | default(false)
        - inventory_hostname in groups['monitoring_nodes']

    - name: restorecon promtail
      command: restorecon -R /var/promtail
      when: selinux_enabled | default(false)

    - name: restorecon opt promtail
      command: restorecon -R /opt/promtail
      when: selinux_enabled | default(false)