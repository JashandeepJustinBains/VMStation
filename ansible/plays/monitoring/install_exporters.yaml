---
- name: Install and run exporters (node_exporter and podman exporters)
  hosts: all
  become: true
  vars:
    node_exporter_image: docker.io/prom/node-exporter:latest
    # Use the public podman system metrics image instead of private docker.io
    podman_exporter_image: 192.168.4.63:5000/podman-system-metrics:latest
    podman_system_metrics_image: 192.168.4.63:5000/podman-system-metrics:latest
    # Host port for podman_system_metrics (set to a different port in group_vars if needed)
    podman_system_metrics_host_port: 9882
  tasks:
    - name: Ensure Podman is installed (Debian)
      apt:
        name: podman
        state: present
      when: ansible_os_family == 'Debian'

    - name: Ensure Podman is installed (RedHat)
      yum:
        name: podman
        state: present
      when: ansible_os_family == 'RedHat'

    - name: Ensure node_exporter container is running
      containers.podman.podman_container:
        name: node_exporter
        image: "{{ node_exporter_image }}"
        state: started
        restart_policy: always
        ports:
          - 9100:9100
        command: --web.listen-address=0.0.0.0:9100

    - name: Ensure podman_exporter container is running (optional)
      containers.podman.podman_container:
        name: podman_exporter
        image: "{{ podman_exporter_image }}"
        state: started
        restart_policy: always
        ports:
          - 9300:9300
      when: enable_podman_exporters | default(false)

    - name: Remove any existing container named podman_system_metrics (idempotent)
      containers.podman.podman_container:
        name: podman_system_metrics
        state: absent
      when: enable_podman_exporters | default(false)

    - name: Find containers publishing port 9882 on the host
      shell: |
        podman ps -a --format '{{.ID}} {{.Ports}} {{.Names}}' | grep -E ':9882\b' | awk '{print $1}' || true
      register: podman_9882_containers
      changed_when: false

    - name: Remove containers that publish port 9882 (if any)
      shell: podman rm -f {{ item }}
      loop: "{{ podman_9882_containers.stdout_lines }}"
      when: podman_9882_containers.stdout != ""
      register: removed_9882
      failed_when: removed_9882 is failed and removed_9882.rc != 0

    - name: Ensure podman_system_metrics container is running (optional)
      containers.podman.podman_container:
        name: podman_system_metrics
        image: "{{ podman_system_metrics_image }}"
        state: started
        restart_policy: always
        ports:
          # bind to loopback on the host to avoid collisions with other services
          - "127.0.0.1:{{ podman_system_metrics_host_port }}:9882"
      when: enable_podman_exporters | default(false)
  
