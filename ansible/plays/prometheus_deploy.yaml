---
- name: Deploy Prometheus container
  hosts: all
  become: true
  vars:
    prometheus_image: docker.io/prom/prometheus:latest
    prometheus_container: prometheus
    prometheus_data_dir: /srv/monitoring_data/prometheus
    prometheus_host_port: 9090
    prometheus_force_port_free: true
  tasks:
    - name: Ensure Prometheus data directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      loop:
        - "{{ prometheus_data_dir }}"
        - "{{ prometheus_data_dir }}/data"
      tags: prometheus

    - name: Pull Prometheus image
      ansible.builtin.command:
        cmd: podman pull {{ prometheus_image }}
      register: prometheus_pull
      changed_when: prometheus_pull.rc == 0
      failed_when: prometheus_pull.rc != 0
      tags: prometheus

    - name: Check if port {{ prometheus_host_port }} is available
      ansible.builtin.shell: ss -ltn "sport = :{{ prometheus_host_port }}" | sed -n '2,$p' || true
      register: port_check
      changed_when: false
      failed_when: false
      tags: prometheus

    - name: Set flag if port {{ prometheus_host_port }} is in use
      ansible.builtin.set_fact:
        prometheus_port_in_use: "{{ port_check.stdout != '' }}"
      tags: prometheus

    - name: Fail if port {{ prometheus_host_port }} is in use and force free not enabled
      ansible.builtin.fail:
        msg: "Port {{ prometheus_host_port }} appears to be in use on the target. Set prometheus_force_port_free: true to attempt to stop the owner automatically. Output: {{ port_check.stdout }}"
      when: prometheus_port_in_use and (not prometheus_force_port_free)
      tags: prometheus

    - name: Attempt to free port {{ prometheus_host_port }} (podman/systemd/kill) if enabled
      block:
        - name: Attempt to remove podman container named {{ prometheus_container }}
          ansible.builtin.command:
            cmd: podman rm -f {{ prometheus_container }}
          register: try_podman_rm
          failed_when: false

        - name: Attempt to stop systemd unit prometheus
          ansible.builtin.systemd:
            name: prometheus
            state: stopped
            enabled: no
          failed_when: false

        - name: Find PID owning port {{ prometheus_host_port }}
          ansible.builtin.shell: |
            ss -ltnp | grep ':{{ prometheus_host_port }}' | sed -n 's/.*pid=\([0-9]*\),.*/\1/p' | head -n1 || true
          register: prometheus_port_pid
          changed_when: false
          failed_when: false

        - name: Kill process owning port {{ prometheus_host_port }} if present
          ansible.builtin.shell: |
            if [ -n "{{ prometheus_port_pid.stdout }}" ]; then
              kill -TERM {{ prometheus_port_pid.stdout }} >/dev/null 2>&1 || kill -KILL {{ prometheus_port_pid.stdout }} >/dev/null 2>&1 || true
            fi
          failed_when: false

        - name: Wait for Prometheus port {{ prometheus_host_port }} to be free after forced stop
          ansible.builtin.wait_for:
            host: "{{ ansible_host | default(inventory_hostname) }}"
            port: "{{ prometheus_host_port }}"
            state: stopped
            timeout: 30
      when: prometheus_port_in_use and prometheus_force_port_free
      tags: prometheus

    - name: Remove existing Prometheus container if present
      ansible.builtin.command:
        cmd: podman rm -f {{ prometheus_container }}
      register: prometheus_rm
      failed_when: false
      changed_when: prometheus_rm.rc == 0
      tags: prometheus

    - name: Copy static prometheus.yml
      ansible.builtin.copy:
        src: ../files/prometheus.yml
        dest: /srv/monitoring_data/prometheus/prometheus.yml
        owner: root
        group: root
        mode: '0644'
      tags: prometheus

    - name: Run Prometheus container
      ansible.builtin.command:
        cmd: >-
          podman run -d --name {{ prometheus_container }} -p {{ prometheus_host_port }}:9090
          -v {{ prometheus_data_dir }}:/etc/prometheus:Z
          -v {{ prometheus_data_dir }}/data:/prometheus:Z
          {{ prometheus_image }}
      register: prometheus_run
      changed_when: prometheus_run.rc == 0
      failed_when: prometheus_run.rc != 0
      tags: prometheus

    - name: Show listening sockets for Prometheus port on host
      ansible.builtin.shell: ss -ltnp | grep ':{{ prometheus_host_port }}' || true
      register: prometheus_ss
      changed_when: false
      failed_when: false
      tags: prometheus

    - name: Debug listening sockets
      ansible.builtin.debug:
        var: prometheus_ss.stdout_lines
      tags: prometheus

    - name: Show Podman port mapping for Prometheus container
      ansible.builtin.command:
        cmd: podman port {{ prometheus_container }} || true
      register: prometheus_podman_port
      changed_when: false
      failed_when: false
      tags: prometheus

    - name: Debug Podman port mapping
      ansible.builtin.debug:
        var: prometheus_podman_port.stdout_lines
      tags: prometheus

    - name: Tail Prometheus container logs (last 50 lines)
      ansible.builtin.command:
        cmd: podman logs --tail 50 {{ prometheus_container }} || true
      register: prometheus_logs
      changed_when: false
      failed_when: false
      tags: prometheus

    - name: Debug Prometheus logs
      ansible.builtin.debug:
        var: prometheus_logs.stdout_lines
      tags: prometheus

    - name: List Prometheus containers (all states)
      ansible.builtin.command:
        cmd: podman ps -a --filter name={{ prometheus_container }} --no-trunc
      register: prometheus_ps
      changed_when: false
      failed_when: false
      tags: prometheus

    - name: Debug podman ps
      ansible.builtin.debug:
        var: prometheus_ps.stdout_lines
      tags: prometheus

    - name: Inspect Prometheus container if present
      ansible.builtin.command:
        cmd: podman inspect {{ prometheus_container }} || true
      register: prometheus_inspect
      changed_when: false
      failed_when: false
      tags: prometheus

    - name: Debug prometheus inspect
      ansible.builtin.debug:
        var: prometheus_inspect.stdout_lines
      tags: prometheus

    - name: Show recent podman journal (last hour)
      ansible.builtin.command:
        cmd: journalctl -u podman --since '1 hour ago' -n 200 || true
      register: podman_journal
      changed_when: false
      failed_when: false
      tags: prometheus

    - name: Debug podman journal
      ansible.builtin.debug:
        var: podman_journal.stdout_lines
      tags: prometheus

    - name: Get Prometheus container id
      ansible.builtin.command:
        cmd: podman inspect --format '{% raw %}{{.Id}}{% endraw %}' {{ prometheus_container }} || true
      register: prometheus_cid
      changed_when: false
      failed_when: false
      tags: prometheus

    - name: Debug Prometheus container id
      ansible.builtin.debug:
        var: prometheus_cid.stdout_lines
      tags: prometheus

    - name: Show podman logs with timestamps for prometheus
      ansible.builtin.command:
        cmd: podman logs --timestamps --tail 200 {{ prometheus_container }} || true
      register: prometheus_logs_timed
      changed_when: false
      failed_when: false
      tags: prometheus

    - name: Debug timed prometheus logs
      ansible.builtin.debug:
        var: prometheus_logs_timed.stdout_lines
      tags: prometheus

    - name: Show journal entries for container id (fallback to container name)
      ansible.builtin.shell: |
        if [ -n "{{ prometheus_cid.stdout | default('') }}" ]; then
          journalctl _CONTAINER_ID={{ prometheus_cid.stdout }} -n 200 || true
        else
          journalctl CONTAINER_NAME={{ prometheus_container }} -n 200 || true
        fi
      register: prometheus_journal
      changed_when: false
      failed_when: false
      tags: prometheus

    - name: Debug prometheus journal
      ansible.builtin.debug:
        var: prometheus_journal.stdout_lines
      tags: prometheus

    - name: Wait for Prometheus to be ready
      ansible.builtin.uri:
        url: "http://{{ ansible_host | default(inventory_hostname) }}:{{ prometheus_host_port }}/-/ready"
        status_code: 200
        timeout: 10
      register: prometheus_ready
      retries: 6
      delay: 5
      until: prometheus_ready.status == 200
      tags: prometheus
