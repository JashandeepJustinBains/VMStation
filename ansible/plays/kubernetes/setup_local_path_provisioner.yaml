---
# Deploy custom local-path provisioner with /srv/monitoring_data storage path
- name: Deploy custom local-path provisioner for VMStation
  hosts: monitoring_nodes
  become: true
  tasks:
    - name: Ensure kubernetes Python package is available
      apt:
        name: python3-kubernetes
        state: present
        update_cache: true
      when: >-
        ansible_facts['pkg_mgr'] == 'apt' or
        ansible_pkg_mgr is defined and ansible_pkg_mgr == 'apt'

    - name: Fallback - install kubernetes Python library via pip
      pip:
        name: kubernetes
        state: present
        executable: pip3
      become: true
      when: >-
        ansible_facts['pkg_mgr'] is not defined or
        ansible_facts['pkg_mgr'] != 'apt'

    - name: Create local-path-storage namespace
      kubernetes.core.k8s:
        name: local-path-storage
        api_version: v1
        kind: Namespace
        state: present
        kubeconfig: /root/.kube/config

    - name: Create local-path provisioner service account
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: local-path-provisioner-service-account
            namespace: local-path-storage
        kubeconfig: /root/.kube/config

    - name: Create local-path provisioner cluster role
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: local-path-provisioner-role
          rules:
            - apiGroups: [""]
              resources: ["nodes", "persistentvolumeclaims", "configmaps"]
              verbs: ["get", "list", "watch"]
            - apiGroups: [""]
              resources: ["endpoints", "persistentvolumes", "pods"]
              verbs: ["*"]
            - apiGroups: [""]
              resources: ["events"]
              verbs: ["create", "patch"]
            - apiGroups: ["storage.k8s.io"]
              resources: ["storageclasses"]
              verbs: ["get", "list", "watch"]
        kubeconfig: /root/.kube/config

    - name: Create local-path provisioner cluster role binding
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: local-path-provisioner-bind
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: local-path-provisioner-role
          subjects:
            - kind: ServiceAccount
              name: local-path-provisioner-service-account
              namespace: local-path-storage
        kubeconfig: /root/.kube/config

    - name: Create custom local-path provisioner config with /srv/monitoring_data path
      kubernetes.core.k8s:
        state: present
        definition:
          kind: ConfigMap
          apiVersion: v1
          metadata:
            name: local-path-config
            namespace: local-path-storage
          data:
            config.json: |
              {
                "nodePathMap":[
                  {
                    "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                    "paths":["/srv/monitoring_data/local-path-provisioner"]
                  }
                ]
              }
            setup: |
              #!/bin/sh
              set -eu
              mkdir -m 0777 -p "$VOL_DIR"
            teardown: |
              #!/bin/sh
              set -eu
              rm -rf "$VOL_DIR"
            helperPod.yaml: |
              apiVersion: v1
              kind: Pod
              metadata:
                name: helper-pod
              spec:
                containers:
                - name: helper-pod
                  image: busybox
                  imagePullPolicy: IfNotPresent
        kubeconfig: /root/.kube/config

    - name: Deploy local-path provisioner
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: local-path-provisioner
            namespace: local-path-storage
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: local-path-provisioner
            template:
              metadata:
                labels:
                  app: local-path-provisioner
              spec:
                serviceAccountName: local-path-provisioner-service-account
                containers:
                  - name: local-path-provisioner
                    image: rancher/local-path-provisioner:v0.0.24
                    imagePullPolicy: IfNotPresent
                    command:
                      - local-path-provisioner
                      - --debug
                      - start
                      - --config
                      - /etc/config/config.json
                    volumeMounts:
                      - name: config-volume
                        mountPath: /etc/config/
                    env:
                      - name: POD_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                volumes:
                  - name: config-volume
                    configMap:
                      name: local-path-config
        kubeconfig: /root/.kube/config

    - name: Create local-path storage class
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: local-path
          provisioner: rancher.io/local-path
          volumeBindingMode: WaitForFirstConsumer
          reclaimPolicy: Delete
        kubeconfig: /root/.kube/config

    - name: Wait for local-path provisioner to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: local-path-provisioner
        namespace: local-path-storage
        wait: true
        wait_condition:
          type: Available
          status: "True"
        wait_timeout: 120
        kubeconfig: /root/.kube/config

    - name: Verify local-path storage class exists
      kubernetes.core.k8s_info:
        api_version: storage.k8s.io/v1
        kind: StorageClass
        name: local-path
        kubeconfig: /root/.kube/config
      register: storage_class_check

    - name: Display local-path provisioner status
      debug:
        msg: |
          âœ“ Local-path provisioner deployed successfully!
          Storage path: /srv/monitoring_data/local-path-provisioner
          Storage class: {{ storage_class_check.resources[0].metadata.name if storage_class_check.resources else 'NOT FOUND' }}