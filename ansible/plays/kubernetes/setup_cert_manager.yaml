---
# Install and configure cert-manager for TLS certificate management
- name: Install cert-manager on Kubernetes cluster
  hosts: monitoring_nodes
  become: true
  vars:
    cert_manager_version: "v1.13.3"
    
  tasks:
    - name: Ensure python3-pip is installed (required to install kubernetes client)
      apt:
        name: python3-pip
        state: present
        update_cache: yes
      when: ansible_facts['pkg_mgr'] == 'apt' or ansible_pkg_mgr is defined and ansible_pkg_mgr == 'apt'

    - name: Install kubernetes Python library for Ansible k8s module
      pip:
        name: kubernetes
        state: present
        executable: pip3
      become: true
      when: ansible_facts is defined and ansible_facts['python'] is defined

    - name: Create cert-manager namespace
      kubernetes.core.k8s:
        name: cert-manager
        api_version: v1
        kind: Namespace
        state: present
        kubeconfig: /root/.kube/config

    - name: Install cert-manager CRDs
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apiextensions.k8s.io/v1
          kind: CustomResourceDefinition
        src: https://github.com/cert-manager/cert-manager/releases/download/{{ cert_manager_version }}/cert-manager.crds.yaml
        kubeconfig: /root/.kube/config

    - name: Add cert-manager Helm repository
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: https://charts.jetstack.io

    - name: Install cert-manager using Helm
      kubernetes.core.helm:
        name: cert-manager
        chart_ref: jetstack/cert-manager
        release_namespace: cert-manager
        create_namespace: yes
        values:
          installCRDs: true
          prometheus:
            enabled: true
        kubeconfig: /root/.kube/config

    - name: Create self-signed cluster issuer for internal certificates
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: selfsigned-cluster-issuer
          spec:
            selfSigned: {}
        kubeconfig: /root/.kube/config

    - name: Create CA certificate for VMStation cluster
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: vmstation-ca
            namespace: cert-manager
          spec:
            isCA: true
            commonName: VMStation Root CA
            secretName: vmstation-ca-secret
            privateKey:
              algorithm: ECDSA
              size: 256
            issuerRef:
              name: selfsigned-cluster-issuer
              kind: ClusterIssuer
              group: cert-manager.io
        kubeconfig: /root/.kube/config

    - name: Create VMStation CA cluster issuer
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: vmstation-ca-issuer
          spec:
            ca:
              secretName: vmstation-ca-secret
        kubeconfig: /root/.kube/config

    - name: Create certificates for monitoring services
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: "{{ item.name }}-tls"
            namespace: monitoring
          spec:
            secretName: "{{ item.name }}-tls"
            issuerRef:
              name: vmstation-ca-issuer
              kind: ClusterIssuer
            commonName: "{{ item.common_name }}"
            dnsNames:
              - "{{ item.common_name }}"
              - "{{ item.name }}.monitoring.svc.cluster.local"
              - "{{ item.name }}.monitoring"
        kubeconfig: /root/.kube/config
      loop:
        - name: grafana
          common_name: grafana.vmstation.local
        - name: prometheus
          common_name: prometheus.vmstation.local
        - name: loki
          common_name: loki.vmstation.local