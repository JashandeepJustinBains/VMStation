- name: Basic security and functionality setup
  hosts: all
  become: true
  tasks:
    - name: Install and configure UFW (Debian)
      apt:
        name: ufw
        state: present
      when: ansible_os_family == 'Debian'
    - name: Set UFW default deny incoming
      command: ufw default deny incoming
      when: ansible_os_family == 'Debian'
    - name: Set UFW default allow outgoing
      command: ufw default allow outgoing
      when: ansible_os_family == 'Debian'
    - name: Allow all local network connections
      command: ufw allow from 192.168.0.0/16
      when: ansible_os_family == 'Debian'
    - name: Allow SSH from local network
      command: ufw allow from 192.168.0.0/16 to any port ssh
      when: ansible_os_family == 'Debian'
    # If using VPN on compute_node, allow VPN port (example: 1194 for OpenVPN)
    # - name: Allow VPN port
    #   command: ufw allow 1194/udp
    #   when: ansible_os_family == 'Debian'
    # For media server file share, allow NFS (if used)
    # - name: Allow NFS
    #   command: ufw allow from 192.168.0.0/16 to any port nfs
    #   when: ansible_os_family == 'Debian'
    - name: Install and configure firewalld (RHEL)
      yum:
        name: firewalld
        state: present
      when: ansible_os_family == 'RedHat'
    - name: Harden SSH configuration
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
        state: present
      notify: Restart SSH
    - name: Install fail2ban
      apt:
        name: fail2ban
        state: present
  handlers:
    - name: Restart SSH
      command: systemctl restart sshd

- name: Install and configure node_exporter
  hosts: monitoring_nodes
  become: true
  vars:
    node_exporter_version: "1.7.0"
    node_exporter_url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
  tasks:
    - name: Download node_exporter
      get_url:
        url: "{{ node_exporter_url }}"
        dest: /tmp/node_exporter.tar.gz
    - name: Extract node_exporter
      unarchive:
        src: /tmp/node_exporter.tar.gz
        dest: /opt/
        remote_src: yes
    - name: Link node_exporter binary
      file:
        src: /opt/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter
        dest: /usr/local/bin/node_exporter
        state: link
    - name: Create systemd service for node_exporter
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Prometheus Node Exporter
          After=network.target
          [Service]
          User=root
          ExecStart=/usr/local/bin/node_exporter
          [Install]
          WantedBy=default.target
    - name: Enable and start node_exporter
      systemd:
        name: node_exporter
        enabled: yes
        state: started


- name: Install and configure Grafana
  hosts: monitoring_nodes
  become: true
  vars:
    grafana_version: "10.2.3"
    grafana_deb_url: "https://dl.grafana.com/oss/release/grafana_{{ grafana_version }}_amd64.deb"
  tasks:
    - name: Download Grafana deb package
      get_url:
        url: "{{ grafana_deb_url }}"
        dest: /tmp/grafana.deb
    - name: Install Grafana
      apt:
        deb: /tmp/grafana.deb
        state: present
    - name: Ensure Grafana service is enabled and started
      systemd:
        name: grafana-server
        enabled: yes
        state: started
    - name: Allow Grafana port 3000 through UFW (Debian)
      command: ufw allow 3000/tcp
      when: ansible_os_family == 'Debian'
    - name: Allow Grafana port 3000 through firewalld (RHEL)
      firewalld:
        port: 3000/tcp
        permanent: yes
        state: enabled
      when: ansible_os_family == 'RedHat'
