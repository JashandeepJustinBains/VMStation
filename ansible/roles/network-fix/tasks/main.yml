---
# ===================================================================================
# Network prerequisites for Kubernetes with Flannel CNI
# OS-aware setup for Debian (iptables) and RHEL 10 (nftables)
# ===================================================================================

- name: Disable swap
  ansible.builtin.command: swapoff -a
  changed_when: false
  ignore_errors: true

- name: Disable swap in fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*\s+swap\s+.*)$'
    replace: '# \1'
  ignore_errors: true

- name: Load kernel modules
  ansible.builtin.modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - br_netfilter
    - overlay
    - nf_conntrack
    - vxlan

- name: Persist kernel modules
  ansible.builtin.copy:
    dest: /etc/modules-load.d/kubernetes.conf
    content: |
      br_netfilter
      overlay
      nf_conntrack
      vxlan
    mode: '0644'

- name: Set sysctl parameters
  ansible.builtin.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
    sysctl_set: yes
  loop:
    - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
    - { name: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
    - { name: 'net.ipv4.ip_forward', value: '1' }

- name: Persist sysctl settings
  ansible.builtin.copy:
    dest: /etc/sysctl.d/99-k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward = 1
    mode: '0644'

- name: Ensure /etc/cni/net.d exists
  ansible.builtin.file:
    path: /etc/cni/net.d
    state: directory
    mode: '0755'

- name: Ensure /run/xtables.lock exists
  ansible.builtin.file:
    path: /run/xtables.lock
    state: touch
    mode: '0644'
  ignore_errors: true

# OS-specific package installation
- name: Install network packages (RHEL)
  ansible.builtin.package:
    name:
      - iptables
      - iptables-nft
      - nftables
      - conntrack-tools
      - socat
      - iproute-tc
    state: present
  when: ansible_os_family == 'RedHat'

- name: Install network packages (Debian)
  ansible.builtin.package:
    name:
      - iptables
      - conntrack
      - socat
      - iproute2
    state: present
  when: ansible_os_family == 'Debian'

# Firewall configuration
- name: Stop and disable firewalld (RHEL)
  ansible.builtin.service:
    name: firewalld
    state: stopped
    enabled: false
  when: ansible_os_family == 'RedHat'
  ignore_errors: true

- name: Set iptables FORWARD policy to ACCEPT
  ansible.builtin.command: iptables -P FORWARD ACCEPT
  ignore_errors: true
  changed_when: false

# RHEL 10 nftables backend configuration
- name: Configure iptables to use nftables backend (RHEL 10+)
  ansible.builtin.command: update-alternatives --set iptables /usr/sbin/iptables-nft
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version is version('10', '>=')
  ignore_errors: true
  changed_when: false

- name: Configure nftables permissive rules (RHEL 10+)
  ansible.builtin.shell: |
    if ! nft list table inet filter &>/dev/null; then
      nft add table inet filter
      nft add chain inet filter input '{ type filter hook input priority 0; policy accept; }'
      nft add chain inet filter forward '{ type filter hook forward priority 0; policy accept; }'
      nft add chain inet filter output '{ type filter hook output priority 0; policy accept; }'
      nft list ruleset > /etc/sysconfig/nftables.conf || true
    fi
  args:
    executable: /bin/bash
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version is version('10', '>=')
  ignore_errors: true
  changed_when: false

# SELinux configuration (RHEL)
- name: Set SELinux to permissive (RHEL)
  ansible.posix.selinux:
    policy: targeted
    state: permissive
  when: ansible_os_family == 'RedHat'
  ignore_errors: true

- name: Persist SELinux permissive (RHEL)
  ansible.builtin.lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=permissive'
  when: ansible_os_family == 'RedHat'
  ignore_errors: true
