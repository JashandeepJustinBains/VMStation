# Debug: Show spin_targets and hostvars structure for troubleshooting
- name: Debug spin_targets and hostvars
  debug:
    msg:
      spin_targets: "{{ spin_targets }}"
      hostvars: "{{ hostvars }}"


# Idempotent cluster spin-down helper (intended to be run from the masternode)
# Each task must start with - name: and be a dictionary.

- name: Ensure spin artifacts directory exists
  file:
    path: /tmp/ansible-spin-artifacts
    state: directory
    mode: '0755'

- name: Save current replica counts for deployments
  shell: |
    kubectl -n {{ item }} get deploy --no-headers -o custom-columns=":metadata.name,:spec.replicas" || true
  with_items:
    - kube-system
    - jellyfin
  register: deploy_list

- name: Save deployment snapshot to artifact
  copy:
    content: "{{ deploy_list.results | to_nice_yaml }}\n"
    dest: /tmp/ansible-spin-artifacts/deploy_snapshot.yml

- name: Scale deployments to zero (kube-system and jellyfin)
  shell: |
    kubectl -n {{ item }} scale deploy --all --replicas=0 || true
  with_items:
    - kube-system
    - jellyfin

- name: Cordon target nodes
  shell: |
    kubectl cordon {{ item }} || true
  with_items: "{{ spin_targets }}"

- name: Drain target nodes safely (ignore daemonsets, delete local data if requested)
  shell: |
    kubectl drain {{ item }} --ignore-daemonsets --delete-emptydir-data --force --timeout=120s || true
  with_items: "{{ spin_targets }}"

- name: Wait for pods to terminate gracefully
  pause:
    seconds: 10

- name: Optionally power off targets via IPMI or WOL (guarded)
  when: allow_power_down | default(false)
  block:
    - name: Power off via ipmitool if host has ipmi inventory var
      shell: |
        ipmitool -I lanplus -H {{ hostvars[item].ipmi_host | default('') }} -U {{ hostvars[item].ipmi_user | default('') }} -P {{ hostvars[item].ipmi_pass | default('') }} chassis power off || true
      with_items: "{{ spin_targets }}"
    - name: Send WOL packets as fallback when mac present
      shell: |
        wol {{ item.wol_mac | default('') }} || true
      with_items: "{{ spin_targets }}"
