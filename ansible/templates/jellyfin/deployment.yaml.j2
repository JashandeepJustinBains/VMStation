apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app: jellyfin
    component: media-server
spec:
  replicas: 1  # Start with 1 replica, HPA will scale as needed
  selector:
    matchLabels:
      app: jellyfin
      component: media-server
  template:
    metadata:
      labels:
        app: jellyfin
        component: media-server
    spec:
      # Prefer storage nodes for media access
      nodeSelector:
        # This will be dynamically set to prefer storage_nodes
        node-role: storage
      tolerations:
      - key: "storage-node"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["jellyfin"]
              topologyKey: kubernetes.io/hostname
      containers:
      - name: jellyfin
        image: jellyfin/jellyfin:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8096
          name: http
        - containerPort: 8920
          name: https
        - containerPort: 1900
          name: discovery
          protocol: UDP
        - containerPort: 7359
          name: auto-discovery
          protocol: UDP
        env:
        - name: JELLYFIN_PublishedServerUrl
          value: "{{ jellyfin_published_url | default('http://192.168.4.61:8096') }}"
        # Hardware acceleration environment variables
        - name: NVIDIA_VISIBLE_DEVICES
          value: "all"
        - name: NVIDIA_DRIVER_CAPABILITIES
          value: "compute,utility,video"
        # Jellyfin transcoding options
        - name: JELLYFIN_FFmpeg__analyzeduration
          value: "200M"
        - name: JELLYFIN_FFmpeg__probesize
          value: "1G"
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "2.5Gi"  # Max 2.5GB as per requirements
            cpu: "2000m"     # 2 cores max for transcoding
        volumeMounts:
        - name: media
          mountPath: /media
          readOnly: true
        - name: config
          mountPath: /config
        # Hardware acceleration device mounts
        - name: dev-dri
          mountPath: /dev/dri
          readOnly: false
        - name: dev-nvidia0
          mountPath: /dev/nvidia0
          readOnly: false
        - name: dev-nvidiactl
          mountPath: /dev/nvidiactl
          readOnly: false
        - name: dev-nvidia-uvm
          mountPath: /dev/nvidia-uvm
          readOnly: false
        livenessProbe:
          httpGet:
            path: /health
            port: 8096
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8096
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        # Security context for hardware access
        securityContext:
          privileged: false
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
            drop:
            - ALL
          runAsUser: 0  # Required for hardware access
        # Startup probe for initial setup
        startupProbe:
          httpGet:
            path: /health
            port: 8096
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media-pvc
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin-config-pvc
      # Hardware acceleration device volumes
      - name: dev-dri
        hostPath:
          path: /dev/dri
          type: Directory
      - name: dev-nvidia0
        hostPath:
          path: /dev/nvidia0
          type: CharDevice
      - name: dev-nvidiactl
        hostPath:
          path: /dev/nvidiactl
          type: CharDevice
      - name: dev-nvidia-uvm
        hostPath:
          path: /dev/nvidia-uvm
          type: CharDevice
      restartPolicy: Always
      dnsPolicy: ClusterFirst