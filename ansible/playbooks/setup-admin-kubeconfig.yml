---
# ansible/playbooks/setup-admin-kubeconfig.yml
# Ensures admin.conf is present and accessible on control plane and operator hosts
# This playbook runs after Kubespray deployment to make kubeconfig accessible

- name: Setup Admin Kubeconfig for Monitoring and Infrastructure
  hosts: monitoring_nodes
  gather_facts: true
  become: true
  
  vars:
    kubespray_artifacts_dir: "{{ lookup('env', 'HOME') }}/.cache/kubespray/inventory/mycluster/artifacts"
    admin_conf_source: "{{ kubespray_artifacts_dir }}/admin.conf"
    admin_conf_dest: "/etc/kubernetes/admin.conf"
    operator_kubeconfig: "{{ lookup('env', 'HOME') }}/.kube/config"
  
  pre_tasks:
    - name: Display setup info
      ansible.builtin.debug:
        msg: |
          Setting up admin kubeconfig
          Source: {{ admin_conf_source }}
          Destination: {{ admin_conf_dest }}
          Operator: {{ operator_kubeconfig }}
    
    - name: Check if Kubespray artifacts exist
      ansible.builtin.stat:
        path: "{{ admin_conf_source }}"
      register: artifacts_stat
      delegate_to: localhost
      become: false
  
  tasks:
    - name: Fail if admin.conf not found
      ansible.builtin.fail:
        msg: |
          Admin kubeconfig not found at {{ admin_conf_source }}
          Have you completed the Kubespray deployment?
          Expected location: {{ kubespray_artifacts_dir }}/admin.conf
      when: not artifacts_stat.stat.exists
    
    - name: Ensure /etc/kubernetes directory exists
      ansible.builtin.file:
        path: /etc/kubernetes
        state: directory
        owner: root
        group: root
        mode: '0755'
    
    - name: Copy admin.conf to control plane
      ansible.builtin.copy:
        src: "{{ admin_conf_source }}"
        dest: "{{ admin_conf_dest }}"
        owner: root
        group: root
        mode: '0600'
        backup: true
      register: copy_result
    
    - name: Display copy result
      ansible.builtin.debug:
        msg: |
          Admin kubeconfig copied to {{ admin_conf_dest }}
          Backup created: {{ copy_result.backup_file | default('N/A') }}
    
    - name: Verify kubeconfig is valid
      ansible.builtin.command:
        cmd: kubectl --kubeconfig={{ admin_conf_dest }} cluster-info
      changed_when: false
      register: cluster_info
    
    - name: Display cluster info
      ansible.builtin.debug:
        var: cluster_info.stdout_lines
  
  post_tasks:
    - name: Setup operator kubeconfig
      block:
        - name: Ensure operator .kube directory exists
          ansible.builtin.file:
            path: "{{ lookup('env', 'HOME') }}/.kube"
            state: directory
            owner: "{{ lookup('env', 'USER') }}"
            mode: '0700'
          delegate_to: localhost
          become: false
        
        - name: Copy admin.conf to operator kubeconfig
          ansible.builtin.copy:
            src: "{{ admin_conf_source }}"
            dest: "{{ operator_kubeconfig }}"
            owner: "{{ lookup('env', 'USER') }}"
            mode: '0600'
          delegate_to: localhost
          become: false
          register: operator_copy
        
        - name: Display operator setup result
          ansible.builtin.debug:
            msg: |
              Operator kubeconfig configured at: {{ operator_kubeconfig }}
              To use: export KUBECONFIG={{ operator_kubeconfig }}
          when: operator_copy.changed
      
      tags:
        - operator
        - kubeconfig

- name: Verify Kubernetes Cluster Access
  hosts: localhost
  gather_facts: false
  become: false
  
  vars:
    operator_kubeconfig: "{{ lookup('env', 'HOME') }}/.kube/config"
  
  tasks:
    - name: Check if kubectl is available
      ansible.builtin.command:
        cmd: which kubectl
      changed_when: false
      register: kubectl_check
      failed_when: false
    
    - name: Verify cluster access
      ansible.builtin.command:
        cmd: kubectl --kubeconfig={{ operator_kubeconfig }} get nodes
      changed_when: false
      register: nodes_output
      when: kubectl_check.rc == 0
    
    - name: Display node status
      ansible.builtin.debug:
        msg: |
          Kubernetes cluster is accessible
          
          Nodes:
          {{ nodes_output.stdout }}
      when:
        - kubectl_check.rc == 0
        - nodes_output is defined
        - nodes_output.rc == 0
    
    - name: Warn if kubectl not found
      ansible.builtin.debug:
        msg: |
          WARNING: kubectl not found in PATH
          Please install kubectl to verify cluster access
          
          Installation:
          - Debian/Ubuntu: sudo apt-get install kubectl
          - RHEL/CentOS: sudo dnf install kubectl
          - Or download from: https://kubernetes.io/docs/tasks/tools/
      when: kubectl_check.rc != 0
