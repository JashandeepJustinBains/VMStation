# VMStation Secrets Template for ansible-vault
# This file shows the structure and variable names for secrets that should be encrypted.
# 
# To create the actual secrets file:
# ansible-vault create ansible/group_vars/secrets.yml
#
# Add these variables with real values (encrypted):

# === Grafana Admin Password ===
# Default admin password for Grafana web interface
grafana_admin_pass: "your_secure_grafana_password"

# === Quay Registry Credentials (Optional) ===
# Container registry credentials for pulling private images
quay_username: "your_quay_username"
quay_password: "your_quay_password"

# === Samba/File Sharing Password ===
# Password for Samba file sharing services
samba_password: "your_samba_password"

# === Sudo Password for R430 Node ===
# Sudo password for the R430 compute node automation
vault_r430_sudo_password: "your_r430_sudo_password"

# === Usage Instructions ===
# 1. Create encrypted secrets file:
#    ansible-vault create ansible/group_vars/secrets.yml
# 
# 2. Add the variables above with real values
#
# 3. Set ansible_become_pass in all.yml to reference the vaulted password:
#    ansible_become_pass: "{{ vault_r430_sudo_password }}"
#
# 4. Use vault password file or prompt during playbook runs:
#    ansible-playbook -i inventory.txt --ask-vault-pass playbook.yml
#    # OR
#    echo "your_vault_password" > ~/.vault_pass.txt
#    ansible-playbook -i inventory.txt --vault-password-file ~/.vault_pass.txt playbook.yml
#
# === Drone CI/CD Secrets (REQUIRED) ===
# GitHub OAuth Application credentials for Drone CI integration
# These are REQUIRED for Drone CI to function as a source code management system
# Create GitHub OAuth app at: https://github.com/settings/applications/new
#
# GitHub OAuth Application setup:
# - Application name: VMStation Drone CI
# - Homepage URL: http://your_server_host:32001 (replace with your actual host)
# - Authorization callback URL: http://your_server_host:32001/login
#
# REQUIRED: GitHub OAuth client ID from your OAuth app
drone_github_client_id: "your_github_oauth_client_id"

# REQUIRED: GitHub OAuth client secret from your OAuth app  
drone_github_client_secret: "your_github_oauth_client_secret"

# REQUIRED: Drone RPC shared secret - generate with: openssl rand -hex 16  
drone_rpc_secret: "your_generated_rpc_secret"

# REQUIRED: Drone server hostname (used for OAuth callbacks and server identification)
# Examples: "drone.example.com", "192.168.4.62:32001", "your_node_ip:32001"
# NOTE: This should NOT include http:// or https:// - just hostname:port
drone_server_host: "your_drone_server_hostname"

# === Alternative Configuration Methods ===
# If you've already created drone-secrets in Kubernetes manually:
# 1. The playbook will detect existing secrets and proceed without requiring these variables
# 2. You can validate current configuration with: ./scripts/validate_drone_config.sh
# 3. To update secrets manually: kubectl edit secret drone-secrets -n drone

# === Security Notes ===
# - Never commit this file with real passwords
# - Keep vault password secure and separate from repository
# - Rotate passwords regularly
# - Use strong, unique passwords for each service